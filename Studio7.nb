(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1200303,      22337]
NotebookOptionsPosition[   1184024,      22070]
NotebookOutlinePosition[   1184365,      22085]
CellTagsIndexPosition[   1184322,      22082]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"$Assumptions", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "\[Element]", "Integers"}], ",", 
    RowBox[{"0", "<", "x0", "<", "1"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.761054326506833*^9, 3.761054372518608*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"d6e3e0cd-cb36-434c-bd22-d6a20d1099f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"n", "\[Element]", 
    TemplateBox[{},
     "Integers"]}], ",", 
   RowBox[{"0", "<", "x0", "<", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76105437326432*^9, 3.761143358370002*^9, 
  3.7611458683620768`*^9, 3.761146021838895*^9, 3.761506024815006*^9, 
  3.761581116539879*^9, 3.761596579649228*^9, 3.762640909000821*^9, 
  3.7628082098963146`*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"e2753d56-7ce7-41e1-b587-ba48c608e2ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "x0_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{"Piecewise", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], "+", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"Pi", 
           RowBox[{"(", 
            RowBox[{"x", "-", "x0"}], ")"}]}], 
          RowBox[{"2", "\[Delta]"}]], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"x", "-", "x0"}], "]"}], "<", "\[Delta]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "True"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.761146680987604*^9, 3.761146756335209*^9}, {
  3.761146799082749*^9, 3.7611468022442904`*^9}},
 CellLabel->"In[46]:=",ExpressionUUID->"4a51fb01-4824-495d-8ef7-9d3037074aab"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"x0", "-", "\[Delta]"}], 
     RowBox[{"x0", "+", "\[Delta]"}]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], "+", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"Pi", 
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}]}], 
         RowBox[{"2", "\[Delta]"}]], "]"}]}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "n", " ", "x"}], "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "1"], 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "n", " ", "x"}], "]"}], ")"}], "^", "2"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]], "//", "FullSimplify"}]], "Input",
 CellChangeTimes->{{3.761054200979971*^9, 3.7610543216930313`*^9}, {
  3.7610543816971183`*^9, 3.761054387629507*^9}, {3.761145550604747*^9, 
  3.761145553103902*^9}, {3.761145596966668*^9, 3.7611455985650716`*^9}, {
  3.7611457197954574`*^9, 3.7611457209972415`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"8321ec60-f08c-4816-a682-19edd482a83e"],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", "\[Delta]", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"4", " ", 
       SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
       SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
    FractionBox[
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
     RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.7610543771147127`*^9, 3.761054389498299*^9}, 
   3.7611433661757126`*^9, 3.7611455557424936`*^9, 3.761145603216019*^9, 
   3.7611457245083556`*^9, 3.7611458716123934`*^9, 3.761146046027216*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"b9a859a7-e571-4600-8a5f-2275afb5654b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fourier Series for f(x) over [0,1]", "Subsubsection",
 CellChangeTimes->{{3.761147076381014*^9, 
  3.7611470879681635`*^9}},ExpressionUUID->"cf86cfe7-b4e5-4273-a9df-\
0d1e7035ea65"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"bk", "[", 
    RowBox[{"x_", ",", "k_", ",", "x0_", ",", "\[Delta]_"}], "]"}], ":=", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611435358922973`*^9, 3.7611436032652535`*^9}, {
   3.761143773452659*^9, 3.761143786868636*^9}, 3.761145561602687*^9, {
   3.7611456230131407`*^9, 3.7611456235616727`*^9}, {3.7611457320546727`*^9, 
   3.761145733514767*^9}, 3.7611460534216766`*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"b2740c01-ac50-485b-a10d-7d50ad0d7be6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"5", "\[Pi]", " ", "x01"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[Delta]1", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"5", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["5", "2"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"5", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
       RowBox[{"5", " ", "\[Pi]"}]]}], ")"}], 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "5", " ", "x"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7615137096667147`*^9, 3.761513771899832*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"85e364dd-38d0-4e07-b1f0-7e053bc8898f"],

Cell[BoxData[
 GraphicsBox[{{}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7615137728990483`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"aa5389ee-a8b9-46d3-87b5-36df0bf5c3ac"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"f0baf7f4-bb87-48dc-a4ff-c446bd06ca0e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761146763511054*^9, 3.7611467812049685`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"c5a2e4e5-7a34-43b4-bf21-2fcb86f125dc"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
V79ILr4NsQ7hrgJ7h/A/JwMk5w==
        "]], LineBox[CompressedData["
1:eJxFzm0wEwAcBvB56axWC3V1YtzEndcsJ4UPK9flvWN0PuTt5iXkKnKVTmll
jqL5MKJJXpZoZ+OyclnlaqfI+4hpbczS2EZd4abLqrvu/3/unnvu9+2hMs8z
0s0JBEL43/5bykFD2XZ+P53wP1p9jhu3HU1rzZvN7Ub3Ol6P9h5GE2duEUly
dHRVWa92Hj1HqqLxjWhzo8Da3nUAbD8U/IPug/ZrlE+mBaDTw6x4wij0+1qm
a/AlNCfQLjDrHdqhsCT1edYHsL8p5VmscBA8WOw33OcxAnaq1BnblkfBunWV
cpI2DuYv9QyQ78rAZMrjFY1mAlyeJc5ocPkIXjsq0GQWTYHzfaVde95Og1VC
6Z0x6gz4V/YEz/3qJ7DnMavNjB4FOKSJeqZzrxJ8mZLsPJegAnvpT5GmombB
u3Z+I0o30JaveaL9dXPgs3498q0RarAgjNnwag29qttnvVA9DxbHhlhwj2vA
RaHsh10LaOrn8Olm9hdw4OFirp3vAjjBccRoJkOvDlSoL7C+gmssk/IZLlr8
rxQ3mUvRW66x4gJyF8GEtiSR2nYJnHdfVGH7Bv3Ss5Roc04HtgnP87pJ1oMV
3qOyAgm6o57uokkygBNF/jaUTfQNdiNL8WQZ3K6l8MiRK+DSB+wU5Ul0GsPg
KoxBO0gkHVHx6Nuc033lTHSmf+33bQVo5+LdoVYt6M0jhTumWtFyw/x4iwBd
Gf808UQn2uTBuMiWoBVjnHoLGbq7ZD1VNonmBiW7N0+jIx4d6ApWol9cGepn
LaKrvQ9xYvToXHVdHHUF7RaZo+r9ibY0m+BXrqNnxUHZKRtoSXazD+03+p4T
adVkQv8B19k1/Q==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$575469#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 1.4999994330066375`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761146782082662*^9, 3.761146806686483*^9}, 
   3.7615060308670692`*^9, 3.761582549971325*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"906f1be1-4584-4a1f-8af6-49b17202bfc1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b5", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7615831715364027`*^9, 3.761583179219952*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"69ca82e0-c4f2-40b8-83db-2814732d7b45"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", "\[Pi]"}], 
  RowBox[{"5", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.761583167227059*^9, 3.7615831882064357`*^9}, 
   3.761596011663097*^9, 3.761604796084047*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"d90a47e5-9a5f-45d4-9307-6e7da9286188"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
     RowBox[{"b5", "*", 
      RowBox[{"Sin", "[", 
       RowBox[{"5", "Pi", " ", "x"}], "]"}]}], "+", 
     RowBox[{
      SubsuperscriptBox["\[Sum]", 
       RowBox[{"n", "=", "6"}], "10"], 
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", "\[Delta]1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
          RowBox[{"\[Pi]", "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
            SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
          RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616021883069797`*^9, 3.761602210155851*^9}, 
   3.7616022527473783`*^9, {3.7616024755572667`*^9, 3.761602505363225*^9}, 
   3.761605396016489*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"656c9f19-0cd7-4f79-87f0-9681ce625250"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUV3c8Fe4XpkVWVopUSMIXKSIqR6LMIpQo2YpkZo/rmtmEZESUbLL3i4Ss
7L33XslK9Xt/f/V5Ps85z3nOc96re9n1zO8bHiAhIbE/RELy/3/lDefaq+bV
Ja6b6CSTjCVKHLrFYjHKLAxZ8Uzbz5XdQSg+KjaPWRpsPxc5CSmHgkJLb24c
sxrEbmpmD9/7AA8NtivCmA1ATefd24a7X2D4os+tQGYbSLUiNkXIV0PC8Xve
fsyeIFvinD4p1g7u5HkXXjOHA7+Sm0L69hjw3gn1zbUIh8xnIzpCEuPQ4WU+
P1gfDmkupB/CPceB8yBfuoBtBPApDgqN0U5A3Z+PAl0dkdARkY38LkwC1c/I
K2cD3sGaB/WhFMVpiBp2vFXw9z382j8T+styHm6yPvo4oh4PTTWWbITceVjQ
FD1MnhkPrjHv3do35uHMkoN+Jn8CmIb0BdRZLYD5c5HzJEMJUHvlKtei+SLQ
G2SnfLqaCFLo4mCa9jJoPPqQvbb+EUYO6oXJeq3B6qAaRSLLJ+CMq0hMiF8D
b21yQ9VbnyBlcpmkv2QN8vTNWQrDP4EqzbeN+eU1oHl5w8tJNBleSrJ1+qit
wzdiv+YRl88gTbs+EnhqAy5n0B1hJU+DDMEhr5Tgn/Bd4JtOi2AayJTll5R8
+gk6X+zLXB+lAeHy6p3ksp8QWDhqMZ6WBvZHB5dpZ3/CXFXmYLJSOqSUqbZw
X9+E991yXy69yYCrt9mC74xuAuU/98d3zmQDxQkrGyfyLYh6/lCb73Y2EE/z
Kjxj3gLOLj4dupfZIEQ9HifAuwUSqb36gxXZsFV2//kdhS0oSY0sKBLIgSNN
ef6f/bdgWXWpXKE1B45ueffTH94G4aO9NyQmciDxlidTMMM2OFZWVwpu5cAY
fd3XSfZtION5W3X8zBd4TOUvxiSxDex/b9aOmn2BjU91gu9ttkE95W2TNXUu
TAcpeAsObEPsE6KiEXsu3OZvUxSY2YYJerMWjSu5YKH6r//gxjaYu0j9uPEk
F0o8XvwncnQHXt9f7iDLzIW6I1a/Cq/sQBtZn+peVS5wnXktZiW5A0wVNV1L
XblAkWHIeFhhB5IuRPW07+fCkkmdy5enO1CxLzUQo5gHlXNbiNNnBw7l8msF
6eSBxaymRmzIDsgbnxwi2OQBQ8A5i8V3O9DbvjxsGJsHHm2WzLQZO7CeHDV+
cSkP0hwuy1m37sDVxx56HCT5IFYg2ZbcswOudC8nGRnzgVU+u/fLyA5QOt+a
3r2WDxnHtMzvruzAeZWVua/++cChU06VSLkLLG53xI0/5EOaELUPF8Mu0GYm
+FMU5cNv9U47J5Zd2CNXFVCZyAfLA+w9kdy7sCaS4ba5nQ/23okqTy7uwrTB
4fa31AXQVxfwdPPKLrRVFVmPXC2APPXLauFSu/Bthfab+90CUIr4pxgnuwul
rCZM5w0KQGFUY9/27i58smctMQ0uAMfW5ymxj3bBUdD978401qPTtc012wVz
7YF7sb8LYEtWS0fKahcMAoQ+AF0hOP0y1U2y3YV7c9O3vK8XAmV3+ESf6y5I
M0EEz/1C8BhoImQSd0FcOmqm2bgQBG48sFL13gXOBPnXDG8KQU2PKpQhcBeY
W5MGClMKIQdJj/GH7ALN/v5/mpWFUD49V8f8ZhcO8T5w+dNZCMV3RR72RuzC
7sPs1oT5QvC+NJNkFLULK17kbNL/CmGAib+qPnoXpvJ0LWcZi2DgRSnai92F
/vHSGj/eImBhLi78934XWo8xMgpIFgH90caSnoRd+HrDzLBdvQg2qqhH3BJ3
odi0rtDGtAjW5pjFfiftQta7s+Qn3YvgQP+fMdlPu5BUb/+oLLIIyM7dXHqW
vAtRv9rTtDOKwOTUpKXW510IOvffPmlNEYjraL5mS9kFDxVPpU+9RfBVO1y+
GGN7t+H3sstF8LZ3s4UjdRfMMkXWFg8UA5OuOp8OxnqDwTeDTxaD39whNwuM
NY7Oh10WKIbUS/WjqhgriUpNdd8qhhy1rmcUGEsZxlxxeFQMf8X7hMOx/tU3
m96s5sUgwbKhvY798Fcr9SHPYji5kneAA2OO1WQe/ehisFpjv86F/Z84TeJ0
JKcYbtLmXvj7cReoFB41p34rhh0jhYlUvP8Bh9zTSoPF4JQh85oH57OdTGm+
tlYMZanPxF1wfktdBlVvjpTAfOoiwyec78SBSjpR1hK4sWAj/AHn36xtke9y
pwTqzTXrmfC9agK+H2Z/UgLNtdwOIfieRaUcD2utSqDg3tjaSNguJDJ171K8
LwHpH28L9gJ24a20gEJWXgmYXDKRaXi9CwFWPrEq30vggMV3NlP8nuxaxSBq
swScU3SlL7nh9yNQMP2dvBSUXfaZo5x24WOgYMBv1lIYKkm/MmC3C+2KF/q1
ZUqhy6Qyf818F/5rYrQ+H1kK5/YnTppoY3+8IcwP00oh6DS3QRb+PGj4UVb5
VpaCTMuNuVa1XfCSO0C9NFMKOa7dzJ/kd2G0fjU5V7QMGuQy01OFd8H2gqnS
lEIZPFTVke4UwHn6zPw8rlMG1ypkTg3gz6/Y7WFJB98yGP+QQUlg3YU3tY0D
0F8GSXF3KwUP7MKd6k80LY7lIKHk4yVdvwMjbOwFf4PKweBtvdt9tAM2hFgt
waRyWAvGf4yLduADvEl501QOkpfofpUk78DvCoKUJmsFJOduPhPw3IHsUi3b
2YoKKE7mqLomtgO3WXpZmTsqgEpdbk714g4MOdz/Kj9TAdcZUinunt+Bo2Jy
tFk0lUDGf2J6jnYH9ItE0myeVoJJu1RgBf77fCKfboSUFEGgR+MV8sBteBzw
W22KCUHxqNjMQ8I2JBpMN9XxIRia6/Hwsd4GvuMlJf4aCJJba018Hm2DlK1O
xPEcBN9Ioi7Rcm6DSOzD5PCLVfBEvDHTPm8LdLWTn6SMVIGAbuAF2Ypf4Cl/
6t27+SrI+li+RZb5C5JFQrr8NqtglWfiSnbsL1iicVQwo6iGMk3Jf/lOv8AW
KYldFqmGha/Xkj5e/QUBbL8YywOrAZZsvyhkbULhxK3mH9drQFQ3X9fB7yf0
yLqvB96pgZezKdV7dj9hK6uSSfF+DRwW+cb3wvAniDqJ6TYY18BfCyYWNsmf
UMxwcasqrAYSCNXknZsbUCLNwpY7VwO3SF1XorU2oDx5zTo8/CvIUZLJP2Vb
hxqTuFOPlmph+UxqYvuFZfjFdeNYplk9kB4zrvjzZRIkJqTq/ezrwTX0Dluk
3yR4x8m6PfOoh8e3Vldu6U8CE6Pa6rl39aD9ksg1zjgJIqSmP6Jr68HpUvb1
/xwmwH4wKtj3VAPwGcvMytweh/3gzWMG3xvAd7H5quH8MEgr7NXf7GoAVuEp
0fMfhiHgCAnh7GgDVCosUJ17NAynXSjXBjYbgKcuHwa+D4GECUebCtt3UJsV
zJDOGgQ3aeUQsPsOdwsOX7Px6IcDu+m0p843wp/P30nk9brhVIvUT7jYCEFZ
Z/8b4eoG4Q/93QZijXBCWpo8f7ELDOXIYrKUGuGgoNzaedsuaHind17KthHE
HQzbeII6IVicWfx5fSOIlVYen29sB1Znb/2i500gOBhBCF5vhivKp28PWTcB
SXHEV/KAZrjLmc9N6toE0l7bWfQXmsGteXxZPqwJbAOev+vXboIJ1hv2I6VN
YC/BeuBa93dIrfgZcJiqGcTJKAluw3Ug8k+nUDWrGQxMZLsknlSDolIVUaa4
Gao8Sw63UVaDfszZe6I1zdAaTfJ7rbQKQkRHZll6mqHv1SfZCZYqmDfXYp74
g/tXwgwOf62A2DF1ZwulFggpjDz3kqEEcgUKZPUetkDzOQ4ZH2IxNDgzHlfT
bQFpZnEmtFEEv052Zoq+aoG10zrMfj2FcFdFefRvbAs460bx+KbnA2mNvFTg
Ugv0LRhPLPvlwEnaNBq3rRawV5/o7KHMAQHto4MWJK1gzxnlnX8qGzT36q3V
GFshYeWypDZvJuRflvl06norEMYfelHqpYJREpCn+bcCm39HJLl4Ijivv++K
iWgFbkb5pFpt/NcD/iYExreCTv5P+s9eCVA1WC5mmdcKIeVcqgV5ccDMKG56
dbAVqsx4CotF30Kzp3BrHe8PqNo0fdDF6A3ix5oOhF75AQmS3rTma0RIeacr
qiX5AyT/67v4Jt0NPLKCElbVfwBBonlF0skaxPvmrE66/wCSka2tvdV7KOW/
uBMmvT9Ah2w2yz7HBzEVCikKT/yAsazZjyHX/ZCnZCPh7xLW7y4WM0UBKCft
t40caRskvNfkrusKQf6Ie2SYqQ1CWHwWwDcCSc0Tc45ItQGbmSplzcn3yEGg
tdH0ThtUvfj7/cSJeJRjzTzdptgGviNF1EHkCejM32zmmIdtUKy5Fcexn4B2
6YeJF80wr2zq0vM9EQlqcMeFW7WBhQiT7OGrScgozrpo164NSFwfvWf7mIS6
LlAsfSW2gexCycwF248o57qoukZUG5w8rplWR5qMZt2J5hVxbbDzVPvV56fJ
6Ex9y2uOJOxH6iW/f1kyClAxqFzKbIO1eONJI7PP6JlR6AX3r23APS6TX1WS
guLTh27ONLSBctrOSQryVNSzduGxQiuef/vrdzO1VCTtVBlyvL8NokxOHwyZ
TUVnQxZ3U1faIOfBHZHw7TRUqeuWmvuzDcYqpUi6LqcjbSGGR2U7bXDVNbXL
/UU6iu0RL24+0A4awbcTLw2mo2sprcbdZO3wzO590lXaDDTgoHdihKodNhkC
UdGtDHTytJ/tKlM70HKQvOROzkBFK6e5dk61Q5V6+8mz3RnoQdWXbhL2dogl
K6OJOpCJIvT7hen/a4eGxF9spx5lIvo07p/C0A61yI4zazMTfXEqT7wh3Q42
3Co6/05kIWUl5fu35bAfFou4WbEsFLxm9+WhajvsZ2iE+zhkIYEaSl0djXbg
9KcLkn6bhVrfxNM+f9IO0nS95El5WYhKtN7c0bgd1sIHjt2by0Lp5FpnPV60
w2PCvZkPJNlIfmCl1d+yHUgqLnQknMhG8+lE13DbdpCV03C6y5+NfF2YBOKc
2iGBa9ov82Y2unAvbfgToR0ke7rTqtSyUR2bRGCWF64f4PH2M8pGh2sNl1Bw
O7zgDjyr5J2NPkbsxjSE4/xMqK4qhGcjaeNAhfZ37WBwrriK4kM2mrzK/rv/
fTuk6JQ/C8rIRkSKgrSJJKzfuDPaV5iN2IdkNRdTcJ5qv3qWUDaqyhw6upnZ
Dm2/e/4212ejp24WJfu57RDioXbUuTUb/VU+9PxwMa6XSk/Z78xGcRxRJ2kq
sP/NN8Eqfdno+uZ/DUw17dAVJmrpMpiNhr4hu7P17XBVlJPUYzgbOb1VvcDd
3A5DZFI/DUayEcvz2R7Bdpw/T8Pv8xiXijt5i/W0w1LZpR8NQ9noEdUxEanB
dnAeu8yhPJCNdoYTp+XH2kGxPjO1sicbvc0WiVCdxu+j/jPLiY5sJOLeKP14
oR18XSV4Hzdno5772psGq+1A9S82MORbNnrFuZFktol5kvXdwopsxLjlpWq7
2w5jZ3U4O/KzUX4980G3vzjvC3+qp9Kykeq7zFyfgx0grFPhsx6fjTZMbuqF
kHdA36oZ7+832Sj0ejfdO+oO0JBI1T7kk40EaZ5Xf6DvgOvPmvuOOWSjl19C
2PJYO4BcrOXlVc1sRO3B2VbG3gGVl7rWNeWyUYZasVstVwes9ZG89hPNRovb
oyPdgh3ASfCuOEWXjQqNg2vkRTogp+aaUcVeFiL0SiSjax0gPWMWfHcyCzEV
xZml3sb6JNuMSl+y0DiXksoZxQ6gsuu7Ux2ZhTIi94XfqHTAynf+lMtOWUjK
Vmvf+XEHjNXNhrHczELUMxRj67odYJQtvfiWIwv1qZd+NTLuAJvXc1RsB7PQ
yyvM/spWHUD/gFJcuzoTRW/2MHP6dsCR1eLWtcuZyNDA+09UYAfUkx2kPked
iQS7roxTv+mA/GVBCqeZDFSXF56yHdcBYXun41IjM9C61X3RprwO2Ij8Lqm9
nI5k11vUrEY7oLhRvJTMLg0x6LpcnZ3qAPMJsTAOmTQ00sbH+nihA/aqP6e9
pU9DNjn+kzK/cH9Vj2lceiqKN5ezYqbsBP/BwlsWPSloa7k2uEqkE2TaufM2
6D6jjwtljTT4//2EtLCZr1eS0Mu3986ZvOmE602HCPe3EpGo9KTTt6hO2I+s
N3tfmIga4yj4nZM64Zl+Qre9SCJaV34UPF/cCZd9SDYJQh+QRNGWau1kJ8ju
LI9ckX+P+j0uDTuIdYFshtgK42oEShT8dqVbogt09Jz2Lz6PQC+GNYIEpbtg
TkPn49PJcEQiSoDZu10gSRPWRN33BnEttH5QM+gC+46WZpavochG+YXRxeAu
ILzLFTp6xx/RnP68OjXVBWwqL6VeJNgiyQcew5PzXVB1M0q9usMGWQU/bZpY
wfhf+ru9I9aoh/Tk57GdLiDpe9PusfASvZ/x1R6i6oaqyMuPzLp0kECOSUun
cDeQhNj+uUauDjrzt8s6xDBeIaj/ytOCMI5zqe0S3SCZ8nBkllcXtsIHPX/I
4n6Z3dO5FcZQ6aB4vekx5gtfqibdtwKlWwLpNZ4Ybx+fji5yBVdninfVr7uB
zeMVTfEpAuQUzHhXBWH9uK28/wYIwMgdr1cZhbGKnfqH+0QYoqJlKc3A+i38
+eaXvOBFz7rvl65u0JmqMWD66Afvj7Xa5vRjTD3+UFDBH9pk0wyyR7ohgc+i
PnnNH4TL9CQz57ph7GvZcrxIIOzHd26n7GO8vMrrnRUMAc8LjBI4e0DyhZW7
EFcYLEhm+lLy9sDao8scFFZhcOfkpzTbixjLXKXrKw+DA/XhK4riPUBr4Sn+
4N4bcOC0sd291wPKLwqNa43Doee3aZSBeg8IPhWcuZEeDsKd+qU/NHH/hrZh
ynI4rLmr/v1k2AMhiTXLSuYRYDR62fu+E+YHTvU1GUZCbSFvSgWhB3IM3rVU
JEQCRxBHI7d3D1hQG1TEDkTC8HV6mn8heL7Ty0tsCm9BLXo9Ij25BxLkUP+V
s1GQazlfxJTRA4QwgQ4flSg4Jjfe7/4Fz1OhXK8lRkHjdttpjfIeIPkgoUky
EQU31XM+HerA8xVmC53evIP3fCn15r09wLZe7MFV8Q72DybMDwzh+e+KK8un
30FxbjD/l1mMy0kkMoSigcnP5x7rMt4/N/LX4UfRYK3rZumzgfn/BkkVXaJB
gNa84MkfrF8Tq/6+JhoCZo16Gw70AsnHk/fSJ6NhoVJ7V4i8F9oEz5MmH4yB
T2Z3b1Aw9IIg8NwxkowB1ib+b4XcvZDzQeAoW2YMOCaen2UX6IW1z5WQ8i0G
eh1OHw0U6gVaNRJdjuEYCOOmVtKX6IUxMzWyVfJYWPt3yLz1Vi+EdJKuSZ2O
hbu9+yFicrieysHPXzAWjnovdR1Tw3rnv839UY0FoydTW46PekGSo/oOj0Es
1AoPnZzR7gWL3MIgRetY4KDqElcx6IWqolOxz9xjgTDZ9Lj8Oe6/S6nuGhQL
I6VfXS+YY315kU9B0bFwLawsIcwG673rdI3+FAtRz/Nq/jhgf+9DBhKzY2FL
Mn3qmVsvECzci1KKY6H842KMnSfev239EV9VLBDJ+VS9X+N6vyrvtrpYkH3x
giIiqBd0+i6wRjbHAk1bRnXSm15QXqf549IeC11Cy/a5UdhP+l/a192xEP2W
X7A6DudLxSRd3BcLOr/NZn8k9kJC419vqsFY4Hqa9X7kM77H9/FW76FYWKpZ
UV/OwPNfax3nHo6FXK6L1PtfcH4hFhrrmLf3M6+lKML7fHOPnsT9EivZTszl
2A+SnPjXHwuH7q9d5q7G/Ywfxe/0xkJjgeCCSB3mIwdzSztjIYTZ8oNME/YX
KK2t9SMWHrh80VBrw35mnqjxNsYC6/j6Mf1ujB+W53DXxsKE9OV6ywHcT/wb
9rAiFlJSrFwJo/geR6vPFBfEwkuqvCvBU/ge8WFOCpmxIGzxcyluHuvTzXXR
f4yFvU6hjxkruP4OreYxfA/vmHz6xh2sv0lTnOERC4r/Nr/3/cH5vXx0QNku
Fuj1r7jPHuiDKuJtLX6TWHjPW7h6iLoPJP2ppGOUYsEgaCuZgb4PaA3v6AlI
xALvhog2x4k+EFRpSycRiIWCkqJmYO+DNr2Ig88oY8Hx9I7HXa4+IGzHlP3b
iQFJ96vXnvyH9Q6abQxOx0CzbEmq4xXM+62oGlfEwFRvqXeBHO7vLhxY04+B
tGu/b9Te7QML9SdGnQoxYBF/7VeHah/oxO1mHxaKgX2jcv21J1gv5rva03/R
wLhVIfmfFeblfxnQhkTDwKO/22J22B+5gGK0VTQkVEhkyzrjeWh5xk0tGvi8
0Gkj7z4YS43QM2CKBmnG6r2E6D4IAXbuyrB3YHO5Np/pax8kaDUPMptHgZEw
W0JoA/aXyaLQJR0FGiLO/lStOI+vkWeXmKPgmriw3oF+nF/HNYfrNW/hgNTH
YysrWD+seD2G8i0Eq3iafGPpB8m1DcfrHhGQZiHNZmPVD2ylX0R9j4dBrFUC
5aod5sfsPgoMhkKgzf7Wc5d+UA56YOWQEAoW9vktT337gVzT9M5h3lAQJXA6
KbzHWIZgeUUsBGqDD/VwNPYDySfl8dk3ATCaVevfzj4ABCkheY3XntC2fGjp
8oUB0Gkr3Bsm94QqPhnFcD7MUyYevOHrgb8HfKN6KDoAtOGVdm+9iaCXXBc4
pDgAyrN84ReJBJiJawietcP1CtzLA2v2sBzQ/OZPC8ZTZIKH1nVhpIlqU7tz
AEjmJkmcN59CK4WSWlUfxirWhKCjjyHLt4XRYxJjMuGP/66pgYVnawT5LsaE
pkgVRiHYdGp7y8A5CITkZNpQwiP026QrhsdxECQZ1G5XZ9kgNZEnoQJumHcd
p6F3fIUySGe8hTwHYay3y+W8tC3Sjtq2vBE0CGyF/QYeXXao+huLrEriILQR
34Z9nnZEPmy6m/aNgyC7xZdKrU9AY4vz8y4/BkGQDdgGKgjoapHVKLFrEBp4
fwzOnXBHC0qejQEjg2CxJC9a990dKTl9TkjYGIS1ufdeKpweiKFnWbGBZQj6
mLM77uR5oRcfbKVazmIsLRNsS+qNal/8E+3gHIKdF9R9rXe9ke1BunNDAkNg
ccW5dmvGG/ULCu+uSmGsaWhLQu2L4v0dP50wHQLlWFnDTQE/tPPgYAyrxRAI
Rg3+5DX3Q8ocASHsr4ZgTIJyzj7LDx0oiXP6z20Iri5d1HnI648MZ6pU4M0Q
6DAWxh45EYD+u0n216hsCJwT+108vwbi3+vpF/qqhmD/z1OSlZ1AJMyorCJX
NwQJo9PuV/mD0PXZqI//tQ9BSC/vwZdhQehuIK/C2swQ2E7oExXuBaOOrVYb
3SXcX7wqmekUjB7qWL/vWB+CVv2ZxcXkYKQjVL6evz8E0jwBKX93g5FVv1KU
A/0wCEoXUonJhaAtqY3qhRPD0M4SndGvGYKcMiIXtU4Pw5kEYu+saQjydBuV
kOAeBm0WswzFgBBEPu/xLJt/GChIHionxYSgwPvcYWxCw/C9n9raOC0ERZ63
nD4gMQxFz6Q0rtaFIJbg48dsbg1D+SCvqExnCIrfKbk6LTsMakqZLWg0BKU0
HQioVx2GkZMXX//dCkF8Vz4XXH00DEsMEUs1pKEo573CaKr2MDxmeuT5izIU
lViGXw54jufH9f/+dCYUSQxeffzn5TCM/TW4xnkhFNVID3u9tBmGR+cnXtJd
DEW3s9yzRx2GYdTBvc1MJBQ1nuDqV3Ybhm5Zn/diN0LRXffGAzWew6Cod/vU
q1uhqHPhJZ+QH96nkCWQTS4UaagxPPgYPAyn2/Ulrt8NRUMVRW7HI4Yh8Lqb
S8P9UKRz4XGqd/QwkPTWxH57EIqmQ0g6t+OHYfuQ3YaQZigy2fu4/+zTMET3
tfUxPAlFK/pyXANp2B/rUqbh01Bk1bJ8TyFnGCQVvnXy6IaibZEwh/KCYeB5
IZSjoxeKnBNEkvjLhsFuejyDQj8UkVAMNr+vwphfXpQbY09rt61jdcNw3zSz
qgTXHx0+x+beNAwnj9BUIqwXdLtBbqMN58PKkyKuE4roc15Y6/cMg++c+W9e
7VAUyUwX1zU4DKwUpFdDtULRKY+COpnxYXBu/DBuphGKEpYerRXODAMNFLlV
q4Uizgd/mbmXhiHnKcQFKIeiFJR46906vhdZY8MPhVDEz3PHjGJ7GJpnLcP9
b4ei3LDFSKd9/N6edEdUSYYikf3gqiXSEdC5cczIXDwUlRoKLzwhG4EXodkf
ooTwPX/0MfygGoFKofy563yh6E4iu/GXEyMgbTvAs3sqFAlH0XDVseL+WJLU
TIZQxBb0e2qAfQQ4UQRxjSIU7Tl06x3iGwHHzWKvczshaNa8hp350giEJNV1
M66EoC7D7DF+kRGgNRVtiZwMQZkqr7UfSo7AA98Z5nstISj6ju3pFzIjcNlx
LsW7OgR539AfIsiPQNbd7/dVCkKQDs8NzTS1EeA2f+SZiN8/A+m6+p9nI9Cw
p116Wz8EkWwPM9K/HAHJpDhTHrUQtLTU2MllPQInC30DPkqHoLq+jyrKLiNg
cVJ+3YgzBDnkaCglhWI/WmepdSuD0ejTKmm50hFYy5Bf/esZhJrVMw9qI4wL
H6t7agahYoXoGqta3E92iVz1YhAKE7WRjG0dgT67L+sdPYFI5hj39dWJESCh
Yx7zPx2I0iuDhSIoR6EviZXR0N8fReU7b6TSjkKKEq294gN/5Jn2/Evl8VGQ
NM499o7NH2lH3ro4d3YUnvlcEXue54foXm7zXhMeheJ7rXHMHa+R3emnHOOP
R6GB/XKR/i8fpKcs+GBIdxRy6Gpaiot90F0PUr9eo1Eg7B0zj3TyQVzzSest
FqNg4ctXv/HPG3Xlz1WVeo4CG5PJI4OD3khQ0eppeAbGAc37nVseaM7RK/bO
/ihUNZpQtoi7Ib4ldcpepTEgPD5Rzvz4OSpWU0R+ymMgubnFrHj8GbpVIWUt
oYr55uyc8FYjpBl0cfCTBsaLZnTBNw3Qa8Gj6Tb6Y0DC3i//XE0bzdiUy9M7
YDzyI/2UuDRK+MPhp/QR4+2alQdiT4DPiFmC9DPul9fnsop7CkWtxzbyUzGu
EZMJ/qcDrfH7j1izx6Aq2s3D5ok+/LnZw7NYgv3s+NyDo89A0/v1d98fWK+u
j34nwAIYjq2R1+6NAdtp2aXdX/bQUeHnI/dnDBL+fEn8auoAYS/OH/nxD+MF
nZ2EMQegb9Q8OHBoHPMsnwLqHYHe69ufVZpxkHzM+mHqtTPQ/o7eOHUO49Z9
pogRN2hLvWL54fw4VOmLq0lyECBEo22Vi3scQrZDVjPVCHCs8PDyJf5xUG5n
TlkqIgCNpcXsHdFxWCNrlB22cweqWZkha4VxELwjuFA9RITmiDHNXSWsV55m
U3fEAwKknfpdlcchR8S7U1jQAygTc3peq+P6zrGziu4eQPHkVHv8Uzzvj/kj
FVZPaKQsvHdeD/svWfoRctMT/EqVW9MMxkGH3Cld2MgTjp70bip4Pg5jAUm8
nzM9gbxz7VuTNe7XDDW8cMULGtz9pVVsMW5UPOio7gW+glxfe+yx39ufk/le
eQFZkFbVuAv2E5d7NifXC47I1ZVu+2C/vPcKznF5Q922jpiL3ziQTFy9bnLT
G7yTfxcdCBwHwgyTE/Vjbzh86FIBdRief/tW07NgbziEYrLPxWK9eY57Jive
MHBdWnb0Pc63/ddb3SM+kF26NBb9AedX4WoeedoHNAtv0NN/xvXTyt+L5HxA
UHgmrSUV80Fv+5O0feBIbtCt1xm4/7p/eLOVD3zJHLUhyR0H2uRxo84oH/D+
z5e6PB/7YaO79iXNBx6nCibbFY1D2xGiUFOZD5B/cu9dKcf53qqRzxv0gREO
Xos0hPHnQTX3BR/IS+ggN6rB84RrH/nv+IB27Dnx4XrcX3XMRJXeF4RZmjui
GnEeV7qC6M74wtEoG1O1lv/POzdOyeMLI8dPH6Jtw/57tpykhHwh/8232KYO
rK+361Zw3Rf86F5e8enGelwEBkMZX9AJZmqV6sP+zXz0VJR8QYQaGf0dwHoN
me8d1XyB0t/4X8kwzvvBxX9jmr4wRk4b9WoM3+v7WJWnji8UehcLXprEeZvy
chkZ+kLAId3vS9PY//QBO6/nvqBHPKqXMof1J+dJJl/4wlWS3D39RVz/foLJ
zdwXqF0135xdwfq3X9JpWvrCxO8DfINr2B+/910bK18odkivjfyJ65cjLrVi
HLSt+uT+Fs7/yatzzzDWf7X/i3oXv78nemFSuP/qz49B339jfwF760+wPo2l
0gWvv1ivU7isFM+fWvmFJEknYKxH88Uj7K/0xXuN/YMTUCVw4LU49h+ycHu9
6MgEEOIPR2vj/Qyfrb62PjoBkoyu/HV4f/GZtxwXqSZA2aesxxLnQ2sgWbZA
g+vRDQE9nN/M+JxqMt0EkPzOaH+L8y1/GrqkyzgBa8879Blu+ELYsJjX6RN4
fkBIQDe+j7HWxOl+5glIsB/cGcH3o38odE/57ASwJdE+b2TwhbmuwVlKjgkI
8fg5mknmCxX3PQn1nBNAyyZNGNzzgWd3u79I8E6ABeOTRydHfUCi2UV+jw/z
loZ8PG0+wCDPNVlwEc9TlH/iU+UDlTJ2jPxXJkAnYPnmxXgfCP96NnNOFPd/
OlPoGOgDz282yHwUx/PM/5GfcPIBxhvMdqck8b4Xlv7KqPmAqXBZ/1EFXH/Q
80TUX2+oauvOKFbCfLxp4sasNxw3W3MzVsb+4w9vpLd5A/p0nuub+gTk7Hyf
kUjwBoYTIVYEnQkQNPgnevCqNzzLS5O5qI/zO+c4bMHqDRX3vp0cMcTzqc+V
y5B4g7HvXuU1U9w/SvzMU+cFZbsGlNuvcL41J8L35L2ANtJt5JM95s8o3K7h
9QLDy9Ff1Jxw/5Fr4XtHveCY6Y+HuQTMX5/cqq7zBP0hsY9m/nh/orD4DzFP
oEQ0N6YSsN7Z+1JHyTxAR4uH9k0SvnfBxuSrESIUbN+avJmM95svffKsgAhP
BR1ex6fj/ZNuBE/pEiHvw2S3ZiHeN1jeWq/AHbQ8i1+2N+H9fm2mVt0hQLqc
XkLlFtZT9eMulXMEYT52CdjF9YTzV6lmHaCSZmwQ/cZ+nDgUxzwc8Dt9cqKa
ZBJIjH6rM5fbw+aTR0FfKSZB58El9lMX7EDCStm54cwkVDEar3ydt4a2aAmN
jtuTINl/YIjbxAR+LbLQzkTifkX90y5H2VB43Gx97DuMJbaXaMsEkNC9fDfV
WIx5fu3H54ogy1yl1aoPk0CYtBa3TJFCy/aE1pgMrMf45utehDKaPjwToFLz
f/w3Ib5PG3Wf/XK0YnkSEix6+oxIzZBNu0u19Rrutz1Hqdtuhhg85B14f2Ke
li/4bMJLpDIzOfd2ZxIsTj2omWe1QC0ZTA1WB6fA4kTMV5Rlib6JOXtzM08B
yV5AfGqODSpQvXMwXHoKwuUt1u1YHZGvQrEX650p2Dlw60qMkSN6fIuH/JPc
FMhWax/5me2IDghRUhfenYIq1TAWcUkndJf+B1OfxhRwCkj3/H7gjNgpJN/p
aE0BbSK68C7aGW2Sfjk1/2QKooauXX467Ixi1sPY9vSmoPgf685THRc01/aA
l9VsCp459Eoee+yKyhrqMz6aT+HfM9y8LVGuKKjq6kV+qylge75jk9rlioRz
WIQl7KagK2rTtljODbkHj9zQcZ+C65VWEr6MBMRy10jlY8QUNFp+qBodJqBl
md5OvqgpIBjvG6xvElDVDdkHBdFTsLR6R8iP0h0Z8fNq1cVjfxlGpfdE3VEe
1YrBXOoUKI+8O8P22h15H3o6a5ExBc0tFCk6se5Ic//H892sKUikOuB7Ptsd
kSx9eUmRPwVSWTVnrnW6I8WmV/Z8lTiviSCOoONEdPbrzF5+Fc7LIr92npOI
Nkofutz4OgWlq3FF9UJE9C5NjHi3Aedx+HTjUWUiepGYdqi3Eee3shFk9oSI
JKNP+TxtmQLXS9Sr902IaOb1H3+Ljil4KXdk9QORiErcX9LsduH8SleUKIOI
KMBhNMS9F/vv56/7FUVEl59XR4QNTcHQEZ6PSplEdFj38slTo1OQNps6UVpI
RH0aSdFJ41Og/e7oUgoiIjdZr/j8GeyHXkSYrI2IOrSfPRacx/7Tv51V7SUi
zlcKzBmLU3A18lQu5wgR2fkL9FxYwfrvJJacpoio8QPdm6S1KRCU4erQWCAi
1uLNe2d/ToFGdolJ2SoRmbf2UsX8mgLh260oaZOIaqZKvzPtTAGrGdcI3S4R
Mf6O8w7bm4I1bovuw3+IyIjO/RbNnymoTbxV7EbigUouGJD4/cPzUthj3Q56
ICqJOxWHD0xDFKvVu8NHPJC2Gq+j+6Fp4LxJbKIj90A5JtSif45MQ/4JD+WP
Rz3QQfe1n/ZHp0HDy0eugsIDPXjbmbNJOQ0NgcSBx5QeKCWz0MyCZhp2tGV4
PTDe+/qOd4l2GpoNXfQEMVYacJ41ZpgGctHcbAPcn7D29OPk8Wmo8r91kw3r
bxy5pfv05DRQHTCW0yfzQNKnuc4MskxDytb5P/yHPdBboaODD05Pg+BlrXDC
AQ+0ILf0tuPsNHjG5Mhp/SOi6zo/1O5yTINBXaxm5W8iCrLNpWvknIYAgg5Z
2jYRjQdEtMpcmAYbhUNvzvwkIuEke/9qnmnoqlS/xbpCRN4lWrI3+KZhaXlK
J2kO3/eHxOESgWngTiYVzZ8gov9m2GuEL+H6vGKGe0NE1EY/d41PBPNNDVyc
rUTEwdO08/nqNHwM6DjytI6IXkFWwblr0+DM3CF5vpKIWF7YXDwlifc9nCyk
noHfK/HhUqTUNEjmxaajRCJCUeKp9DLTUPys/nchfn8G30jOUchPg/LBQ1VK
HkRUODg56qU4DWNCt8hX7Ijo6EZdLOm9aaDloWhnfUFEWWcCmXZVp+Hqyl7K
BVUi2rFjpph7gue55ur9O0VE8kH7dfo605CgqR7IRk1EcR9HPUb1poFwZfFg
1x93JNX+6U+PMb6v+d/5n8PuKID38vo3y2mY0ztbwPXOHY1IHs+6aYOxoK7c
vLc7uvRwx6TCFt/7z4MwKRt31ONROZXvhPVSspLKlNwR+7B8X5IX9nehfLnv
NwH51VzLVvfF7+0r9UG/KQLa+MznTeaP+QabY9+aCajGikbYNATnedH61VAM
ARmQdwRfjsH5JElspggTUIrQozvVOdOgsx16kyrJFdEyy5+xzsPzHt7L9jJy
RQ5/xX9xFmK9Xb0JQR5XJP+dNcm3DOMNhSbODBe0qD32914d3l+gkL0ixRkJ
+BkXjgxOA5sXl+IbV0cUaa4RGDKC9dHhbW4RR/RPTc5AanwaSP4zVGdYdkBt
Z/+jT57BfMdnwqqGA7IsWDEzW8f3ePS9kIzHHuWPvTq/f2QGdDRbmroyXiFx
Uc9w5sszOP+XtNZqFqhHj1kkTngGSIRnXmiTWiDroKxeNtEZkPz2NP6XljnK
mO5j4b6OeWJ6+Xuql+hMOP8Hkdu4v5m0UM7YFB1Y78lU1cT868mSocNGqCmN
pz6QOAOEm8+uHad5gJ71VD6j88LY5yCpfroaOnRAjSLCB+NP6VEhsqpI4pGr
UmwA7h90b8giKqMcss7OtEiMHRXHR5ZlULiB81h9GsYEQmHNtz6Jx2d+7JJ2
4v6r1wK4h9SBhtmqoKwb89Mn776/+xCqGY5bvurD/P6c8SbSAK6jWnNzw5jf
6W4+Ea8Fqz9nen7MYX558Q3VZx0gfv+bF/cX70t1OOuYkBEI134wf0g6C1VX
n5PPjhnBbKX0f3SHZoGQkDc2HGgMivl+iZ5HMWb8M8o0/QyOxzOFmjLi+inL
4ku+ppBiI/BSjHcWSGK/HSTetQBN83aen3yzMJa+snA/zgKoTWymMy7OApuI
+eXgRQuwelr6mO3KLEiG5prd9LaEa/K3Fcgksf6dLZf7+VbQelabu1sd4/qd
J8brNkBgIZ0K0sDzKqcVfl95BULHP8bLas1CwiU2rkGHVxBFscBUroP1+zuI
dv9egd6vV4eTTDE+Ofhog9QOfjUGTli443n11pNuE/YwRNn9bN8D45dVt1VO
OECNIuuqjzf2320ma67gACGtab/f+8+CTkhTZMAXB+DtqGdsicC8E7jxv3IE
WoZjMRpReL7Ix07pj46wrfqAfSoa+13XPJ/Q4Qi13VP8v+MxTr/ReobfCbT7
Se/wpOH+ddos9n4nkGaRa8nPwPkMGktJHHCG/7RCVCWzsZ9oY6u3vM6wM3RG
52E+xsHP1fftnSFs7JqDVyXut+s/6UjlAvbsHv9oqzFv8O+h4UUXeKrX6BX7
Fftpes3so+ICfFMaYXkNeP8EcDR94wJ1s6/Sxztwfq/PiCRTu0IGd8Uls27M
C+bPCvG6wpvnh4p3evG+SuUqP2VcQWcxrPbY8P/fw+Ddw06ucJtvQD5mFNdL
nF19EO4K/Gbs7VwT2I+RkF5fhivsrWQP35jF/bITx58PusLYxW397/PYH8Oz
ILt1V6i3kFhQW8L9ypFy+UfcIHyject0Hdefy71cJOAGTkKMLts/MT9g+tX5
phvo2Wgd9NjC+VgaPzZXdYOLW/PHon/j/bS+fx6wcQMm0UuR5/9iXmp19r6n
G+zb2bN+IZmDhMc9CtthbjBZjBKvH5zDn6emz/UJbtC4e4Sn4fAcSC46dH/N
dIMc8bvZquRzoEOxmLdY4gZvnSKujFJgPtXrAnxzA9fyoTIT6jkYc6Bmqfzh
BgZ/zkltHcN6PImOz/rdQF7CtMGdHvOBlTckJtzgklvuXerjc0BwFH0CC25w
smq3K+oErk8W7zNdd4O/JDe1OFkwVlDK+7rtBlM3fcezWXF9kfzO7T9u0ET8
YXzt7Bwo610a3CMhQO5XppU69jmoIqMinTtAgKhD2jb3OfE81vg9k0ME+Kt/
4ko71xy0VW9ouh0mgMHXtl/3eHD/C+lW/iMEaOTwK2z9D89z5X1mi7Eg8Zad
ksAcsDFnSDzCOHJ8X7RZEO9LImnSg/v3JQt35IVwHi+aDq9gfb0E85LvV+aA
ti1BIOEgARr+cTvKXsV+w1wPLZMSQODphHi9OO5/dko19R++Z2XMb5kbeF5P
lWfWnhvsnVYvrwVc/3x8cX7TDXRcaFxuSWE+/sag1oob1A3V36iRxvd68DTt
0Kwb8F13/yt5B8//EFkwNeIGYTHiCMlhvwZbT/a73WB776ebhCLm55SPKja7
wWPNTMmKu7j/njBHV7Ub1JQYkV5XwfWTMyciCt0gyL6fKPYA5/db7eXXODfY
7A27VayB/XozfLsU4gaaooqHRLWwH+n4qQF3N+DaqvQS1sG8gXLcqJ4bBKjb
387Tw/q60SrX77vBRv4lssuGuP77+qEeSTeotP7oe9EE46Mu7TWn3ODB+mt/
XhtcTzM59KbBFcqVbymm2mJ+/p70whdX4MjZp+J2wP43ievEaFdYeWkedN4V
++VRPO763BW8ltRC2XzxfT+9hS9/XWBBgeZ+vB/m4+5bX5xwAeX0evozgVhv
blppq9YFWE3Ew0+FYd7C3kHX1wXyZ8++ZYrFefcks9cfcQGWO/0PI97jefo5
00lTzkBIDjvJ+AHzF+Sq2qqdQdHwcDRdMsYMIZVnHJ1hamIhlioH14cGTaZM
OAHDSEHigVr8nqwkUk3CHSGIysWlqA6/hyzq0D19R6C4Jq3x4jueH/0quu2y
IxyI6qDuacV5ZxuaqLc6wIbKqn1qP+5//8R2dd8e2r5x31NenYO11T2xMTE7
CMiM+R3HMg9VSRf2X4I1kA/p9dw/PQ9rwUxavL+twJOC9wsZ2zzQzokMGRVa
gZNxsZHl+XlQDt58b/qfFZiwd7dLC+L6Bw7So8csQTaCJmVRBuvNBtgn+prB
YRd3NTHLeZA8PdIy1q0P+etLu8ga808/836T1AcDI43427bzwPaLrFA2XQ9q
711cUHWah4QpkZjrbrrgyTHs9tJrHghJGt5et7XhUMPV9KR3uP7T6qB8pRoc
YFgjpamZB5KGgbOneU5Cro/W5/BajNcOUKZ+/Smht1+neKoe4+v6BTs+VKhm
Ou4tdzPGKmq1f5R5EbFYgf9WD/Zzw8yMn1MSkWp/1rBfwH4bximlAlQQSap2
9gT9AoxRtZB+39NFdUu9L+OPLwBt+VujnxF6KEBQReDxyQVIQILnbAT10Yni
W5ndpxcgxPTqIWN9AyRQz53ewI15OuZHUVVG6PH0RnKWxAKQkBpOmKmZ4u/H
L4xMby5ATsNPlr0JUzT3Yvo8tzSu3/JjeWfxAllv9n78ILcAyo+1iP98zZDf
wYrEcLUFYFvnECbJMkcl7D7vHU0WoC335XblhCVyNSTRFjVbgOJE6fZ8disk
nepwetMc66ffYWDSsUJtgi9izV4tQAOn6wLDoBWaA5VoHcIC6Ghxp7R8t0ZM
2qcib0divbQmnR++r9DQh3D1g++w30Gq3sKKVyhxmvp4VcwCyHb8VF9bf4X4
zUjCxT7gfEqUGlQ1bJG083QoXwb2/6T5fCGrHbKKzg6kr1mAHT7H1XqiPSra
j/apqV0A8ibfB1bp9mhf29vdqh7X17AW6HbaI59zT151NC+AxfGk+5TsDig2
g+JJWO8C9DX4MJrnOaBxmq0HUgM4fyePE1w9DojLclx5YwjncbbxDcuOA8q5
Uix9fwLvH30qsVjMEX2rNOSjX8b3AKFfuXmOiIJdhatmFe/DdsQJ2hyRssd1
NqsNvP8zFZ2DS45o4A4DY8c29pMqlSLA7oTOpv2lJu4tAOFrQUO4uBMyoFog
u/wH7xspVXtR1QmttFX9Dj2wCDq3YsgOEJ2QkFDGr5uHF4HEQv3a1SgnZB/x
dnWdbBGUGyg5PmQ6oYOaLydVqDGO5WQ72uOEZMsfDZPSLsLYvw0VsnknFHRG
pvcLPeY73pmK/HZCJydPNdGdXISqeb+m86ed0RMZsm/VLLje74jWNJ8zSvy8
UWl5ehHYiFUGXdec0ezRkWJ2tkUgNO3HbMg5I74X33PbORYhpHS0BB46I8vW
/Az389gfn7lLmb4zKhRMSL7EvYj/fr9JNzR3Rjd/2UaH8mO952n20p7OyPuh
XvhNQYwlRivtA51Rc4lS0PrlRVjj4a8ciHBGdKxivh+uYD/Fqxomcc7ogSsn
UeUq1ms3srvw0RnFjB1zJr22CDl6hWT0ac5oTOr3qy83cP/m9B+ebGd0/tOM
ua4k9scxpmqe54xMyDqe093CerOWRycKnVH28wr9ahk8v0yOk1jijDabUp5Y
yi6CoN1W9r0yZyQuEP6QXQHXX5+pkC93Rm4hbirtSjgvEkNDa4xrN0wU3JUx
zxHz9Tuup1B/IHNJFd8r2v+3Uqkzuld0E8bVcR5S9CIkxc4onJlfLFRjESw6
xj+M5TujfqeTQje1ME5xt17NcUZnRg7yrz/B+QYpTPNlOCN9yVWuDzp43vXn
ou+SnVFK4gCbij72l92eLZzgjJYP1bGQGmF9w9vR/6Kc0WXjL4xfnuF+R2XZ
vRBnZP89lkbXFPf73aA77+uMKv7zJad7ie//jPU+wdUZiXSdaAmzwHk2PUyq
s3FGOc6fQxmtF6HthTj5IxN8/5Y6lpP2OD8uzVf6qs6I1fbB6DtHnLdY6PWh
284o4sxM0ikX7Kf5SUSimDPyNT/Mf5aIeZOBFGb8nkhPRqwneOJ8PL9JN1E7
I8cqzkIOH+wvpUC4+Y8TMqOTBq4ArC9YQVo56ITu5xFV+CMXQfKeRad5sBNq
0qJnyo7Cems/bNIcnZD0ocQBwRjM74mVXDV0QqLq1frCCdg/l/mH+1edEOv2
v1fX0vA9B62PBfXg35fxweIVGXhfQ7Vmu3JHdEz27D+JbOznriix9IMjOvBO
wlcqH+unsLUpmTiiWXGXaLlKXD/GHVb90wHpTFI9barC+jL9Ub5dDmjAP/ac
0lec5/q1pax8B9Q8VJah3ID7+UmXWK0dUK7rXuXDDjw/4Oztt3P2yLnGbtJw
Bt/Hqpq3v9AO/TIhS5mdw/6T3rIcCrJDLxnevni+iN+LnmtTnIEd0jUo/PVi
DdcfI/vOTmuHbh/5RWazh+vPMmv669giOnkrPiLNEpDUx5fMzdqghOpjlOJ0
S0BQFH39KNcGCYplzq8zLMGY0OGRK8426C73XLIu8xJUnTP/KEpjg/yOaLPf
5MT9gtZPgv6zRoe+yjGRiGOeuzCXQskSbV1jJ3E1xHosIU1UFiZoiL+t06Ec
18/G7ye9Ukbxi3QuBxHGS2o+sgV3kV6qKldgNcZ3KmTyXRXRPGevfUIdxgJn
Io7QyqKtUyOn69swrlWWv/dYAtFRLBkzTmNc/P5Vcx8j3J4h28+iXgaCjnhb
1+p9OPpR7tNVWowpP3jJHVGDZl3/uzX0y0CyMXz6PKs6qA7TfOg+gXmLRtFf
Mg9Bp+v47X12zIcaj4uGaoFTzbkQOZFlqGo9bnaBRA9y3gPnlDauf0hNz3XU
BH46/iTT1cU4WY1+0t0ERB5+XhzWx/3dIjHruyZQduxYXu8zjJnHxrdnTaGO
MHKzyWoZJM0uumiWmcGgnsvTXO9l0Pn06b3vews4A5duXXy9DAmKnfdauixA
59Q0V4Y/xqZ+xz5RWMJMp+LKp5BlGOO8nUz+yhLWpFld3kVjffvp6y7SVnDk
Qlk0IWsZ2EYZa6hbrEHuoLnrnxzsv9mhfe23NQSMcug55uF5DB3zqrw2QBfl
x2NTjP1PMQ9HeNkA61HNYuMarD8qw7SIfy8/naaOnarFfk1r43N0XkFidbWb
bj3u/8LUvez3Ci448tzRasZ8ecv9puFXcHlxp/tuD57XfqF229kWXtVnlDT1
YX+iTZVPk2yhOEknTnYQ169HD4l+t4UbjxsMpMbwfIqVv8IMdiDb8vbnlQXs
P8SWViHBDp5ki9Cd/ovnRfNUC723h0LNHZo2khWoosrmyaiwB5ojpVQeB1dA
RzU18MWQPVQ9vkE+T74CCRG+u9X49/lJ8n+HYykxdnlkrC7sAJZ5VQfv0eD+
evdYfmUH4KCQ/pfPgLHuvl6qlwM4Fhz+Y8yE8bFST4V4B+jUqd9jYcb6r7OD
LhY7gGeR/BbhDOZfXCsqnXWAGQOVZUWeFWCzAZrmG44gQcuw+O+/FRhj8v5n
quIIb8u65nIF8HxBvTNyBo4gS68xdVIY6/2XuFrs4wgJFcwTTSKYzxcvkI9y
hN1ng6OuYlhvrrf1RIojpCHtwSmJFVAOCdPV+4a/L5uy9b+9iecXqLOMdjiC
FtNEj7z0ChASzJIjRh0hvzqp68/tFcjh/JjntegIVGaGHTlyK/jz8fhX1pYj
GJy80KavuAJtxpGcdKROUPF1roXpHu43Xv6XTuEETOZpTd9V8LzSWAU3Bid4
yfLiu7PaClgYubX7nXKCum/89RcfYr1vdLqtHE5w1nK1duLRCghGWf2Q43EC
/Gu6JuLxCoS06m/vC+CvLPVWVbJPMa+vUDIr5ATc1sKVv3Uxvy70++hVJ3A/
s1WWZYD90LSk6F9zgoHvRSW6xthPomne5g0nuPzKoYjRZAUkKSnoK8AJ/Niu
FdS/wPkclq0ul3SCyab9XEdzrO9v8vUnxtftKnP4rVZgzUaLTQ/jcA5C1pgN
zuNw6jQZ7l9uuZnxxg7rXfTimr7uBLcdDqbddsS4u/b3rpgTvOf89nnXGd+j
f8TjtogTbP/w/pThhvHOwkTjJSdQdpJNekrE97NKkPLhc4IULooP9F743o1q
HU5cTkDa0fT+mw/Wo96rSznrBJougbH2fnifM6e1aE46wf8qLPeYps8oDLPV
RSZjIBcXHQoTdNwh3gDRvY2gstFNkEuTwUa5LY1IoIKl/Vmn5aIML63IsBZk
QodhKpQhRrM0IoLLurFBrcVKgBEaq9PBJ4rr8MbO/jzJd95z3ueck3xdgTu0
Icem4T5h++Oi2z643HbXjKuIt5+LuJK+eIbgupPx3xKPrpTNEzMcvIbTTjhO
kR/TgF++nUOh8j3VeS3FY0mygBEOK6zaGvezpP9lhFtqDwdpRWZ1XwvlC9at
vNnJYTB8xSFpK/G+Wpu0p5nDwapm5eh58pMVYSs/yMG1bOEn2e00T6ex/mXF
HLTiQg+7nuadYTC+ncXhUmKMjnVT/vG5RWwjB/tiU/+bPVRPFvrE9lCOPbyo
Y4d7aR6u0cItFjnmZxvT3uknvaD8ey+u0f1ZxXZvI73XvBwoV8uR2OTkHGT+
f98y7jwOkcOq+mqo3UL1miRlMYvlyFMOaNZYaV4j6u2Tz2T4Ok8TtGmMeC+f
2yqke+8MjkzccZ/2v6BvvS1ehiVXso7vfUF+fhAFro0qg67tZvrzV1T/wrRp
xKMMkdoQ3wNODH6j5Vo2JcXH+x366rcYirs8t+a1SKGIU5ka3Cg+fORR3QIp
Jgeved3wZ0j6/HXwPx2lKOoNGNu2mmFofyXvvrIUL7tqWn8LZLiuTuHSUkvh
XZ++wRLG8LjwnkXvKEFC5rTwQRTp+er+5aJL0P5gecO7AoY2obmY00lQfaZK
NP4Zg3tchXOHWIK8nVOrOpIZJjLtw8IwCXwMhs5PhQyafUbO+3IxalQZPx/N
YXD6lTc9oiiCeMPpmUVy6sfjRG5FaQFWVnolLDzHEM1OKxTGHLyOVrjeaWOo
9vnuqX9MDu5O2W6du0D9+dTnxrZlQy289MW2Hxms/O73BypFmA/eWVJlYOAX
DTXaizIxalI18cwMzkuP7NV7peDqIUeu2cKQoBM28+3JqIvNCtJZGX7hpWfH
X0lCYmt495Zx6mfIb0mtXoCfZL8blX8Rv4s3mhs+jEN92HpV8t/EX/DNydk+
PiSTjakfMAZRwBn/2p5NCBTs/vP6LPEc3FgrCl2LBW/c/l7tIL2ZVSm6vlBM
XI7dJXpO/Mxp8S1h/jDs0kVEvmKI7J3L9wz3xClfl2fz8+SPXzCcql/z0X/q
Mw4z
       "]]},
     Annotation[#, "Charting`Private`Tag$7278#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.06224360913712676, 1.6038670503317314`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7616022545944347`*^9, {3.7616024798120704`*^9, 3.7616025060753527`*^9}, 
   3.761604995953292*^9, 3.7616053981739025`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"b965a63b-02a5-4b80-91fd-35f05e0c0920"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n", "=", "6"}], "10"], 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Delta]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
             SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
           RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, {
   3.761143972889423*^9, 3.7611439925753994`*^9}, 3.7611458482516117`*^9, {
   3.7611459006637325`*^9, 3.7611459244024363`*^9}, {3.761145960052171*^9, 
   3.76114596330447*^9}, {3.761146445883836*^9, 3.761146462592226*^9}, {
   3.76114649659019*^9, 3.761146527338142*^9}, {3.761506036148939*^9, 
   3.761506036467112*^9}, {3.7615061029584703`*^9, 3.761506103199828*^9}, {
   3.76151342674475*^9, 3.7615134276405106`*^9}, 3.761513560910466*^9, {
   3.761581103796053*^9, 3.7615811041715155`*^9}, {3.761581571246072*^9, 
   3.761581571744668*^9}, {3.7615816756148834`*^9, 3.761581676137565*^9}, {
   3.7615822602219257`*^9, 3.7615822826479387`*^9}, {3.7615824514532843`*^9, 
   3.7615825599735975`*^9}, {3.7615829227090464`*^9, 3.761582924630458*^9}, {
   3.7615829576743402`*^9, 3.7615829598823147`*^9}, 3.7615830256850376`*^9, 
   3.76158314854402*^9, {3.7615831938382206`*^9, 3.7615832353731747`*^9}},
 CellLabel->
  "In[238]:=",ExpressionUUID->"ee38a0c6-46f1-44fb-95b0-e52f3e98fe0d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV2Hk8VOsfB3B7llJESquKpG5JbpLlU4giIaKUJa1aZCuXdF1ZIiVJsidp
s4vsy5ySykVJZZ05ZwYl20jKT7bfc/+a1/t15vV6zpzn+3y+3zlKLuf3HRcS
EBAQFhQQ+O/T9HhvE+vbfn2nJRPJVxQN9UUMFd3pRZpIs936WjFUCZvvxSUV
LDLCprgyidGQTTBraHmWvMgGx3LtGzghO2B3bKwyetExiM3LLakPsQJ741XD
G4u8ofwk6uPDkCNIlbcIvbYoGNGzpiYVQzwQKF6wJnxRDEwyfOf/70ogDhy8
nzv8PR1lrau6kv6MhtRM4GGTZbkYK79cVPsrAcpWQ70vIwqR+bpUdKzkPnwa
tRE3WgoFCdE0LTyCQqEMR1CwGmfe5MmnH8lAEc+w/p3uCyw7t+OXaXUOXpxO
XnxwoAYv8471S3rl46eK3tzsc6/h6FUSb2JVAKHxzHmLlevQ9EGhMcfgObbM
OBdZ59RjE5oGMFWE+mDNxlq1d+h7I9I2HVeC5VH940+H3iO8YfzHBr0y9I/R
nE/qH5DhF9hblVGO9L7yOunIZuQpnRT2WFgJ6aWP+d3dH7F9cmnOhGMVrrs+
P5G6+jMu77jVbOxRjV/bM7tPBbSgYXxyjokuCxXp/Yk+wS3Ytq9Fdp4+C1fE
11uHhregUe+sQitYkH6fRT243QIdz/3LjxuyoOKUk8J53ILF2xes8TJlwfZy
/gGb9y3wZWZPOx5g4XlpcT2UWvFjsE/yghcL3ho1hQtetkKx5xE75hELJzRX
pN5604o39MVivScsHNjiHzG7sRUJQc8O9zxlQWebpotQWyvsdEfEN2WzIGSQ
PndoqBVPbuj3lBawcNMq+PQrxTYU/8yKvsViIcPdaIW3Zxt++10fsWtjgc6p
iWhSaofrX/eSt82i8H5QZEBjTTuUWZeUbopTYK3fuSdmfTu81Ddc4ElQSM14
NdtOqx1vR4oiQmZTcHlUe6NzTzskLtV6VspQ+JL85uZXn3ac0b4rN7qYwuD1
+ttTDe24N0dNwn8jBc6/s0cdm9uxKjriUIY6hUZJcxtWazv6Zcf8WjZRyAlr
kAvqaoeZYtyKDZoU3IMb74iPt2PmRLlIw1YKo5fe352/ugMXw2KXNe2gMHH6
Y+JaP2LmypyRfRRstjjc2hDQAZP6KPVeawpZgl9CNwd3oMXJxphtQ8ExbsxD
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
          "]]}, Annotation[#, "Charting`Private`Tag$654580#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$654580#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8le8bxylFCoXKSElRyioiko+MUhLKatm0aKAlEVlpkDSUSpLQIFkJ
j3nOwTlWmRlnVZxj5Bsq8/f8/jnn9X4993M/1/hc133dq93P7PeaIyAgYEr+
/P9/j1dfU1m/vZHPtSPBTlJBRkKmcmd7ZXUQHqCiLFh+ENrPHyV9lDVDa9Te
nMqyE7BktOU8lbXDR+3I0/Fll+Ho+ackXtYTj05PvNQsu4FuzSjT27IBaLqz
NLWlNBHJS60jY2TDwYwyzYn8lIFQkY/rbsgm4Cx9guec+glOB19k/RpJRanx
LcUGh1osnA09smtlFpxcD+9MVfwCZduhvsqbubj4s/uwXlA75EJ2GRx7kYu0
tW3PdOLbsfhd8k3Rglx8+61zQCW9HRMiBzRs2bmg1Rv2/fjSjsayAv+erXnI
Okq8+7ahA4FaoTN/v+dBJFxT/GZrB+olpKU1jAtQH3+7vGTtN1ys18ej0U9Y
sXYi/fTjbohr5H2vESlC3K9tctNvupF6W+vW5IoiPFKxCQ4p6UbT3nUdzuZF
4BKWQq7Mbmysk/ZXflCE7KHD+2KVe9BLHU7L0fsM8bOv1r5414Nd5a/EGYHF
iGoVd/fK7UWP4uq8mTskIzDfq6oXAdeSDmu9LEZXy5T2wa+9eIF76ffqivG4
Kz1edrQXkyXXTA6tKIHGYdunIbJMZBUdvvCzpATesiMJao5MLM9d0iMoSGBv
0hLDOAYTR25N2nGXEWjdmz/t0MJEiuf3OooagQcpixlLu5lQW/rp000nArzX
fVFXBpgwueB6f2k2gTxhHemfoizoJjmmJWiWgV58i7JtJwtuzmlH03vK4EI7
cJWSz0L4HvnExP4yzIRNCdwoYSFNN+5rzGgZnCnrtE2rWBgQD7T0FS3HsyiH
R8+aWLhAWOlv1i3Hf+q2K0b4LNxSHJMuvl0O9VeK9Dmr2Mhnm9IbDCsgVabd
SA1mo9UidOT2rgocyYiluIazMf6+dNne/RXwZFJPj9xgQ++KvhvtWAX0n/+m
/0tgo1BKc7wsvgIBIiYxaZlsfDKTU8zpq8DZB6xjp7+y0ZnpaH72dwUs63oT
QzvYmFh8/6TGTAUOqbq53uphw6BbIi9TqhKntXRTo/vYKDo/b89Lo0oMfVHp
kJ9iozjtl39CQiXqwpY8fLOag65FGon7n1diQ5qJrZ4KB1N+p0oXZ1YiXl09
qmgDB9vxQ+Q2UYkHb5NcX2tzUNr27WkErxIzh/gv5cw5IESo1AvGVZAefGLp
7c1Bxcmn8gcHqhBwj7koJoWDj/2nTjmPV6GWkXiK+oqD1OMGnz0EquE3vNVk
Op2DCO+2Q6elq5F797rd/iwOLNyXPL5uWA12SMzki88cNByMkHl/qxrnA8ca
W5s5KGs/cPzjg2rYBE96PWnhINtRqbAwuRqdN/gnnNo5iLcnHCtzSfakFH/u
5sDB9t+D9q5qbO5qCVvXR/pr4bt0rjoFkYdP4d4kBwzqNi8RPQowEnK/Z5r0
b6dontgOCpK9FtorCXDx3Oy1nYw9BfvYryTuCXHhbsy6p36VgqmhKF9ZMS4O
EFmczVEUdAd1LFgvwYWZUbD21rsUWFZuE9dcwoWyofwXk1cUqN2p2KeylIs+
PXtJJwYFhWGxbz+t4KIjf4370TYKnIOFom6u5KJ2y38f3FkUiGvPr7FX5OKN
dqyt7xjJvdnXv6zh4rRmTVyYAhUVoWe/+m/gwuX9Q2bUOiqG6mf5Impc2Kh7
a93eRMXK0sunHqhzsXnj3MaH5lRknn+e8liLizGV7RLvfKnYteX+2C5dLozY
JtSYS1T4uYoKlehxEfnUIuT4dSrcFyxRUdXnYpm03fCaRCpUvMZf/djGhXPD
wdeCqVSMzvcX2rqdi7QYF5fe91SkzC25eM2IC13BUw2Pq6gIP7jh2bgxF8HF
Z6MuNVAhekVy/1oTLigXL8Chk4qNUbYrdpty4TgUmrXkFxW83ffGLppzcenb
o9hoeRoS9XxpJ3dzUfbg2S5vFRp4FzYb2u7hQmR/6qzpJhpSXPbUalhykUjL
OjO7k4Zro3V6DXu5YF/PW9dtS4PEw9My8VZcbMDn3qIjNKTWtyzdu4+LojyK
9QU/GtZMPTrxypqLOefownZXaWT87crNbLjYo9ZMbIqmYeLtva3fSI7/2XZR
4h4N/Y6SjcdtufiW0q05+JSGFyvvRg+SvNaZ87M2nQa/My3uJ/Zz4SPb/zz9
Iw0dkRkuXSTnfh1yjCylofx0V8jOA1xMxY5KeNbQ0Dq9o+o1yWaWE9QdX2lg
tOaoC9hxcWu+wLVVvaR/xxaVWJP8tXze1ul+Gnr6tPwfkKxwdeGvzlEamo8I
234l2XvrkvTCWRra71xxXGDPxfvfy1wfiNYgUjI4agvJ4+9XyAQsrUGfiRDb
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
yzuMFprj4aqFY7Ozw7g3kUezVvUy+h9l2pdY
          "]]}, Annotation[#, "Charting`Private`Tag$654580#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVlnk4lN8bxpGKFmVJCFlKhegrW4lHWuxFQrKEbFmyJpRCSJFsSZEWQpRk
3w9mDMY+dsY+M5aZsRRFSb/398/M9bne6zznPPd9n+d9xe09rziysbCwNGA/
///Xc5ztrpsz1fBt6DLeIfVUg/2ckNe4oCKssPZM3N9whpNvU9KKBM9D5Jhz
pObGXdBvHyh8I3gVvO5YH9m28RjMHX7VJAg6AK5dVCHgz0sYlX987pmgH7B6
+yneXs+Gd/suRz4VDId3sg8sbZbLIJSj6MgTwSTQ4f3EqdHdBNcs3n9dWs6E
tumuPywag7DzX6iVtuhXWDizItZvMQkpt8xtZC9+BR32G9HsHpNwqFfWlvv2
V7B/O//qSMgkaHwauDlS8xV850189bMmoeJTckmZXAGUvVtv5vg+CUwTRrV+
RwFclD+ce/nxFJjmvGz13V0Ip7n/Pq7JmYY06zADJ/FCuNjXOXarchqmeDza
rykVgtuAihtn2zR4Bmt1qlsXgpVd5Lr44jQ8ucIkbf9SCAXOcahMkQI1G1rD
qQZFkFlfm+9eQ4HDxguzuOhieL+PKlOMp4LQQ+3Tzu+LYYO/yGd3PxX2fnkX
vaOsGErlaTJmM1T4zWEiZzxVDFfVDzSWcNKgq67Md0y1BDSVQs59NqRB0InQ
zTVqCfTG2B9zJ9GgYw8fn5xmGWiYcWTMdswATt3Dsdu0DIiOc0uCYzNQ7kYo
9XMrg09CVganmDOQ0RRgUZVcBg+007Zo7ZyFgIej6TrMMsgMLbUKujgLEotZ
x26+Lgel46OnHlTMwt2OU5CyUgFbUygHE+LngEuuhNrCUQk/szpuvXwzB5nP
TsT8Ea4EnYSIfTGf5qDb4MiQzYVKWAkKDjhXPwcyrXy+h5MrYT4qqHJucQ7G
mxazClWqQDiA3MKlNw/a9R+52oOqoWDbYknC8jyMiYmXbMZWQ13GyW8Bf+bB
LyTN8kRGNdgfkLIw3EqH95CYk9haDRK2W9MaBOjwpyZE67pwDSQL6rmRNejw
tdLSf6amBgQl7PVaHtNhfzH3GCsrAqF/lEq3XQywivlzlcKPYJj1/lUcHwM+
OFBbCbIIGGIDLNtEGCC7r6Ii+hoCJeenYQbHGaDlb/tiXwGCz5KbDaMGDFBO
M89Kkq+DoS+/NLmiGGAR1TYZcboOSp8s3dz3nAH3/c6K3L1QByRpPcftyQyo
N5BJsrCsA5vRorW8DAYY/N0MFX1cB1lLZSK/ahhgZ5NlnTNWB2krr+4lLjAg
XO/Aq1dzddCl/9JPe4UBWcpxvU9X6uA67pgMbZ0BDK4gfY8d9TCm+rR1mp0J
/sjwlIJyPWQ0zpWOCzLhVV6Dn+TZerj4X1ngnCgTql+qFPAZ1GN+7F0elWQC
q5f4kV929dDz0+x35HEmxIit8lU/q4ejl/Y6DQET8ne5Gn1JqQcz1rgq1fNM
6F4bi07PqIc9kkH1YTpM4O9uZgutqIfv7suj/UZMeB+atnSBiq1vv23x0JYJ
eA9uWZWleuDyq/pP0YEJNItI56N/6sFvWbmqx5kJsgpeYzu4G+Di6bhp0m0m
lE6da+s80wCxO+Zfd99jQr9O6PIz7QYIGsjf2fGACT/za/kNrjTAXUvltZJQ
JqjcO2XX7NwAZrrJOjqPmXBt0j8y0qcBpC+8y//+hAkB2sV554MbgG1/V1JU
DBPKeeV/1iU0QA97K80/ngmDge4HHr5pAJLwNdPORCasjX/SVM9pgNt/Y3V5
k5mg+vlQdEVNA4hpnG+xfo3V57EvuNvcAIWf+a45pGH1A972KfU0QMdvBV+z
dCZUnBcSK5xtgJC/DaZ/3zNhONf8gtcPrB8ffvHCDCb83vvCVW4Te372XsiV
j0w4PbqnJJcXB6JPWdnNcphw/ZzhsIsoDv7sSpKt+MSEoE9P/0kdwwHrquD3
7XlMqLyzVS9DAwcyUVnWLl+w+iNanna6OFDl/cIRlI/VPxuSdPAqDhKqsq7f
/coEoZyailEbHEyvgpltARPUuP6Mpd7Cge2m8qbiNyZY+amyX/fDQWmvpekq
xveH7xwTeIiDCZU4m/eFTEjTLLrU/wQHm++bhE8VYfnJWvJNSsIB2/ntidUY
k3fJvbryFgf2rE54mWImbPi41e7NxUGW267iSIyFh3KmO4px8L1G0bEdY3Wg
cTxDOAgalB75h7HNR0k5fSJ2PjUDQdESJjzYaWfC2YeDV+wckkcxTvdOD2ga
xwEnbeyPCMa1AyNvIuZx0H/4Zvb/14+pC+LOreJgLVn12P/rb2aYzbKy4AGX
xBfx//1FdyTtrtuBh/m/NbX/P5+GV7fCg314cJLfPfz/89v0c107I4aHq//o
w//v78EZg+Df0nioLDNt/ID1n/7hyYdyJTyc5TZ/8wvTB3E0Nflr4mH8OJez
KsYTt9mZivp4cEjMlXLE9GXpO8vzwxQPe6Q8JoIx/cXUHqp8s8XDikROShjm
j+b7aitPNzw4CyETX8w/2+2/Q4/748FwXorf6DMTQjxUsukheLAtd6QIYH7X
nSpcdk7Gg5T0QOltLB8Tbxf5pd7joUffHf8nC9tv2/EzlDw8FFi+WfLD8nSW
lB1pW4+HGjXTcpkPTLBXpeaJtuEhZbjJ+tY7JoSlS3ST+/EQvfZFKRHLa4Pr
mwMWDDw8UHWJz8PyXTTn5mbzEw+XXxqb1KYwIdPldNVNlkaIQgIMhN2HCKeB
67f5GkGT0VL0PIEJOvbcrx+daQSfMG1Be+y+nZocn4u62Ajs81f3MCKZIG2b
fyrWqBGUEt6yOIYzYZeN/lCKQyNMWXLNSj5kQqdFhEB+TCN8imQz6ffF+h00
cSlKbgRGhnHeoBcTCswlysvfNcLm6C0pogcTEkyROa64EXbF5r4KwuaHmfF6
8iC5Ed69E+LguY7lUcdj35bjBLAUpREPnmFCe5OaI4cKAS4pVfbzq2L5ubij
ZPdZAvDrEa3/nmTC2/PZVwVMCTB29tZqigyml+Zk4vFgAoi/7fuxQ4gJsyqm
PNfaCcCxPS59/AcDhkol7a0HCFBKmNHsxuYzUen7N/tJAqg6HcAVzjEg7+Rz
Y49VAphtjoVeGGfAbfmWuDCRJrhURc3KbWHAqpT6ni8eTdBBSf0YmMoAjSmt
pqcBTeCw8EBoLokBkW90Hro8aoIBYW3Ri7EM4Oe7uij5qgkqshzWmkOw9w2r
W+drfBMcaby05YcDAwJGUp5HHWiGD/13dkweY8DG85U9Di3NoOSeUOCeRYfz
+r+bzvY2w14Fjnvv39AhZhtLyMHxZogWNhBrTKKDSPDOpeGVZlg79eLoUBgd
NFwluozFWuDQcIaXkg0dHp43ioO7LUBxO7e3hZsObOt5ew8cJsLpiR5agfs8
HGjX+gHyRAhfOLE13n4eFN8P9TmcIsLOcZPwm9fmwVF3e2q+IRHcLp/uHD83
D82v7A9r+RMB3HD1ykLz8Py04OlbTUQwZld86oyfA+H7kTfLbrWCHcsXDok9
c6D8z7bUJL8NtB8/HggNmQEDw7qwC+VtcIWLFvbCdwZuph68rNLQBuoS/FPp
TjMQpzI2I9TfBsYOgfQEgxmY87QUnPrbBk/JMQGsAjOQNmF638uwHVyH+lm3
fKEBa4Oe1jNGO7w3u/sfs5MKbeGKHQTpTvjj024ttDENB+Po658WuoBrUNnZ
yHQc6L/Gx/pOkMCv9/1NO2I/ZM5XEblieyCH06Xr1s5W4BLJXqRQeqH61Ixr
d3YRaJo9Gp2e6wXbyZtb3Y8Xgc/zG61TC72wUa5jpVZUCP2sAtkTa73w+QAz
IRB9g3RalA15Vx9o3txX+7v4K8gVuLb3KPbBxJuV5X6lHDA8J5fXEN4HXS7G
ot6iiRBzq8Tp3aF+UPU4eiJY/QOa1/wStVO6H0K42N/sOZyBtAU+5vrL98Pe
Ixfn1nZmIrampAWD0/1wjfrUt33gIwo85Oe/frkfmqMvN7k5f0JO4wqRV+71
w1UP8saqQgE6a1rwkZ2E9UlOO9nBLEXpsjlNngPY+rn1CmezMrSx5d3cMLkf
FJ0Uuj/UlqHywufHv81g9UrZkjaelSO5vZ4l1n/7YYkm8U35aCUSbj3eWHp0
AK6OF6xF6dWgn5p5FJeHA6AgIljq8aEeVWfSU++GD0B1VLxIaHs9CuOQNYl8
MgCnZysmnNfqEVfX5/qMxAEw/9Ev8tWwAUndyE8fyx6A+MNRv8R/NiCz4G/X
rnYNwF7Vy9MRGnhUUlHWBuKD4N/durX0MwEFiaw9uiQ1CFK9vh92kghIM1RV
zVpmEBw1SrkVfhFQm07FpyClQeA4A5LLmk2IMlAZWaI7CCPXNdSUSU2I72eN
pozPIIhkmUt00JuRnwK+mB83COaa78rbfxORk6LYu/jmQYi+fQlVCbeia8r3
o3d1DILeZ5MLXhqtSO20oj3b0CC8vReWLBvaiti0MvcsLAyC+9aB9qUtbei5
cbhro9AQsOR3eaRttqEQkwlTTbEhGD6kr8sQbkc+pmfOVh0eghy+2jFWtXZk
ZrGy/9uJIVhavLTngX87ErZzaEy7OAT1G6v3KubbUa7XeTE/nyFI4HBmV2ru
QGk+73Yu3h0C5/IuY/JUB3rmt/HzVvAQ2E9Y9uv87UBeAcXtN6KG4DWXsof3
f51IJeTQPf30IXhzcb8ay8tOhH/O3i9BHAKHzMkzUTJdqDTetv5N5xB0CLU9
YFfpQjmJ1Z8F+obAfHTrmZtaXSj6pd8jrokhsAodPtR8rQtdeUs58Xt1CNh7
bdPlw7vQeD4+ult8GL76XNtzp68LdTHZGQpHhuFC9wtFxlgXqpO9YJAkOwy2
ez1oF2e70Lvcxl3mKsPQNqi9kvW7C9lnEZ6RDYYhr3l8lFu0G12hbltQvzIM
Afd0Yz5KdaNzh7QvvTUfhpwAoR5h+W506EMTl739MLC94FMohW5Ee9P8fObu
MGSN0/ySbnSjfjLHkk7wMMhzKx++4NyNmg7oGuWGDcMCt1ro0O1ulPOqZa/H
s2HQyD2v8yW4G7m+IMZ//zAMdT6zbqyvuxEzpi3xb/swUAL2q9xo70ZjrbtW
bHqGoTZA6LxBTzfq2GF4tW5wGLxoBadEhrpRflQ736PpYeDa0rPsSulGXuEd
LzjWh+HVJFWidL0b2eK4ft7aHAYn728suM1uZMx22ax1ywhYXQtcKtpCQgoh
nfyxXCOgLTEorLWbhFbudb3kPTQCYhl7L+89SEKUyr1rfsdGYLDlpL2GJAn1
rRtd65cbAZ+1pTKjIyRUerdb4NWpESglZ12QkCehrFLuwN8aI0A/KxI9qUBC
L1eNhyzPjwBp5ahchDIJBfiSXoleHgFCj8KnQHUScink+f3w6ghI1cU9J2qS
kMXyleuTFiPQYXtu6d85Ejrt2SOU6TAC/MqpGgJ6JPTHtTf1WNAIcGVP0v5d
JaGrytbxcg9HYGWkidfAnIQ+s9IiT4aPAKNjOizEgoRsUn55q8di+8/0a32w
JqGymyHOWokjsKnq+f75DRLaK89prZ0yAjZPkbWjHQnVNwrpGH8YAeFzizuJ
DiQkFJ+hbpY9Aol/lXZZOJGQj5XsScvPI/Bcd8vjLmcSaj1SctT22wj8vVX7
6MQtEjr0Q13UsXQEHihMcwa6klBwLYHXtWoEu0+s4rluJNT/5DKnZ90INLxB
XTh3EpIzHdz0bRwBFss+MYIHCT0Ws1sJII5A7PhewW+3SWiCPjcX3In58d/V
+nBPElIt8xkP6x2BfR9fiJ/1IqH4sD+9j4dGQK9v/CwN43nDcGLMGKZ/krG0
nzcJnRPcXRc/PQJmVJHpeYzTKC9KkmdHoGA+2k/PB/P7q2heKnMEnkz8pCVg
bHgv+9277yNwl6tDC49x1sUTyR9/jUBodVLcGMab3BXRuRsjkHVkanASY/PR
s6FfWcnA6293qAPjghyif/E2MkTldd/LwJjTz8S9YicZwt9snbXD2B7IdrV7
yeA8M+3NiXHlDkdz3D4yJI85SbzGzsfbzzRoFiKDQ2QaGx/G7u/9tdoPkuFw
eNaBu1h/ePd/KqRDZFjlqfTHYXqIqEYdHzhGhke/DoqsY3r5b+GWJMuRYdNX
UUAA486OVwKTJ8kQqebsLYbpe/S1BBdNlQwMRzUFHkz/oROK64taZFBdVOQu
xPxT2KheWNEmQwF7vZatCwk9bbpAWTcgw3JXFdsa5v8ZG/POLeZkYPvxxpRy
k4ReHJvAc1iRYU02YkPVnoQWVlwqd9uRQa9t2OKuLQm9jQ76uN8N64/w3vab
FQmtmW1JFfYig87LXNEv10nISCImTvwOGYLSjaoTrpEQW8WbezIPyXAIedcd
wPJtGS7lfSKcDFlqQmeQMQkVX/7qpPSEDFteV9YbXCYhR1qdMSSS4dlvTn4p
7H7UftPVPp9CBuK7oN/e2iTEH0w6o/uGDIOmTnw550momZdyxCSbDP78G3w9
GiQkc3b7plMVGdJmVB8dxu5rQW7ekcE6MuSfmPIPkiMhRT4jY10CGS55eaiW
SmP9z6RkynSTQXprrO2UBAldeiatv0Qjg2QPzzwXDwmRfnb42THIYPT61HIq
Nk/MbX3TSctksBKIhL2cJGR7snq5eIMMrrs3F/P/dSOfIcOUQJ5RuKb54TqB
3o1+an2vn98/CoXXI68+p3Wje5+T6ZYio2Bm0MenOdmNwh+Oa2gcHQUDln3S
Fv3dKPmwN5VNYxQqsnvvuKFuVOGdpBBzC1tvKGBy8Fk30hhRtfp7exTq08Nj
3CO7UcP50YjbfqMw/10x7cPDbkTcLzVk9HAUnvo4RLR4dyNyTdnDfS9GodKh
04/dtBux7BhpS68bBbF9rtUa+7uR9gdx52/7x+C+4etenegupJjCJUUQHoMz
TpG/7oR1IbHYP5Rh8TGQuTq1HhfYhX4H9tmzy45BZsnMWJxzF/pi/MTGXHMM
2nce/1OBvd94WZdN/7qMgVGWmEMIvRON36g7r1s5BoUBUazS6R2ozfTLFhs0
BgsJH7k1ojpQuf7rBh/8GHyPdTmp4NOBElT8NNM6xoD3RvOZqgsd6MKeo2cW
p8Yg2eS6/VV6O8qrfX7yxc5xaC+6J4o70Y7uityQmLQaB7G0P+svP7Yie6MT
ZmS7cUhWHz1xN6YVXXrE+nTAaRwIZx+onvFtRVJzGcvtXuPweMPYIECzFfUW
z9ZVho+DX53M0+ohIjph4HMj6fM4XJhcL3yxnYhmgyLStDfGIWzja2CccTOS
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
IBmnq8yEky73/5N2b0QaIY6nelSZ8N2iyt7yZiNi08ieslJjgmawpoTP9UYU
VSGt5KXJhMH16HtGOo0oueC/4WQ9JqyNzcx1SzSignQ4RLFhguLM6tfvJDz6
EfRju50dEySRjGVZM/a+Mc+mj95kwgnvFzdu1uJR1Z49RQMu2PmU+rO9P+ER
IWTsbKsPEzQ42rNcHuDRiH3wjcJIJryQEdBok8SjbUeqXofkM+FbRdCVDisc
0t3i+eBvARNmt9upv7qMQzHjEvZBRUyw5zQxMdTCIe6Up8f8yplQbeZ11vsI
DglzXi93bmDCdWLpj09LDUiBvtZ3qZ8J/dI73ZkPGpD1V2VukU0mSMuSXqhE
16PS62tcXSwLoBTbMcQMrEdc2yp3PdqyAEacTSPRLvWozkqdY45jAYYPGt9/
eKEeSew4/6+YdwHAUmFOe7MO0RyMmQbHFuDn4cQMX7c6dFvIveX+1QVgv0St
IN+qRSER70PJuQtwfoXXUXBfBdp9d7ue3ZcFYFFe+MRDL0evXTx4aF8XINpV
dplZV46K9E9lLBYvQOpFHRN993JE4+7Gs6EFEP38iD27vgzpp7NwHOtZAKHT
avf2OJci/rIbsXf+LIDX+iN5/vQi9GVWJJXLYBGIRx/TmuLzUNSbCNuxS4uw
ZM7ycVIqDzlcYR7ON16EeJeDDaSqXCRcXV1gaL4IZjvcXqtTP6Gnzy0JMfaL
cP+0tI22cg5yUX61vCNwEVgCTpeVd2ciiXA+ne1Zi/Ai8QYPNzUVbare3z2Q
swjBHCc+xG9PRUPMaVJW3iJcs9tGmDv2GsWZF1lf/LYIEUYua4dvp6B/0ld8
I6oXIenU8evfV5IQuft5+paeRSj0yHiwsR6NyiN/3ezpW4TlQp3BI2pPUZLa
jWMZg4twckJuXeZ+FNL/KFesNbYIIyGxbC1/w1FlQHtL6NwilP/OKNH4dw8l
H1d6bsxYBD8r+aPFDwOQ91TaVfHFRRBWclhnZ7mDjhq4j9etLILBQItuKos7
YmftzYz7tQgiZvqMtyyOaKJEzdX29yKk3cq7vIPVClW7Zsif+LsIKdWfOk1Z
DdDLgztX//1bhMTT5x4d1XGr/R9OWBdY
          "]]}, Annotation[#, "Charting`Private`Tag$654580#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
10HASys6WlANx81yh4p+1uG8t9nM9YerEd+8Nb9maj3uR50z13lShQWLbgQM
z6uH7MS6DUZrKyGbojyugXpseeGm7bWDhenMYwJypx75Scqfz20nGPzR2dGk
zsaWUeXP4a3PkHf8Dn2XFhtXpgWQvsAkXOHoJxNdNmhXSr54zH+Kee8en35t
wkaUp28GIzueOi8OTwbZs5GRXOG/p/U/PPzarLAygg2RCxdfzrU6RUxHP9j4
dFLs/nBFmEQykTtycQu/h42R++si1+18STrqVJXsB9iwNN3/N/TKK+KXcfPL
jm9sOL+J1zEfTiFPzpj5KIg3oC8qIk28JJ18FzLv0LQakCBf82TtrRzyfKCo
WjKyAQL743sPHi0hng/2rjh5twFn63tG9veVEG3jLxdYsQ3YcvPcjucepaT6
8ez1Qc8aEHDkqdsGX0JGLQ/d6c9vwOe3bzK/F9GI/rvv1swvDci1Yl7rSqeT
1pCNn8/pNGKg7MM9FetykqTO0mzSbwSvXStg941y4vHZNlLduBGxd9rYkmXl
RET7Cvh7GrHaTPxS0PoKsnqg9qmNayNijv9VGZlSSfwsPdzU7jSiLlTWbklc
FZFc9HK4p6cR8sr0RaOXa4jBgZDPX/obkZeyrsPkVQ3xueP0vnuoEd0rRGmm
dTWkecqCl10/G5F8z7bEcskHksCLcPwk0QQ9H+Ztr4IPZEPGyQ8NGk24Kqt2
te9zLXHuNyli6zTBWIprMSnykUQvX/G6Xr8J+mN0VtGKj+R7THvoR9MmeCQ1
pm5z/0hKz5nrvbdvgl3MiLyF8COxMNrwhh7aBBnthJYa3zpyKWh2XNn1JqgI
aPXZV+tIRi4vnBbZBJLanOj1Xx2RV37iUhrbhNihospTb+vIJwlpxcLUJqy9
tDzEnVdHPJpHIzIbm+BnTLtwaU89SZCqDchobcIuka9aTLt6Umea4pre0QTv
FyFTutzqiUaRi0FaXxPi+9ltcZfqyeSThh+vJpsg9cVgx/zUenLrRK5b4spm
1F3U6tf/V08GDNIixFWakVT6Z2b+LDbZueBFSoBaM6L8tQ6KyLPJ1IqYIfOt
1PqAbO7fNWxybqVfwK+9zTg+/XFZtgWbNE+cinXd3wz3RpHclwfYRKPhaOFH
u2Y8yEvRO+XEJiPB1n9fHGvGyZO7DI54sYlb56ZwqwvN0DtkljY7ik2YeSqv
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
D5aIf/v3bxicuhyh05zT+v8DxZC0vQ==
          "]]}, Annotation[#, "Charting`Private`Tag$654580#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9yfoN+z4H+zS/cI=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$654580#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.2994855565632948, 1.6038670503317314`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}]}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}], "+", 
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "6"}], "10"], 
           RowBox[{"2", " ", 
             RowBox[{"sin", "(", 
               RowBox[{"n", " ", "\[Pi]", " ", "x01"}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"4", " ", "\[Delta]1", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}]}], 
                  RowBox[{"\[Pi]", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
                    SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
                 FractionBox[
                  RowBox[{"sin", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}], 
                  RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], " ", 
             RowBox[{"sin", "(", 
               RowBox[{"\[Pi]", " ", "n", " ", "x"}], ")"}]}]}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439751641335`*^9, 3.761143994910141*^9}, {3.761145564956041*^9, 
   3.761145580025753*^9}, 3.761145628476178*^9, {3.7611457372087393`*^9, 
   3.761145759762726*^9}, {3.76114584921356*^9, 3.761145925238199*^9}, 
   3.7611459643412333`*^9, 3.7611460585057855`*^9, 3.7611464640543137`*^9, {
   3.761146498036358*^9, 3.7611465285385213`*^9}, 3.761506037620089*^9, 
   3.761506110190378*^9, 3.761513429595683*^9, 3.7615135630292788`*^9, 
   3.761581577095301*^9, 3.7615816794623456`*^9, {3.7615822633575735`*^9, 
   3.76158228524354*^9}, {3.7615825462038918`*^9, 3.761582552910718*^9}, 
   3.761582952762621*^9, 3.761583062790759*^9, {3.7615831959912353`*^9, 
   3.761583250140133*^9}, 3.7615960135371294`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"6c97cfd4-116b-420f-b898-9d6de8a455b0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
  3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
  3.7611440902338066`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"4399563e-63d8-4f56-8ee4-56653a83796f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b5", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"c80ebbbd-cc39-4b99-bac2-00e7827693d4"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "\[Pi]"}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}]}], 
  RowBox[{"5", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.7615832714788895`*^9, 3.761595949982916*^9, 
  3.7615960200746393`*^9, 3.761596118467219*^9, 3.761596595685603*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"49671d10-1483-49da-a16f-034868735748"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"4", " ", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"n", " ", "\[Pi]"}], "10"], "]"}]}], ",", 
     RowBox[{"100", " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox["1", "10"], ")"}], "2"]}]}], ")"}]}], ",", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"n", " ", "\[Pi]"}], "10"], "]"}]}], 
      RowBox[{"100", " ", 
       RowBox[{"(", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            FractionBox["1", "10"], ")"}], "2"]}]}], ")"}]}]]}], "}"}], ",", 
   " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7615817412581778`*^9, 3.7615818051899114`*^9}, {
  3.761581983168763*^9, 3.7615820303638678`*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"263bc449-38b4-4026-b78f-c6702453e322"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
HF45OTdHw//fZ8n/AHHpLQ0=
          "]]}, Annotation[#, "Charting`Private`Tag$572272#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{4.8710522055612575`, 15.932666885364457`}, {
          4.900439105662914, 12.386628433155433`}, {
          4.999999999999999, -0.11888077566140477`}, {
          5.095019551657784, -12.053967198759752`}, {
          5.124722634014765, -15.936292409281311`}}]}, 
        Annotation[#, "Charting`Private`Tag$572272#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]], 
         LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAWB8a60MDFEAZh6kzNXmEP88SLAt1
ORVACk4zuVHXgz+7roKbLAMWQMDZdP78aoM/ewEqUMzdFkAwjGLWE/OCPwrc
ekhutBdAYvC1kgV7gj/lpiGUn3wYQBu1GLEiCYI/lCgZBLlVGUC6aJyWvouB
P5CaZsdhIBpA/nRIPRoVgT9alF3ODOcaQMPN+rJ5n4A/+ESl+Z++G0BKuVRY
jB6AP+PlQnjChxxAChbeOnNKfz+iPTEbzWEdQHIDY+2OQX4/rYV1EWctHkD3
Mi9110h9P4dVY0sD9R5AWFBA5g9UfD813KGph80fQDoZt5LhSXs/mCmbrc1L
IEBm0yjZLVF6P3/AjZhLuSBAMhHnAMRDeT9NG1WlyiQhQAv/vsDAO3g/QW7H
WxGJIUAvv0mNQUZ3P58cYiTM9SFAZl9DcUk9dj8kw6eWTlsiQHy5YSllR3U/
kC3CKtK+IkAXvc1RCFh0P2bzBNHJKiNAsdgpapFWcz9isfIgiY8jQDgXAiq4
aHI/bIJT/EqRI0B3uPDTl2RyP3VTtNcMkyNA+ZDcsXdgcj+I9XWOkJYjQPr2
DQo4WHI/rjn5+5edI0ABR4Uuu0dyP/nB/9amqyNAfoIoXcsmcj+Q0gyNxMcj
QF5qpfsT5XE/mqNtaIbJI0AZDHtU+uBxP6N0zkNIyyNAF/hX5ODccT+2FpD6
y84jQAwOiKmu1HE/3FoTaNPVI0AbDGPMTMRxPyfjGUPi4yNAKNsHiZOjcT8w
tHoepOUjQJsrll19n3E/OoXb+WXnI0ACtKtqZ5txP0wnnbDp6iNALO/LLjyT
cT9yayAe8fEjQHTdfGHognE/fDyB+bLzI0Bt1OD8035xP4UN4tR09SNA062K
0b96cT+Yr6OL+PgjQMwaDyeYcnE/ooAEZ7r6I0AbLxmohG5xP6tRZUJ8/CNA
SifIYnFqcT+0IsYdPv4jQPS6M1deZnE/vvMm+f//I0AunnOFS2JxP1LXSFY=

          "]]}, 
        Annotation[#, 
         "Charting`Private`Tag$572272#3"]& ], {}}, {{}, {}, {}, {}, {}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 10}, {-15.936292409281311`, 15.932666885364457`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"4", " ", 
         RowBox[{"cos", "(", 
           FractionBox[
            RowBox[{"n", " ", "\[Pi]"}], "10"], ")"}]}], 
       RowBox[{"100", " ", 
         RowBox[{"(", 
           RowBox[{"\[Pi]", "-", 
             RowBox[{"4", " ", 
               SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
               SuperscriptBox[
                RowBox[{"(", 
                  FractionBox["1", "10"], ")"}], "2"]}]}], ")"}]}], 
       FractionBox[
        RowBox[{"4", " ", 
          RowBox[{"cos", "(", 
            FractionBox[
             RowBox[{"n", " ", "\[Pi]"}], "10"], ")"}]}], 
        RowBox[{"100", " ", 
          RowBox[{"(", 
            RowBox[{"\[Pi]", "-", 
              RowBox[{"4", " ", 
                SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                   FractionBox["1", "10"], ")"}], "2"]}]}], ")"}]}]]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.761581754348572*^9, 3.761581805739913*^9}, {
   3.7615820123245015`*^9, 3.7615820307801976`*^9}, 3.761582191549777*^9},
 CellLabel->
  "Out[192]=",ExpressionUUID->"ef66df30-cc2c-4725-ac52-9a1f2df2b1b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"n", " ", "\[Pi]"}], "10"], "]"}]}], 
    RowBox[{"100", " ", 
     RowBox[{"(", 
      RowBox[{"\[Pi]", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          FractionBox["1", "10"], ")"}], "2"]}]}], ")"}]}]], ",", 
   RowBox[{"n", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761582294128482*^9, 3.761582310709152*^9}},
 CellLabel->
  "In[197]:=",ExpressionUUID->"d39a79e1-b8e5-4da9-98b1-36c8b5dc4354"],

Cell[BoxData[
 FractionBox["1", "100"]], "Output",
 CellChangeTimes->{3.7615823117617683`*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"8598112c-6185-4a7e-9de3-0bb8276e90a7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "\[Delta]1", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
         SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
      FractionBox[
       RowBox[{"Sin", "[", 
        RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
       RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ",", 
   RowBox[{"n", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761582075586*^9, 3.7615820953282027`*^9}, {
  3.761582125406373*^9, 3.7615821538360853`*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"2f7bd202-d0b0-478a-a7ee-173de1d4e0f6"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", "+", "\[Pi]"}], ")"}], " ", 
   RowBox[{"Cos", "[", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "14"], "]"}]}], 
  RowBox[{"5", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.7615820959340935`*^9, 3.7615821261026*^9, 
  3.7615821943864136`*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"cd3dc093-412e-4710-ab04-74a17bbb3fe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n", "=", "6"}], "10"], 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Delta]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
             SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
           RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"21475dd3-5c02-48b8-b96e-3cad91a6f1de"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
4Q==
          "]]}, Annotation[#, "Charting`Private`Tag$3721#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
bUFpTqEjbSWTkEP9wfrF04qu7OpZ5qZNQlp20XBvaisSkfB7/7FvEl51f4nW
y2lFjVu3+94anIT4OZPowhetSH7jZRaLMQnyvzxDDOpa0dzPyf4e1iSYCWcJ
8TFaUSRx7V3u2iREixmcTtjbhl4FqHgfU2KCnc/gaGhpG7p0k6L48yATAl0e
jCa/a0PC7gETZapM8GLW8WR8bEN+V+uvyBxhAk+C/vOYjjakfdrIlE+PCR8P
meiOc9pQ9257hT4bJki4dpU92t+OfpEejvncY8LvrHqp9xntiC7Y57p6nwn2
3tsS/+S1oyYzqbmYaCbUamMOh160o5Tukr95CUwozqjUjHvbjpSobdu60plw
J8s9qpnYjuy/chsrljDhaH02j/ufdmS481RXdRkTTldc8du61o4OXE6x1nvD
hKHwIJ1364joD32Xw4VqJryTusDoEyGi1BHt4KgGJvgvXz3xci8RtTJvlY5S
maDl+0H8zhkiKlP4/D+vPibE52pMxVoT0WM33ro/A0wYz80QTbpIRA5TqQRR
BhPUQk+ZhTgS0crsG8ZxJhPqgorjRm8RkeoSWzTrLxNIUgcQPYuIMnjtA6z2
sqBf+MxSAoOI1q7vOEKRZ0Gw0W5Fy1Eicmom/zqryALVaNv1whNEpBZpEGiu
woJninkfXKeJqP2fwh2Toyy477FOtHKFiH6v/IzQNWNBvdBmx/DtJHTlUrne
5zMsiE2Y31MhTkJNH1y4dSxZsLzyKqlXkoSSgr5GHjvPgh7JLvv1ciQkv9QQ
pe7AAkGrlqklZRI6Px+XoBTAAlMZ/R4JQxL6ZGFg9vo2CzJPGCpWG5GQXOWq
kEIwC+45/FE+eYqEZr1vJu0LZ8GLA/pHTc+QUNT0uUcysSzwyQo4z7xAQhxT
Eav8eBbsuSAipHmJhCxK27bsesiCREU177ArJCTlrpUmmcqCsq37js06kFA1
c/dTsRwWXAwVWLjqRkI7jb9eSM9jgVWgwDZnDxK6W5wqvq2QBTtc1004eJGQ
mfP6rM3FLNC8Z5Su40tC42OcHKFKFqyIOR97EERCp/Wf2yVUscDa7iZD9w4J
VRba7RJ4z4JmnvDDP0JIKNSBnM9XzwLx+cu/NSJIaCv2voiHwILtc3Gcc1F4
vYTCwmpbWfCoIH/2ezQJCWgbXvQksuD49WBe11gS4smgCvd3s+DSlo2uZxNI
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
          "]]}, Annotation[#, "Charting`Private`Tag$3721#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3lYTO8bxish0R4q9VWphCIKId1ahbRpI9qQUFRCKKVEiEJSKZSkIiVa
RE7rNDNtU0m0z7TNaUqLCJV+5/fPzPW5zrme932e+36e875K7qdtjgrw8fEZ
UD///999lNtQQtrpC3nMexD89oq+oJGcT5esDja/F2HS9Fyh/SQu8a2sMeSD
Hio+1fPBntqW3CRZW0x/Onj4il4IHI5MFt+TPYI7RjqHjfWi0bHuutFtWX8E
VX52O73tKZ4utrx2U/Yq/D0Oqa7RzcEVobcrb8jGoJpUSFVbUwLH/cnZo2Op
cA3Kv6+axMLC2SsHd/6XjSWjns/fq3yFqvV3bvmtdzALz5Bd/r0T5+u2IG7i
PX4npW+bKeBAdG1eH0OoCLwwu3VryzlIva0VOSVfhHuad/Mc6jhoMF/5zdmk
CBvydY7H9HKwplr6jGpsET5p+f99K96DrqqRtNzNH7C4tWtrxLEe7Cx9Llp7
8SMeMQSeHRfrRaeiUt6/Ox/xZXX/2ueyvfAPSXTSevYR23eZsb6u6EUy7qff
r/6Ic6+6jNV1ezFVHGJ4QL4Y0/rRUcdce5Fd5HRuoLgYFidX3TiS3Yul7yQ6
+fkJ5FwwYGBnHw5GTtn2LiHAPVrupGfdh5QjfdU0DQIhXXWK65z6oLH4/ftb
jgTGNew3TJ7qg+E51weLcwgYHFKZIxHbh02JDmkx60rwm/Vl+BinD27OaYfS
O0vADTFJijjTj6u7l8XHkyU4qX9R2jiwH2mboj/fnCiBadP5nT+v9mNI9OIe
b+FSRPn6NOnG9uMcsXfLhk2l2BUnstK4sB+Rij+lP94uxTztu8Oef/uRzzGq
qdcrw0SHXFbzuQF8MbsydntnGWpV1s0uvzyAX68/LTG3KUPggTdiruED2Hxp
ixv9WBlsW5e5l94fQKHUul8l98rg4xIWIZQzgPfGcoq53DKIaN+oTesfwMe0
0TMxMeUY8P86KGXORfuitfE2T8qhv+RruoQNF9N+Jz+JZ5aDJlzYLejIxXb0
C90myuGjNJNffZiLTy1tSeGD5RjUlK5tvcgFIVRVdW5HBaqOZGvOpHFRdiJp
2f6hChwULDpgNsnFW/LkSedfFdA6uuNoyhQXqZ5bPxzmq0TJ56jlP2a5CPdo
OXBKuhI+K0WfBgiRMHOXSAjTq4Tcg6XvpWRJ1O8Pl3kdWYlTw7+SbuiSKPm6
z/NtbCX+Kw4wsdAjkeOgXFj4tBKt++jRC3aQuGdHOJS/qwSX7Sl+ZCcJe+s/
sV/bKyF8mPEs3Y5Eu5n34jmaNLxymc047UOitmrbUaHNNEg/UrB8fIbEJ1Ph
PBEDGgr3OEeXnyPxxPiFrYwdDacMfvSNBZJw38G+rxlEg12MZHNHBAnuZjtJ
x1oazC9cvzP+mMS3/BXuh1pomGgmv9xMJsHcOP7GnU2DY69UoWwqiZfaUdbe
P2mwsQg2XpZB4tQ6RnSoQhWs5PuvZuWS+Km2XSzLuwpOyHwpWkFCn2NYdTOg
ChduZXtto5G4lmQW7BlWhc2iToqH6CSWSNuOrIivwomXea7BNSQ28Z+sT6io
Qs1WPQt8JnH5o8/1gPoq6D9elCX1hQTt/DnYt1Yh0BH8HS0kHL5fyZYYrYLq
xYRbFm0kAtrioiKW0VF+QnZTFpuqd+zjnR5qdGjNrdy7qoeEkE3qrNF6OmpE
hF0SeknE07NPz5rScU9nyMdpgAQnLG9lhzUdByY7/F5ySazGh66ig3Qo+0j6
jpIkivJoluf86FB7qnl0/xAJAd+a+bZBdEQoxB0MGiaxW6ORWB9BR26b+b7Y
7yTaUjrWDSfRobK/w+DFKAkV554BZjod/wZObnsyRsJLlnyS/pYOTbvMzZHj
JKajJsSOMOgQ+tO+zWSChPGev1UGn+ngfM81kfhJInIeX8jyLjreY9qukeLP
pXN1Z0gqv9OF3hG/SCgELRxtnaDjVuvQbe1JEh66EumFs3RUFqQWNFH8+scS
11hhBlKkx3iev0mqH+Vl/BczUNrMXfODYv0TyixrRQZe5aUH+P2h9FJVj1i3
hoFuo31N/RTXdWvuENnEAKtHfLvVX0q/RO3fgzsYGKwWK3hNsbPDlhz6HgYS
BK8aCkyRSJOEZ5o9A4bHXnTvpvh7rbHiVTcGNiS9vxdB8aYbu7+6eVH7+Y/v
wAeKg42tonGegcfraZt7KKbP2pkphDLwh3tQk2+ahPgHJ76pSAY2rVimJ0mx
4zm3wq8PGTh149BRWYqfrj/mk59CPb9zLXMxxdwhL/WYLAauef1bNJ9irXS/
bt9CBq6rad8ZpuIHHA6Isyxn4OLVuHUMikv+u2ylWcdApFT6eDzFQq1hQgu/
MZCuwv7qQrHVgxsl3B4GTKrpPXIUx1lFBdC+M6DTTkpXU/mzFz7QSv3DwMmh
z94+FK+uSuBeEWSCaak4KkyxX+jTpy5iTHxd6pmUQNWzaHua43Y5Jm5LWpxf
TrHAn5fiy1SZ4GNcCI6n9FhWa/gD65ho7Fz5SpJineRvzUe2MGE7XO0dSul5
dNf8R6/3MhH76l6eCaX/ZYXHQU0OTLRH39GPp/wRO6bj+tuNite0wb2H8hM9
3l3V8BwTR87bBzv9oPbr/Wf+sRAmyjIbLt2g/PfXIHrw1k0mzNqHZF5T/tQY
LM5ufsxEoNXqbW0jJKK2ym49XkXFW16xp5JHIl00R/5OAxNrsldcSB+k6scx
nc1tY6JkPXtfKNUv4zf9K6ZHmPh1RU1Gjuov+7Z6i2iZavA9T1zYSvXn6WyP
9XnK1fBWjm7y6yYRETYj1apRDYUjb+wFuki8X7Pm2wqDauiM5z2Y205CPvDa
4YLj1VBNNlid1Exio5WCafuZahwhZ//xmkhYqLxT579cDV3f6qT1jZSfatjD
u+9VY9+K3QbJdVR/y28P6CyqxqpT4g6SVSSmRpsOzKmsRvldk7dLK0lIV57Y
rl5fDclyf1KqnISpd5yAX081CpXnD41+IpFR/CNy7qIaWN2vvbo9n0TZ3Zun
Vy+pgW36dd6ftyRajyrZWCrWQPSM9vasNyQWiVoujdepwY4XqzN/vyLh45yZ
rHGoBhWJ80nlZ5T/Z13z972uwakLvlO02yTM95aEmhRS8Wb++PPfInH40XLL
zWU1GH0e7aBNzevozZ0Dcl9qsMRIzS0olAR52kmWM1MDmw3+VZnUvE/stgv0
2VuLXxn1v70Okchdm2fm7lCLhhB1xeUHKP0DpRfbutVi0F2nhW5PzWuZpqzN
Z2uxQSLqn4AVVT9rq65/ibVQU95xUdKQBH/ZbsPbQ7XYnzji81SFhIx4pmjw
r1oIdnRU1yiSWOu8oM2Hrw5Wxxndo/IkDvytOmMrXQdrm3QjxcUk3m0web5M
rw7/tD5sk59LzaNnEMq8VYdfJ339bvVwUXNVp462uh4RJ5oTnBK42CpWLXB3
Yz1et+9TX/aAi/R4t81OO+px7kyxZ0MUF2Gv7zwdsauH3dkMSeVw6v2vXD+Z
K/VYprjnsu1p6v01SUtPtNRDNGnMmd+QC0MyNGeeIQtNFk1X47sHcGFtHfPk
ThaKPk1mb24dQM4Z2T6WOQsT71xka5sG8N+/bNlHDiyYaka+76AN4I9kR+g6
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
Pt+Bif8652iOHeLhjp6k2l/q+eEdI2rJrjz8CtgW9IXi9JRWRevDPGTWRkcm
UjwsSJPj96DqsbvBzpziDcfeSL/x5MG+uaa1j9pfACNR1O0kD4tUjigcp7h4
TYSQxCkeBD9FLP9C5bfp89Laez48HJ+8/EOX4pzAF3elz/BA157wjqDqs0p1
s33sWR4smp9FV1D1S6mlyckEUOuN2R0apuorf86+K/4iDynWXc0CFD/4r//Z
siAeer2UpgUpPSJOz9VcHspDh8KD/fWUnvwyD8aeXuVhQpAR85DS+2KJSr7y
dR5iTYvCzfcw4S1hDLVIyk/vjtwNNGOi/33TnPQ7POQfC8+ZNGXC1f0wfdVd
yn8hG+64UP6yeRtqrRnLg1bdrTs/DZiodpJckh3HQ0WwYP4Kyp/GgimtWo94
kLmZ8lyf8u9mu9LDOk+p+ij7DWzdSuU7Y6Wen8LDnPbP+vK6TKxO6x7a/JyH
AAPCc3Ajld/k7NltmdR+wpdi73omYp9EbS1+xcODX3Jj7LVMiJktn9XP5iFG
pyHksAYTAvH6EYbveDg3LmyiSfXfwNaghF2feIj8zy2vjepf155FLtUlPBya
sMpokaH6+1biir3lVP2+Jt8vWUz5v/3DKys6D6X3Mx33izGRe/nvJ4dGHjwc
yTkv+JlYs/Jm2LfPPKwTlhde+I+B1HpZM6cWHoY+XFA++JeBh4pbGpzbeeBT
vBZXSc2jwLLzPUf7ecB8E8F8DgM/T8xPH+BS/t7XNjesk4FTUg+9jvN4ePg6
UHd7KwNuR/J/eo3yMN22xeBCAwOm837O9/9L9evoBztxggGJ3X4aoaJDWH2N
6fQploGnpWILt0oMQWi/DY0XzYDWlixyTGoI/joFx+bcYsBCnZvmJjsEDeGW
Y2OXGbg5z1nJQGUIB4R3izKOMiBYvmsJ39YhLHom9cZrHQP3tw5MFOgNoeKh
xL0d6gwo515tOo0haNGOSM8qMrAjmYjuMh7C9+p+WT1JBoKCNy4kLIeQSQz+
zP9Bx69tSnyXjw6hMzrsfn4uHeFvP3Vu9BxCYc4yEd1MOqTXHCwePjGEc6WM
lNRkOrTlHl485DOEi3pmRoimw+f3op96l4Zg1eNpeMmLDvLdb3Iqegh7/PPe
L1aio12T1XTh4xB4/L2lUpeq8IQnETSHGELS/fQlNJ8quGfsU7tdOoTdDfk6
xzyqQKq0BDylDaG7IGf4rHUVfi3rVKhiDUGqIVaPplYFCeGhY9J9QxDt+PVp
C/W9N+2fP/1aZBiBH5auyBSnYUHqrue64sNY/Z++j6kgDTVutyzKJIepedj2
rHGyEvs6RJOblw5jQu5vb1FnJVw/LzadVhoGQ/BcZ/XLSlwqWxG9a9MwpK8e
tfhtWImcx1DpdR5GGblfv+xoBX5c/DHfzW0YM373+AocKrDJ4QWv4/Aw5l3e
eTVpVwU+iIm9bfEcRrWi1h9oVoAW0mlQ7TdMzd21RW0/ytHmHuSSe20YIoZh
xPnL5Zi38kNCyOthFH/Y+znyRhkOZW+SUPg3DI95qSceXyhBSHjylfbM72hp
LlhFb85HFlfhkaj5CIh/WtPOWemISAp37bQYoc7Ptpa+5uk4YjOs+tp6BGda
7dec4r2A/MePOXsdRhDU79WsvuoFbkY50SLdR0BLKNj/8tlzeG6KHxO+MALP
HPUHWg9SoHxV2mx+2gge5zrG63yLwz/dQJGW9BE4IMZ9t1Qcvg33NKa9HMFx
i+LB3XsfItrh7SHTNyM46+7yQ7T0AWZX25wJ/ziCIncx4fwX99DeEPV4TtMI
FLsTt2j3RqDw2uThpuYRGEW++nbA/jpitrmsevZ1BCsc9nZ708Ox5/nad4ad
I5AOOPbY6VUoigJqGVfIEby/qJ/wuz8AsZobo6yHRnDFslhxD/MsfDmJtkoj
IzDNfHDyZpYf1M29ukomRrAwsCX23YAnBPk/p0ZPjqBdZtWn7ix3dOdtO+H6
dwTCN1Mafg844uOJZ+u0ZkaQ3HLPXodrhofLF/6cnR1BfOyuwRAjT/3/AWkA
mCI=
          "]]}, Annotation[#, "Charting`Private`Tag$3721#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$3721#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmHlczF8Xx0shIUWWws+SJUQhWtAnJKFsFdnaJUshURISpU0lCWnfKO3r
NC132heifS9Ny8xUM61DVHi+z1/zer/uveeezznn3vO9s8b05unLMwQEBFYL
CQj8//foZU4No19fzbCm5riar7+a8EHpW9+lFJH8J+w4t90GO0PfBqVJaSB8
l9wIvd0Zx6qaUoOl9NC/+LalS7sfzppP5PlJmeNIe4LGRFsEOuSfH3whZYvT
j2S+dbekImzxCVcPqWdgfH5Li6opxBORtI3uUv7weLHjcE1yLQzOhSeNjEbh
5ke5zpKebgy36YlGSEej5IvrlPPMHrgailzWPRgN/uIMDfmNPUgzuymd6R+N
69rpLL1rPRCz3ufyQCkG5eTVgZrhHpQ4t5yf9fADvJdrWNyd6MWOeIlZK0Ti
kCj8V/jjLxbm/nty8fB/SVAYmRDsyx3A26tnDeU0k7DMX9FvVssA1tXLGUtY
J+F7cHu0xI8BqMU2mbXlJeHVFnmBXrlBZMcGZGRtS0Zav7eM3ftB8HS5uce+
JsP//sYXGrZc6H988/nO/FR4DNyw4i4aQtAlZ22LNalwDqqavWTrELoXWlUZ
7EqFYtLNoA2aQ7j58MC3fZdSMWv1/mvTdkNwP82rnZ2QirzBtwH2rUPImz7Q
+l47DbsY9U6RgcNYf2qIU+SZjsftsf3RT0cg/fiw6pXwdHC1L15x9RmBeEKY
p2hWOkrlo3hn3o9gUkR326nudBifSeOVpY6gmpF1p1M5A79LHqdzukbgoPDk
76++DGjGFFxeqTqKrwskJbepZ8Fi0pe5tGsURfusLtfoZ0FuBusWp38UtOul
mbbXs2A+afj3w/goIsvsz+UEZMG56ufE+Kwx2D/uCNHiZcFo1ZyP+XJjWDsc
s8kskIa441w9qbtjsPuqgrf8bMTFOK3O+TUGsW0ZfRUidKjmLgno+DeGqBcK
XlMr6Fi3Rz9kZNY4arQ3thgeouOY8YJzHMlxbPkseWd9AB0HjP5J/6cwju9l
wzGpSjmYGbtpXZjZOO5tvK7TeywHIddmHKu8Oo55z1nji41zUFip0NB7cxwq
mh3q991y8J/IbNHBB+N4VVzZipYcXHcMyNzzahyHC6LFqhxycTPc7Tw3fxyd
q9dk/PXOxcnRLznLi8dh6xR0QSEyF/qsIZM9FeMIx6uPrz7nIvG5o92xunFM
5TkdOL8iD3qSh2ISWePwWznN8VTIw1SV6zzjwXHIPrTzydPIg79ZfqLgyDj0
91q3r7bKw2RkW+Ti3+NIol+4x87Lw1urxWpOonxoSjetkKrNg/1Y4600MT7a
758uOsrKg/SOjtbGhXzMUTkiniiWj9uCobpD0nyYZe2OszXKxxuHn3VGm/lY
mi7RKShI0HhyfIOOJh8Xvab0epcQTI8E/io7wkeEed/nUjmCogkbDQUdPuQW
Z2d7GhAoZiYer9Dl48A949eLkwn0YnYeX2nMh9vxo/N+lRDYrgiSEDbjo2qD
4tPWNoLFyx+da77MR/zgU9o3IQYG+lweHrnOx+6gszH+8gxsVXx67PhdPs65
fWG6qDKwzeanRbgdH462+1faHWLAyoK5pPs+HwXaW/zPXaDGi77sk3vER69y
2LejFgwsaWnP3uXEx6z1i+fuvc3Aw7Gn9XLOfGj/+fvkv+cMZEcljvS48GHd
fydvgR8Dy5V+TkQ+5+NlA+eXQDADz1Iuxp5y56MxofZmTyoD+dtmLr3nxcfv
d4c/1ecxoOid38J9wccK11xWSTkDFo9ddE/58GFiGHPpYycDTudXO/S85OPZ
0eXv3vUzMHfuf9skXvERs9u33oNPcaXjBzl/PirWzhR3/MfA3kmRgV2v+eCK
ORyzEi3A5Jro33IBfIhNDbkaLi7Ai+4jrRJv+NjONis8sboAOsMzfXsp1qtr
/qO+pQApwn//i37Lxz2io7JjdwH2fr/hqfuOj3efCm1l9hfgwI7IlmGKc98o
JUtqFyAkZLaYQyAfnU/jB2eeLYBi7JKtYxQL3lqzccKkANdSTPcYvOdj3cUA
U86NAtxmv9oXT7Gm1tyQFrsC3D9gqTxE8VVFp5ZK5wIU3ktT+C+ID6/VPyRz
X1D+Dhpu2Utx4rxrJxPeFmA8+epWLYprfnV6hkQWIPAuZ88Bivm9umU+iQXQ
cpx5cTPFS2rKZzzJLoDJS4FXAhSr5O1Tsymm/BeQZxVT+12MTb1v9o3yx23q
vB3Fj15vzNBrLcC306yfSykOfxI0cqivAE6sZySG0lNsJSGnNFIA5kpnugzF
rHOuV2SnCrBveQjPm4rHHM2pCKlZhbi/L9GQQ8VPbsetTlGJQryRDF6kQPHx
//qkppcXYt2ZawstqHjfFj2vz9tQiKc1m008qPxkdh/88m1vIc7z9s8OofLZ
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
uuIZI6mJciJmxkheqt2CFwdrRKRHy4nA5RVBfqdawImQKGkZKCc9lvU2bhdb
ECyu+uRNB1XftzRW29q04Kj/HstFjHISZBM2d9iuBW8+1MyUpJWTF7bTP68+
bIFYj1t9QxJV//bpVUZuLRgUmy0dElJOlJzWPTgW0gLBvxF9WvfLiayzk0Vp
ZAv+uYXHnb9ZTqSftZ/aH9uCipDjNfKXy8nf5/6ySuktOBC+xmT9yXJS7CPc
uLayBV+Dda4ckiknmS+NC4K/tWDf9BNJh6Xl5OOr3PhlDS14VjFpbju3nHi+
sX0q1tVC3e+nFueMlZHTob0Kkz9aYOp+qfxtfhn5nljsWbOmFQGHF/Y2Hisj
1Txh7o6Nrdi6weRh9d4ywpA7pO0v1wpLLda5gK1lJCyuZN5ZpVYkntss4CZW
RkxjSl+0a7ci7ZDVzLlfSwkruNyHbdcKCyOp+OqDpaSxXWRE62ErzBqHZqVs
LyVly4+cjHNuxc3+51qmq0rJx3cV4lYvWnEwujdRebKEXHtd+XIsohVBQuvO
5SWUEJ7Xl1d/qloxPatw49V5JaTz8zy+YV0rHM04uQ8mislXUR09RnMrQjbe
nmneXUwS3aokn/a0wu+FHyczq5jcevb1tcjvVpxq3+libVxM+A+q3yxa14aE
fQacq3FFZOpa/ftNDm3IpNstzVtL9bfdl15ue9yGdV/PKTWLFpJ4QZbrzmdt
qNniK9s0VkAM307c3ufdhvj5Bi5PCgtIQYm01qmINpzhzjnrY1xAnq824dtX
Uuv7rnLL3zDIokaedrl0O06/ajkm1J9Htuyf/dcipx31hu/u/BzIJIcj1lxJ
WdoJraO6v3t3vid2K43WMi9+h/ryy3SvjBCYnlQ4027yHSIdoqv0PUJx/Kmg
R5PFdwiUXPPQlA/Dhv7I0apb36ERbDY3ckY46tM5DPqz7zi5hlfYGh0BBW0b
I//477D1mL0oviMaHAeXoMPT33HjoCvZIxaPgTNbLMMFuqDlki+hYx0P45FF
M1YJdcGWNF8Q/BqPYzJ9u6RFuiB8U/X+Sa8ErHV/Hiy+sAsrcv/esxdOQrXe
lxt/1ndB0dE/X2k0GXJc/blNOl0wnP/Y7/XHNND0tInHSWr+yWC3yoY0HMw7
cEdNtwtx203D82ek47y3fFu0QRe0P/Nn9lxIh7vCnE+2Zl24cWDuCcm5GWDZ
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
j04Why55eV2SjaHSYx+KD9NJ+bts7fVL2Zhn8iHX+RSdOPhfFPkuRdl77Fsn
eIFOOt0jHp9excbqpbtaD1jRyUfbbdYqm9lo1e7d/c2bTs7frNk0LsdG4YV+
df8AOpl/zbYvXp4NDkdeSDqETmyM6BdX72LjfM2FgCvxdLLu/KVlrUpstBf7
XJBPo5NGPYH6V6psbDgRUZCVTSd7jmoem63ORrLZQiPRUjoZ0uifVXCAmm8j
61P/mU7C4FXocIgN7Rnep4xq6ER4V63K0NH/c/mzzDY6yZS/++ODDhuNDblj
zl10cnXzshSTk2wEleznLeijk6+rDGUb9NnIfKfldp1HJ07Sgr3eBmxE/Xdy
s+oonexcHBWqdYEN1a9jFyr4dMJacPjCDEM2vuudXiX1i07eig4syTVmo/fZ
CrtNU3RydOaL2rtmbPipeFpM/qGTP//kveUt2NBTNh/1FMghyZO1R/ot2UgV
/728c0YOMf1xd2bkdTbypjYMjgjnEMmRZQUXrdmg0c+YF8/KIWUDOY5LbrMR
Z+P4wkAkhzj0GSpX32Fjwn2pVcKcHCLXJch3v8dG05MdokWiOaSzNSrp4H02
5lab3ng3N4f4Nhy+/ucBG7Np5e8V5uWQA9UDG7IesZG1ZkG4G8U/Kl9033rC
Rs6t6y7hFLfPbbCcfsqG23WrqscUF2qvGH7uyka+5oLlGymOfWF2d5E7G+4R
S+ze/N/+17ipEE82ZHtTBqqp/e8tGHuy2ZuNqsX2j+so/y6dVBHJ9GXjV5El
Qin/NV46ee9/xca31kFFxdk5ZHNtmWTVaza8nGuu+c3MIeKLFrw3eMuG9dQp
brZQDpnQPbOmN5CNbfbzS+IEKX3+wR9uBrPh83uu4OV/dFLc0Lt1KpSN4xvy
4jnTdBK3RC7dNYKNm+t/1e+apJOXZ++oLoym8nl3ylV7gk4MWwQPb4pjQ6Tc
gDSO0ImG9JGq9Hg2csV2mh6l8r/lgq+uehIbH9sayp7308mv9v+Mz6azscK5
c5kxk6r/lRas7kw2uqt+yUy100mJYcIN62w2LDdpbDduphO/rj33XfLZWKKs
HOD2lU7s1zz9J17AxkJ2kbh2BZ0YmVa6BBWx4bFPs66liE7keg380srZeMzX
cdCj0Ukp++4nZi1lT/qIVTl1XuJl87ZbNbAxGRy1v+sNnby6Kkz71cSGjKfl
dKEvnRgP+hUv6GDjz9MvD/qf0MnkUFLHPjYbdz+tWZJnQidd8hNmFf1sKD+W
8dl2jk7KbqkN6HHZcFjcFn39JJ34j335eX2UDfOJ8wuOqNGJ/M/+BYFTbBw9
cT3o1VI6WaK0PWD9XzaMY/ZUms+nk2k7+xUpAhz8qbW7PEOITip/z9pUPpMD
VYmdupG8bGL+R+bAzwUcEC/nTY8Z2eStsKHt6XUcWMvd6qNdzCZ/zZbuqtnA
wdZFvlsiTlDzi6p/nNjEAV2tLPXCgWyi4HzQTmcbB6KOM4XUN2aT8n+yDlrK
HJTqd+yoGaKRicnxx2raHEwGjq7eeZe6f88nqOcd56B3Q80v+cs0UphtIbj3
FAf2xtbb/+nRiLd9i7PKGQ7+yrLOLlakkQ0/810UjTlUve71XTeSRc6Muntu
tuWgIK7QdMQoi+SePKgde48DtR83ZNbrZJG1ydPzZO9zMEhXT9+mmkWGrG96
r3/EwRatJC5jURZx4eq9XO3Ggelzjh6rOJOks1e9WRLEwfJcq/rzqzLJos6M
iBnFHIzMmIreSPVH73kPH2aVclBezzxwKCidiO7RMLhRwYF6klTNbmeqf76t
nd/4lYMEbWZBgE46GTs1bB/bwkEX7YHoqe40Ul0ie+LkMAfif0smOUJpxCvh
/VSwdD8CltcLu2xKITMfPtFTud0PEcEbTjEr4kj6KPc3udOP95uvoqYtlphb
GIRq3uvH2vmhEt8CY0nxCfkB3Qf92H248M+hZbHk2dqOx9Yu/dS7V8dCXuIj
ES5X/hT5rh9XZ3a0mk9FkxmLRgTFCvuBzlf+czLCiUCsYVL3wgGovlVtCcp8
SWwCk14sLByAllJj6sTy18iaDnxeWDyAciXHhL3JrzFt6PrEpmwAyrTdDzQ0
AvBc5tLd2i8UbwjzeXP9DYLiRS/5NQ2gOT4tXzbrHUryL8st5FHjOc6u3eoh
WNaz/LPEskE8E2ZESHtG4tKh2SUF0oMoL2z7o1odiYgPY/m3Vw5CsWHGvU2L
oyB3oyK1Zu0g2rn/3bIOicL+H/cCX24dxEUbUXe3xGhcm117VeLgIG49udD0
qPgD8ra4iUhYD+Kt2sDj90WfsLt+aZXfrUHIeXl1av75hGTHDy8l7wxCXPl2
StbueERUlUovsx8E413xfM7HeLjdnLl1lfMgHJ9zt9l7JOB0mvOprQGD6E3J
XjS9Pwls1YeBR/IHYXFPdNEQUmDcM8/oM2MQTsu1T2UbpKDVM0hGp2gQYpNS
sia3U/ClPSf+ZPkgVNl23EMRKUh9NJl/tnYQqTHnpgxnpMKx0K7nMmsQpTI6
d2JzUiFx1EbOWYwLi/5k4iSRjrCCBXNVJbiQvufjv3djOhRUEvpHF3ERpyTc
WL43HcdlOTEmUlxY7pAcOHUlHR6zDNfsX8fFNhXNR2vo6RAuOrJEQJWaP6Y/
6XsmA1Rv5mft5SJfOPYkrmZgbeqzupvgYq9Qt03OgwyohxPf7xpcyPosc14R
loGHj3fNJSe4MP05nvGQlYGfe9YIPLrMxbz87n3BVzPhkpbfucuSC4EEXd2l
9zMhueViHu8aFwblLOFLbpnYKf3G4dItLuJ9jRhHYzJx69e8H3sfcPH2zled
+O+Z+Hczro7/kIvmjyd/PuZlwpt9ODXeiYuR/LLj/01lIr7R+eYKVy6EuUci
6Iuz0J/+q3/KlwvvrSkj1lpZsJcLKE97xUV7XMKO13pZEIna+eF6ADXfWP6M
i3EWNryyNm97z8VFe9ueQrssmN7u7aTHUPb9TwUnR2ZhlPMkzyaWil/UfWuZ
xCw4Ga8K2hzPhdPKhltGtCyEnjh/LjCFC9oFAfqOL1lo31pddz+Xi7Xbvx3X
GKXGByUeChEu9c7PGbn+m7Ifq7vhRQEXucfkTpgJ0tC/rsk+rJSKp4nt/AJx
Gn4u71xZVs3F2MhCJaWtNNBbVpWdrKPiNzjDtG0nDQ/fmNxqbeDCvzh+4Lgq
DcKL+gp5rVyoX83lRmrSICHKvSLZx4XcFZUE4Us01JdtlQhhczG0sjF3rSkN
b11u0jcOcFHZXNe94AoN/wmOz9szzMWKpfv1z96ioTtfMbN4lIvWewf9U2xp
iHa8Z3Scz8V0xJevrfY0yP36nWLym4uu3uhVgU40DGfsuTA4xUX9P4ctCs9o
SL3zUPjuXy7sp7pWvn5Ow73tJOGvAA8jO1zHyj1oUBkWOOsmxIOGoV305xc0
TMcfEFg4iwf1gFU7g31pYFx7FvtehIdAfa23+17R8FS29PT6uTxoO0jVxr+m
QZM1ezpxPmVPU6pz4A0Nc6KORCuL8/DLRI4+8Y6GLyaexwsX8jCv8bV53Xsa
fFdVTRxbzEPxgom2h8E06HaIhTcs5aG97cSqiRAalrw/edRImge++d+tCKOh
1cBvnLOCsi9PZp8JpyF4SX2QzSpq/tKE+D0RNBjXL9acXsPD6SP7V45QvM7v
7LDLOh4279M9fyeSBvaJd28XbOThfOqyyyUUx81v2/9uEw+KH9aDRbH15xWD
a+UovadvDDRQvN3d0D9+Gw8eUvuu+lPM1wzbt3s7DwKemvlrKKYJd7PITkrP
6dfch9R+DwplfI/s5sFtq//ER8o/NafLKnXKPBT2ze2JoPyfofah++IeHnao
y6RdD6WhZIrjydrHw0W+4Q0hSq9b9uZdt9R5WB0SvuhaEA3adjc6fx/gQSF5
S2JoIA0LdiU+f3qI4ivv90e9paF2bFhhvhYPftncOrsAGgKSt7cGHOXB+Mj9
69L+NJyzvvN0tQ4P1ad/iXm9pGGFXIZc3Ake7IMelXzxpiHyg/LjPD0e5PTK
3HPcaLC47CB7+CwPySauH6660Kh3bG5N9TkeVMsO/WI9oSE5BOt6DXnw12ac
OeFAw7jD+GwTEx5qZ/++f+IeDbvPfhjsMONhBTu1dbUNDTkLFqQ1WfLwbMef
B0pXafg7WBigd52K/4H5NY7mNKiX33OoseLh6Mtgr1dGNJQ6de7/bMNDEAbM
dunTIHLJb73WXR7y79UEME7QcExFc06JHZXfG96GK4/SUD2aUJ3vyMM1ueed
x9RoaDN9aJTqyoMDZ0T80Trq/GD7QXl3HrpnJhm8WUnVx/K+DfGePBgsbA53
XkIDq057KNqXh1ax37bfZtMworHi4btAHvYuT28+yMnCrI05gU6JPOQu/XU/
JiwLR4RuPvqTzMOS/pUh7IAseH1fa+qQxoNlQmrblFcWJN56bLKl8ZBJ7PjB
9llYMec87UohtV7Dll2pk4Udg78ajjfyEJAetKttOBN3y+KzPzfzIKuzZbVB
TyZokcbBWm1UflKXe8c2ZmLfxXLzA108dIb5navMzYRW1ZvxXQM8xAxvc531
PBOXknZLrPzLQ+oVz1GnRZnIPP9LrFpgCBxze7dZQpkQm0Wf91RoCBGtRr/P
j2WAcXGfSL/IECrNI4VuV1P9Q1TjXzrVCe/PdRY945EBlvkpnvamITSfPJG9
8Uc6rKVvVDjqDcHTUWv5yo9pKC3ZWiZ/dgjbpPecqX6ZhlW3h4u7zw3Bqvqc
gMGDNFSX2TC0jIaQ9GebdZ9OGnbcvZ8leW0Ia6o4Bn9HUjHxzTU6/vEQ9PbV
tJyRT4WTS/iT9rghhB4ymSPrnYz5drOPmiQMYXWmbsIH22QEWlotZCUNwdJo
y6PZF5KRdkwlcjh9CMW3uq0tNyaDJVFTPIMMIb5IYeO1h0k4FiIgsqluCE5C
L/K0vyVgSZaR992pIZz+2J6ZpRWHBM7K92Law1jkmzbxLi4CbsEuxp3Hh7H7
S1xkqFkEzE/z1ieeGsYFgfqV91dEYEVubrLO2WGcpbltjnsRDg+fC6VepsMo
DYx/sNQ6DJa7342K3h9Gdf+WYqsTQVj7TFJrdswwfj32PZw68xX+KjvOb/o4
jMjUd6FnbvqhhddTG/NpGDVM/dSvzS/hezbtkmbKMH47jiTiky/+bT59xyV3
GHIhofrvgrzQXuMTIlQ3DH6n/ED4iqeguU6Y1TUMI8l21pPMwSfw32O0KbJ5
GGmzUsXD6E44Fr0t/UDnMATCPaWnkhxBt6+qeNI/jPvhqabma+8gYOsun1Pc
Ydytan36MP8WbncH6a0ZHkZY4KKe9vQbkNW+8Z3BH8YHw6pTHTJmEBasj/Kd
GEZ6wVz6+syL6MrYc814chhjguHMY+t0kXstUl7hzzCyzl6QdVt3EG9Wzf3x
798wbm9b6TIRbar2PyCkz2o=
          "]]}, Annotation[#, "Charting`Private`Tag$3721#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwcWXk81N/3tn1Kkr1CiqSSbEmJ5EhIQrYiW0hItpAkiizJFpHsZmwhMWQP
107Zl2xZh2EYRLYpS7/39/fXvJ7Xufcsz3nOfd/7muOWTroP6GhoaHQZaGj+
96v+gNxdM3dbATcndPcda4gCwzVe53EeaXjWq3qopscWzqfEJn7hUYYvJ4ot
U3s84Gb7QGESjz60MvLuknuCwMBqs+odjxUEPgmiWvTFwqjE62thPG6QpdpT
4TKcBbiDtwKDefwhUPpOSMbvMvBl/HL6DU80RCTQ8zHofAPDu/j85ZV0GBkM
f1Qz+xP2//M1uX4sHwoCKul7uGbgpM4SuT6kCFa3uvUZ0paA9+V1ORt8EaT3
fyCItiwB22dcCFNpEcR8VxHSWlyCv4x64jrEIjj6X2Wtp8wv6KopdR27VAz+
TauVTq2/wFPSd5dKKoba29OipR7L0MHKxSWuWAr9p00V7eJWoP6Kw4Pu26Xw
JP+xtsinFSh71FTi9qgUzkHC5YnKFUhr9rj7NaYUPJwzakUnVsDj5Wiy2mIp
2P55Yax06jcI/so8cz++DEJNuSlihN/wtEMWYtfK4TeB4ZBb+SqwiBeTvjFW
QJzDw0NOLauQHiYZusVXAcIy1fTGA6vQrXF6yEylAjj1CHMM66twtpXL9WRM
BSwFbtUnSKzBePOvzEKZrzBS1T2Vi1+D67UZLO2elTCewrWH12MdxgSOF++G
V4KwgzZl0H8d3HwSjSXTKiEmu4vOL3Id8BCVFdVaCZmFL7hjc9Zhq8pHyYiv
Cl4Vih2q/bkO+RXG7rNVVZB/1hFHlt2Aw0XsY7S0CMJj5L4/nN4Ak9At/elD
CKiZlQYsvzYg1YrU2iSKIDJ10yr6zwaIHiwvDzFE4GIRCcosm6Dkbv7+IAHB
0pBcl9jFTQjSUmemNiK4rEgrPQSb0H5K2m/4J4IDfvOpVjc2IZfiV9ZJXwOt
V+l+8ZpswsVEg8xoiRqQXHR1pvHZhLtBbZMBcjWgX9ht9DFoE7zcrh59qlID
NS5P1kQjN6FW42z0XeMaWPjy5G0vfhM0dnZ9j72ugfC/VStvajfBwizTNGus
BozvTKg++7sJ/upH4uLmaoBNe/wDlYYKmRcj+oLXauCaq/N5/b1UWGDxvOnA
VAs8xMe1KZxUcEeaslIXa6FsFxfjL0KFuE91bieu1kJqhG8MUYIKlR9kCFwa
tWDFKT5y5AIVaJ2Pn960qAWujRM1/ECFUIF1rsqwWqDKi1U81KFCHrOd9ufY
WtiBgKLk21Topo6FJKfVgipDKVveXSoc6m6h8y2vBQ+zb4HGFlSQrbqi4NJQ
C0VrBx3/WFHBJLvw2f3OWjjYfFD3sS0V8L6JyyqkWpCrYilYcqRCgwO7qMxy
LVgeH95ZfUyFmbuBNsJbtXAhfXe+x40K+1S3Unn21IH60nfLkKdUEJVyHmNi
rwOG8aPaRz2poHWMxLN9pA5eSdkkB3lR4TGT0e3FU3XwQChLtv0FFUqI19o6
5evAdd/KPuIrKvSr+a6EXa+DVe+I7Wx/KmzkVR/S0MX8ta4aaQRi9Rzcvsxk
WgctOtNc315TQea5rEWLTR38nSnmFXhDBcNJ98BAlzoY071uqhNMBY/rRZ+U
vevgVgddh0kIFWI/r3TRBdVBh9eYmVIoFco4JTZq3tVB7JQJHV0YFQaf2R95
mVQHvaZhnxIwTB3PVrySVQeJYcxarOFU4FadfbBVWAcK3xnGTDB8KVcopLyq
Dq6FiGv7Y9iQw5LwtKUO3nd1xQVg2MMj5ceF3joIfl1LMMdw7NjI39XROlhZ
eBByEMPlyrwCheQ6YFwoFEjH4g3nGKg4r9aBlaeYLTOG/7K9txPfrYNvy/N3
tbB8eZ/2vF1grId188ilh1g9cqOsxTmc9XCNbMB/D6vX6JrmsO2xelD5t2dG
DOPDMzv436kz9aDcRJXvx/iKZ20RIp2vhxgtHn5DjM+KJ/+ppynUw/jEzOsv
GN/DP5WcLG7Uw0VFF1cy1o+/V32i+fXrQXDebGzDB4ufVVU+alYPjnpTjWNY
/y6zbI0lPKyHxePfTuOw/pq4XWIwcquHbUsHustY/72Gn5zhflkPv6tr9PMx
fVRmLrtGR9cDazjvPSEXKowwi8fpptQD9xbp8EknKmy7PKpmy6kHl+b5G/8e
UeEKzDCGoXpo5A4+rviACmYZJ8Rvfq8HV3JoWyam5xf7LfT2/agHhum4rRlT
KlQP/EwKmK+HO4V7N1exeRi7wlN/bb0eHkY9ba/B5mU37Q6ZlqYBModZ5W00
qaDg3C314mAD5BrDtqIyFRBjc7O7YgNknZ0kCktSYcKRYVH6ZgNc1G7Wrsfm
lebHVY7V2w3gK70nQeYkFRTxlSZOjxpgS7Bk5TMPFWpkC1dsYhrgb7UvQy92
Hkyk/Dp0Ct8AkUZVn69g5wXNHjH56U8N0BBVkfhqdROu9nwMNK9tAKtbhJAE
0ibU2SUdubvQALhTPSH7Wzbhy9yjR2YbDVC2M/2jq2YT0m3lvt6naYTwLwea
n5RvQoD1gJEjVyN4jO+bNMvZBDVL9ng/+Ua4+qRgJD94EzrvBnDnhTYCNfRz
qqnKJtQM6tl+iWmExI1v+07JbwLBQLCsDNcIfOzyep1Sm/DuNjKoL2oEXG/Z
fAP/JtzR+RMzONIIEyUOPQrUDRhRczhIL9YEH3pp2fzTNqC9+fIDRpkmkP5w
yNE6dgOqVZmKD1xtgoAXuvpnwzYgRfmjPvftJqidrZI0dd8AS8XJKDHvJjjw
N9fP6voGkGVucxi2N0GuNjnz6PQ6rJ+6wvrZoRkeSeeyi+9bBwWiUnOwRzME
FBSft/mzBoFJai9t/ZqB1L218GpuDQ5x6f86EdcMaQ+jqZbf1uAi7aPO+IZm
GHl0QL/19Rp4/Ix9G3SkBVLe7wtw+LcK22/XWK2+tYBF5HnFiJ+/ge7PJ7Yj
J7+DzC53/MXby3Dxn3mJXl4bEH3uU/O1Z0BDs+aVSlkb5OGe5ySfnoH7Cfy3
ZOraYNmB3yFqlwQRMmOzvP1tMKo00x+RS4I5J2Me4k4b6KZ3ss8ykiBx4raX
s2Y7ALGPaFY/BbR16kphC+1gKWy+Zag0CdxsOSwvN9rBrPl5dj/vJIib7fvp
TNMBZf4bljarE2D0t9lVn6sD3HveedenT0CRlErGEfkOSGWJGXNmnADrNGDM
CemA5vzq2zMfR6HNX7qjSaQTuD/QagptD4Icaytd5IVOEP3MnsX7eRCy4ixk
jBU7QerVoVuGZoPglxeO+3W7E2Ra5opyawdAbpDswu3bCeEiqZTOkH5sDpIO
2w10QnQXKSdHvA+U5l4R9ih1gdaBl2FaNp3wTLzj+6PrXRD7KfYaabQDCK48
pC6NLvDq1p27eLsDju3m8yQYdEFP24MwVtV2+MMx+krCoQsY17V4iiVbgSAv
c9swtgvMEtWHK0SagT+C8id7qQuUu/nWVZwRVFu8zC5c7YJlnpGoxeRqMDvP
efcrtQsmtvv2M3dWQWK/XFkbXTdQa/NeFJyvBO6jwe6/DnWDs/zF+jKWcuDI
EV6Vhm7QCOftecL8BQqeV6ZeUe4GgZoEqzXdQtDW1NZVvdENOKuzXzbiC+Dt
8tMCA71uEMZzDwRJEIBZptnJ06YbaDzleKd/5MB/DQ8W0NtuyDqBT3C5g4P0
938SWqK7gZBeRJcvnAzKNmE3u+O6ISJf4gA+JwFeMRXnENO6ocvmTjpNbQzs
ajM8/K+sG3x2NC89dQoG6mgqSX2iGxQZKXIHW13Qh/yL7/VI3VDTI6hsrfMc
XfT9rmwyj8WXzTgbOu6Lngj9TnNYw/Yn523cEQ5Gv+2uWkYw9kBN64iUKud7
RNkcH/sh2QNBqUfJ/9bxqMTmbZ36xR6wtZJv9iOnIp8BhUx0uQeob79SPQbS
0KHSJIds1R4oiqt7WZWTgZTcjbe9TDB/5mITo6ey0YEZpokVix5QO/8Lz7uT
jQZvV9Rb22D+3C8V9HfmIMcLPCHaLpi9ikTss8tF8Wv9PEJBPSCcwyRw6mk+
emAVuBMb1gMTUuElbdwEJNl3YfJAVA8IcfluaLkRUNOX6KzNpB5gLv59U+pU
AVpx0ZVp/dIDNK5NZ+OeFKJKIu0RxfIeMJ/Kvi7fWIgCdQt2i6p7QNFYpEOK
8wvik2JrSv6G+cu1YBbI+YLUVtr1XcZ7QPlfouOphiLEaeF9aXa6B9q4DDre
7ilGY12ifCbzPWDSECxx93oxciOETKms9wATe1EdR0MxAoHLzRV/e4DjnNaj
PTQliCliPkeCphecdcPpLORKUIrTDRee/b0Qc+bdOd2cEmQ3Tr0dztYL/r2v
XRfGS5D0rSxZ+kO9UNn3kLrGWYq+i++lXRToBW0ObivDp6VoY7Hhbc3FXuBg
clNLOVuGak3dXC/I90Ki98WtSf0yFNp+wiDnai8EPh9GqV5lSPDzq2PRGr2g
dTPjR2ZzGVrkk6Lbp9sLE/QG5kvzZagsdJLkbdCL3efGnSqZy5GmveJnG8te
MLyo0r52sxxxj/yKGLHpBfMrr3zuPyxHxJspbjoOvdDCJONnEVCOPn/VMmxy
6YWR0msHV1LKkcfZ3cuXPXpBronwnKu8HF1L+MxP8O6FPZbJNB1d5Yhlvyn9
Sb9eEIk4v8o/W47S579+ZwnvhVjnz+4xrBXI8cOtE3ZRvZDZmT3hcLwCyShP
PW+M7QX1bGhdPVeBaFbc+wSSe6HHxt1L5GoF+p7EJOaV1gt5TKkKXLcqULR6
csBAVi/Q6OmZfzGuQGab58ak8rD6idelmWwqkHB648XwL72goGbEfuRxBVrR
vvt2rgyLR+uiS35WgSp2FmaVq3tB+qHrHTffCuSf46OIq8fqjZPwqX1dgbQM
uOK2WnqhUEn/Yk9oBeJmyFq509ELEY7GU1kRFYhIuKxe2NsLkleer1+PqkCf
TDtTDwz1gn7E+7GC6ArkxnR/y3asF2o+n+aaw7BC6YZew1QvhPfIsi5j6xmt
gnP553rBulpL41tkBephO/bf86VeIEjq3XwaXoESqwpM+1d7wd407O32mwr0
wE6l5NyfXnC7E5pi7F+BxA8PsYTt9gLdo8P/ffCuQNR6exsyfR9EvDiqWfCk
AtU509Rc29cHDHfS9362r0ChR6O5U1j6YPdnaXOoZQW68/3047+cfSBndveE
nkEF4n/69dttnj54Uev4he5mBSKfuCVYcKwPlPMLOJOvVKDCLqIns1Af0FQm
E09LVCAvb/demzN9sBZoVZvKX4FURZhE67Fzv6m3R48d6++Q37nRZ7J9kC6c
JdE3X45SJRsv/FDog/j/5NvFBsqR/ahhuKRyH7TxEZoC6soRjYwPzGr1wcI1
nbeXY8rR9ynOWCX9PnCpO9CY/KIcRUV8XE662weHbnw8sd+6HJ2a78DrW/VB
NI0lMEmVo+UYy7/5D/vA5La+a+qhclRxbUN3vxO2fjitSutvGdJMOspQ96wP
mknjMUvVZchN295a4m0feDYM1sZeKUMKO/+qg6P7AM+zRMt/pAztzYk6PBPX
B1WSP/06N0tRPP3XlsT0PhjS5/euyCtFtSX7zjJV9AE1lrNnDza/LEc//pqe
7gP7Lzy3l0uLkeIdv9GpuT54Zu90MDq0GLm8vddKXOqDn9RXDBnmxaiflvvj
BLUP+knf0w7vLUbJM0FmI8w/IMm+1thHswiJE+zae6V/gGnfE4b7dYVI85r4
pzr/HxDq9XlxtiwPhT4stsYJ9UNECF6IdDkFzSt+Dtov0g/2luI9b8WS0XXu
jBx3iX5w5hZ/yc+fhOiao5c05PrBp8zM8BBdAnom5Ob+5xa2f+37U8+WGGQ9
LhWo+7wfFGf2KN5DoejqbUIGQw+GCZ80vl00h2TRrGangX6g8ZdUeiNpC9v0
uLnhkX6okXTtprI5Q1nhW7GCWQzTdimYrj8FcTanYtMdzL+cf4JOvR/wtYo1
lggPgMB/+gUn7CNhQ/HTtO3LASCPCxb4GaRAZTol4an/APiXQzFixsErRlG9
wDcD2D30tPW8PQ5YunJr06IGIMhGxaVKBA+n7uUlj30cAGflL1rHElPhjneB
oX7XAOD+eP3bq58BfJMrrPd/DMAlsVGhkcwMICpLNT8exuI3tRZXUTPAkfnL
hbfTA6B9xMUxNS4TAhOKOL5TB6Ah67lTY+dHKC4vbYPjg+Dxool6mjkHPI9S
/bRODQLjY1wt360cUPS9dNn07CBwT5PkGCNzoE2tPNvzwiCYvK+urWb/BNMD
FYHFNwZh7VpScuieXMi5vHWlQWsQNLSjz/JczQXnlMvrPXqDYMhcpRPtmQvb
1pX3l00HQXlQi15vPhd7x1cpnnUZhNzLh7lGKj/D8N3dTdmng6DGZ67avPQZ
cFUK+Wpe/8NbJxP480A0AB21DhwEfa+O+L/eeaDMVfsXF4/l0832541YPjB5
0Bbmp2B4d3Tz05186Pp59WF1+iD0ffo9UvgiH0zS6gZ+5g1Ci7bDYcfWfHCT
aig6VD8IbK2dWd/OEsBaWgAX2YLlY7VX9coVAvbd8Aph7sDWM9kX7dMiwGU5
aUu6oUFY0tqcynUggKh8hKb32CDw2gyl+nkR4JjCwiXq1CB4xemLfwkmAJ1S
OuvS0iBUjpyf5ssgYDzRbNmuYfEMmGUNCghAUjGZmfozCKrIKH++kgD918u6
zf4Nwp6CE3YDzQRoucFVNcQwBBO505FHewhQcdM5S59pCKzxYfpVPwmQq9kW
1ck6BMq6nqSSaQK81fG3a+Qdgvg0H6OyNQL46E3cVhQYAu1GiZqaLQK43Ja/
+vXkEIiGweYJugKwMogVvXh2CPqckCZxbwHcubt2uEByCNycaA5vMxeAmrE2
vejFIVBPCfv0mL0AZE1zlzIvDwHutdDDawcLQOQe4/Dxq0PAZfe58DF3AfBZ
WDUmqg5Btc355W3eAmC5X0M4rDEExNcj4SS+AqB5wJf4TmcIynCTNKLHCuC3
tcfrAwZYPoKBVV0YnrLtcwkyGcLOQ9arfRjus5M0o7ccAo0D1cwyGG6yD73x
wmYIRPprM/9g/socydJ/7IfgVZh0PN+RAshxVhZwcxkChmesT3FYPokuuP2/
ng7BoS7BngAs3zC37Y2H3kNA+Mqs0o7V88LdkDj9agjsLks6Pj1QAM4eRe33
goZgz9KnZX/GArD0ZCsfDhuCfqTttoHxpe9ln347agj4XsRmtG0TQPVFy9uu
2CGQupV4gXGDADI+Qs9vJg/BX/b9w9lLBBB+5WPdlIb1K5Vfs3CGALz+IzpX
s4cgj+GDpuAYAXZfRwvLFA1ButPKXvlWAiy/WeYsLB8CBdeXt2drCDAZovFP
FGF2coHBTjEBGt4y9At+x/g4fqDbPpkAJZHmtUmdQ/CiyWS3OZIAWVGVudw/
hqAm/I1GpD8BQj64+bFMDEHF9TzSY1sCpssuxzekIWiZ2dwbcpcAjgmiRgyU
IQhVyv1zUJ0AuinTkn/Xh8BegO5UwBkCKOMV+Z5sDQH3Sr3BI24CXEhL3LtM
MwwRBbzXm/cQgPuj/hhp/zAMVrYtttTnw3heQ0j38WEQzvshknYCm79FhgWp
08Og9i+fp/NPHtSIqmhEiw6DdJ3zOk1nHuByGpkNZIZB0kuf+aV7HlhmNoWN
aAxDqEOComDFZ5hJank7+xTzH+AbxHAoF/pHGJfVvIdh+plDXNLoJ2g+ckM7
59UwpLd6p1ukf8Lec9/YHMKGQTmsOttN4hPYvf8e+Tt1GJYjLr86IJ8Di6Ft
UTvtWPznEZU657JgrJV5zawXi59I2epc+AgdTJr6NYPDQP2ecDnt40fIC2rn
8psaBpOhzGa9Ix/B2b/jPeOfYfDSlzt6disD1p53feAU+gnR7z/8Ek1Jgy27
voQznj8BV5vAnMCTBPoXTSPFX/4EAeOQQVWvRMilnQk87/8T1FbqQuzGEsAs
dvPxlfCfsCwhISSGj4faRl41ndSfkDXZlnD6eCy8FrBY8/iO7U+/UnuBNQo4
+xc1WnhHQFKL3co8xBfs8e5K7fwjILDOy+N/1Qca7P/J9AiNANswr1rcL29w
p2c/MSI+AjRW795NffOAIUnpP7+URmBCritalckBUkI8Mw4/wuwGxe5y1gbo
7NW9u9ZfMTtnytkLpYGIkPPp9GDNCETw7ejVMgQhaS5tnRtNI1DD1J3Up/0G
yc/Gpp/tHgHcMUkdm+kQpBUmcnN5ZgQYvnVcZfOKQC5DmrHPOEbBi55nJ9nq
PdpQ+l07f3gUlHtkgq7vvEfPc2MoxkdHoSZJMpsUHYP8X44rKAiPQmxBVcZy
zQcUc/IxiU5hFDRYascb98ej8sfRUqEPR6EotfBIqW0yUvh5yWTHcRQIT+/m
Fi0lozrl0QBHt1HYLmM/8cA1BX0/fGpI++UoTHxRm7GRx6GRqtKXB9+PQvhD
P94vsnhEw/SzLblmFDz+fVVS50hD/q4vN1ibRsGqsSDlgHoa2jd6QsC3dRRc
riW9ZfVNQxwEe9f7/aNg+wln+W0hDQnd2eURXhgF7YXoncWKdHQ99bhNweEx
+L0lQT8imYmkY1lONfGNwYQiTeXBu5lIIHxrevj4GAgWcaa+98lEf5/9sGQQ
HQMmmXNVVu2Z6LPOGzMDxTFQ2lgbFzH7iOKvux+1VxkD2X0rIT4+H1Hglfsj
PupjwPE05/Wh1I/I/MwVoxz9MYhkUFigmfqIOGlXbu/YjsFJO56jyDgL0WyO
cnE4jsF1X9aePR5ZaGHhe+8p1zEoEzpuGxyVhZoG03W0vcfAarLS4VpLFvrS
Ecn24NUYbH5r3OMxmYVwDS86n70egyl6cu/Mnyz0jGComRY5BuV35hMfC2cj
60wV5rKYMThKdlgOVchGuolSrW0JY2DxSfv0pF42Eg1ivrGRMQbE4p9i572y
Ec+LP3v3fxqD0h05P8m32WiP20wTP2EMGMQfND/AZ6PxezXKNyrGQPPqV+un
9dmo7fZnejM0BgSBsCd6vdmo7GZ8nUvDGDx+4DJsTcxGGVdf+77+Ngb3XUO8
C5az0TsZN8XEjjFIfv9Z4/xuNnopZvGP0DsGJhXmlxeYcpD9Ca3qxsExmGYa
VRo5lINUWIXlfxHHwOala5KFaA6S+u/gFj15DO6aGfzbuJCDjm3RVnAvjoEj
47sP9Qo5aP/KkofY7zFYe5P2vFk1B1FnfsoobY4BV1pOE51WDiKNtGzc2R6D
GROLuCf6Oainp7j4Ee04yLvz8AoY5aDqllQ3nz3jUJRX5kZ3Lwd9qn57/v3+
caijFA3z3c9BsUVev7PZsPVybH5O1jnYe+1hQfXBcQj+pJ/z1zYHPcbdce7l
HYdctoh31XY5yCzmmgSZfxyc397y+/ooB90MlVzaFhoHyYMJ31YwfOnV0c/s
IuOg/HG51ALDQh5M9qckxsEkHDL3Y/vZHTdFLkuPQ5/51Movmxy0e3967pYs
5n8ueYflQQ6av9udZaUwDtMLMeceWuSggVvVNs+ujUN/i8bWrkkOalD5dCpc
bRxwm7HtXQY5qOByLClVcxzs7TMExnVyUPK5gPRS3XFo6Jx9LHIzBwWfdrnf
ZoDVl3BE+cu1HPT06D3BSZNxUOWQ5/e8nIMstSXvjFiMQ0zli7d5UjlIy482
eMB6HPyXbmecOZOD5Ep6qnoejcM2wfkX5VgOOjWXttLuPA5uQoq0G5w5iIPv
yclvTzDsveKixpiDdrRU7zZ4joPLqM3k1FY26isi11T4Y/lpxgJ1IhvVzJav
Fb8ZB6Kfg49LTzb6xBsiXBA+DiMM58wvYfp75SMW8TF2HHS1b3dnp2YjSQ2X
e9G54zCzHXrj0t1sxPfyWtTbgnEQuUN/TkglG+0t5GoOLsH4nGPot5DMRmOH
S8V9a8ahzJi28gdDNgqd2tpx6BuH74cFcGUZWcjjUPu5h0NYf0udd9RDs9D9
G8kPrMaw/e1EzYsuWUguX7HdiDwOjs9sC4/IZyGyZ0Di9W0sXr9q35WWj2j+
zllbPM0ETBfObn7Jxs6DZU46fvoJaDtpdDMk+CO6eYJ0gZdxAir73eYt1D8i
wTevk9g4JmDm8VJ5R10m6tJvs985OQGJZTrHCB8ykOpS0Z7nwhNQdv2zUKNT
Bqp8nYSjimD+5gdSta5noI8Vjn2rEhPAJvhau2EtHb0QYJefl52ArIKM0+Y3
0pHowu39A5oToMwaYx05nIrK9DVQsPYEeNws3PTMTEXXqpRcFfQw3H5xc/hx
KjIKl/iZYYjFu3T21397U9EbyX2f3O5PQOEddSWFs3g041apzvFsAhhu+v9e
LE9GuB3BYM10DKd9UD9GjkGcrMuMDX8nAIf0rqwYPUU9VcGvb+xMAM1r675o
nSfonf3JPZ3/JiDC61S+opor4vhuRD/MMAkTL87/6X/kiDgCGnd+sUwCzVPX
nghtE8S2Ff/7yIlJMCc/mvERtwTmWZUR15uTcEnlWf/l2/7Q9n7C6I/mJHT1
hizH3gyAUOXnQy+0JyFLdmGO/Wog7E8l9L+5PQncgulw5UwQMJke6U65NwnO
R/y/1y+GAGPvcmOr6yRID5SO0+AjgQEl5J9InIRl/JzTE/dYGJZXVhtPngQ1
dJ9lmxQL+RULE/H4SUg/TFMYqh8HRiVXODg+ToJ8Ux6xWjweCj6Pu9EUTkLN
vR4y8wB2n0g8ITfaPAmidpPk5LVkkOZt64n9PgkCh1q5bumlwL5Yt0f67Zh/
BT6mIUIKFEU1Jrb2TMJMy0qXjDQO9ofY/CsfnYSedfrA/GkclD371BCzOgkt
r63PcAqnQvimnqnuxiTwHlezSNdMhftPttcP/JkEwSnXd29dUoHlsebpgN1J
qAh9RHaqSIUHtr/euO4jguN37+ErSmkgN/NBUIKZCKljyaL+lmnAZqX4dZ6F
CEQh66NHX6VB5b3IBQsuIigcOJV4DaUBh8H5W9r8RCh7bI7XPJcO5L6fs/sF
iZDsWarLqZEOVbr+Ps1CRAgq/1d90jodbLV+FCiIEMGzmXBdPDYdFNq81f+K
EmHEt1bqBCEdONVPTRVLEKF6mtvdsjkdqlWecoldIIKAtiipajUdouv5P5Nl
iED2aWUdYsyAh1dbVNLliBCDnkfIH80Aris8T48oEqEm9Unf8LUMmK+oZR1Q
IsL80rFmrjsZUHPJLuudChEsTyQ4vrfJgEfSX4f23SRC3VyW98MgzN71I7dM
kwhGFYt67h8y4KDD8ksbbSJocK7c68zIAJRx8lTjbQw/5jrzoAaLp6T4x9WQ
CGyiN7zwbVg+Y0ZtgsZE6LN9cO7MYAZwHo5w8THH6iPnn+VdzADbLzkqEveJ
cDHgrLTfRgZU3WrkHnuA+Xtz+qTMvwzgWBinhNoSoXDqwdKFvZlgE/S3+vIj
IvY+Ug94yZIJlUIH3807EMHQ6Oc058FMYK+VeBDnTASzkq8HVnkzwdpU/ZKa
K9YPR7E9RwUy4esfq/2bT4hwyvbAcKRQJrDFvBzL8CBCR3l3vI5wJjyQii/Q
f04ELePX90zOZkJFR5E//QsiNGV1KheKZQLro06DQh8ipFeN2utJZILV3nkR
Cz9MH2mu/0AyE8rTGHZZA4kQbjh+xgPDLIr83dVBRFjI3jy2ja2/PyKb7hBC
hMQ57sNt4plQ5qH/lC8c67/bcW2yaCYcOOik3hpBhBYOxwM6IplgWfDmqGcU
EfZI9H/YczoTSjXTl4VjiJA19fHKvhOZwDxfXT8QSwS7iTTdu8cywSJwKCYw
gQhjJ/5IbHJnQong2sMLyVg+kYrSUxyZsB+xXJnGEUHR1KP+KHMmmBufYYtK
I4K8xj/VjwyZULx5bepqJtb/7rdiPtsZwBRtVrKcRQQXusuUrNUMuCf57E3K
JyK4m9//c3w+A4raoky08ojQ41PaTxnPgH0P8yR2CESoDBTdu/dHBnzBT/0w
KiGCrk9oyPmqDGBU2M3aV07EzqNwWlVCBpgOc3uVfSUCoayPJTc1A/Zyagke
qiWC1XsV+ycBGWCSb7veUI/5Y2zfO/wkAwpu+rW4NhFBqu5ad/SDDDD2L3Ps
biWCKrd/JSumb4JA71WfDkw/ckd0uyUz4L+qRS6Jbmz/NfEdCjYP+euCX0P7
Mf4vbxRIbKQDvU3YXrVJLL/VJs+9KelgSJ81vDGF2UeOv8h6nQ6fU+o+Z8xg
fJ801cl2SgeDwU09+gUivOM7zt9xJR0+3bDEVW8QYWnplTnqSQNp0eMK8IcI
fG3P/B6UpUE1y8RPtIXpJUmR93VSGla36eFamimQU9M5omidBmumd8PrmabA
E7/+KHUlFRRctL1ajk2ByI+vzX+X8dCsz8p74/gULOvME5s68KAt01H67cQU
BE801h3NxYPl9s3V78JT4O/ux+L8AA+vA6/btUtNAZHh68nGHhx0xSsY9qhO
wcT9Qoe7Uilw13tnXffGFOB48g/pTyQD8V5lVO/NKVgots4OCkuGNSG5zj7t
KdgI5tfPJiUBT/4F1QGjKTh2Y/giS1giWNaLSo84ToGRk9JZXEUcrFN42WZi
pqBp7PUjn7QoiE6abU6Mm8LuD6P1Jy9EwflbRS/1EqcgT/+k1PWmd/C4UPNX
DX4K6Pi46A/MRsKih09HQu4UmNdb7ew/EQGk/2ZCdeqmIDHMa0OG7Q384C/Y
V7WI1Z/tgz/p7wZu3d61rstTkKXaNT6d4QKcfurPRFanQOCI/S+PZmfQmZki
f6BOQURu4N1yLjtozz3U4kI/DYpSUyxUpTvQKOsVKMwzDQJoVj8+wxIV612n
j1aeBuEAZ9w5WT8UdLMsgO86Ztd6IGR8wB+ZXDvDmHFjGrRT3Y59m/BHdOf3
HyjRmgafk+xZxgGBSIuj89Cg4TS0CI6vVDa8QeSuOyJ8DtOw8O5KaOv+CPS1
pTk33WkaJsyZjYsdI1B4zSUJMZdpuMR5w/VgdwSSJvBKKzzF7Of72cSjI5Hv
27Er5r7T2Dt/dsWDMwrxalnrpL+fBul4YS3ltfdoUWWgVzQWs9tY6tzXjEE1
V9TuFMdPwzz5AGN3RgyyFhMxbkqZhqI9x03e6n9AX5iXrMjZ05i+fB4aZsci
jdYnHqLV02CrvcBwQTwB8dfP/C2qmYZAwbjBi88T0O8KA+8r9Vg+LMGnHjQn
oLgc2VdaLdNQ56vsBqaJaObNTohzzzTEN19nKXmRhF6qBaQUzUyDRm/bGd4P
KajHzNZEcm4a5JV+dLf3pSChJzd5cinToG43/LGdEYe+49mj0panwW6enxGU
cYhrKynw3d9pcHbpWUkqxiFrdt9rLDvTcF7lXWZrFw6Vn7aiCf43DenfY0Z9
KDhkpi/i6ctAAmaVmyYv+fEo63OJgzMLCVIPrxyp9MWjv/VxIgtsJEg+cPfm
wTg80hz2mrXhJEFfcqnNSj4e/d5zzeIeNwmqTX6aSI7gkbx5p76WIAkM2Xby
voqnonD3QvbvQiTIyYtNP6aUiiZD33eonCaBpbBHK83tVBRYbqx2RZQEoZLj
bFefpaIuDvJl0Ysk4KifpWZ+TUWCZ1qpHy+RIPD6rzHq91T0BPKKT1wmQSx5
jbt5KBXx2rtJHFEkgX6ziOnAeiqyf2WwEKNEAqlA9WFu+jSEYuWyOVRI0JR+
I/IHaxqyaqQ5waROgrLj9eXodBoq+Tk1HqBBAuqDsIoFKey9/7spkfYWCWju
DnJGX0lDecfCDv3RI4E5V+FBHZ00RHPBudftDgnUTfbZWRulIb2behHLhiSY
P+zquG6ZhqhPeZjIpth+f+U9Pi5pSD18u+m+OQkq8v5YPH+WhpLSx/3GLUkg
pGWy++tlGlquqFM0foD5k/VuGQ1IQ0rdGTv9NiTY7dshKIekoejZoApdO8xf
M2uuUEQamt159LTDngQxYW4F3tFpSI7rlrS6E8YfvXflrdg0FCoitdL4mAR0
nYxt8QlpaEzxYN5VNxIYEQKIZslp6JwB1a7KnQQ+9Uv/JeLSkL/Dz9Oyz0hg
n94KuqlpqN+verroOQkYvCWSfNPS0Jl4PF7yBQnEt0rFRdLTkBfB3yzXB1t/
PpRRA8MdTTZHhP1IcMjGWGkWW398VH0wLYAEx0qMN7cwf8F1l/NvB5HA3bkm
0Qqfhn5/FA3cG0KCvy7L4hIpacgo7KhpeRgJBFq/jhknpqE6FxbpRxEk8DNs
n5zH6hEx/Md0NIoEbMezXEaweqOuLE92vMf69yq9SxLjY1twsswnlgSylxeB
HIz1l7HnrVQCCZh0vfbRY3y2LdZZTyeR4OaPw899X6ShC71frsTgSHD/mdbs
/adpKLksnUstjQSH2d0ycpzS0J7k95Q/GSQoGU1iv2OThhz9Aus+ZZGAuz45
1NosDQ3YPo0z/USCDC16rxH9NJR1/u71WgKWv3TBg7+Qhth41I+5fiHBlmu4
Upp0Gnq2K7cuVEICScUlwy/CmB6+8aUFfSVB1rnXIvsxPRbmHfCUqyaBbePj
RT3aNMQbvau9UEOC4WaZP/+tpiKK2cTurSYSqFCZxLL6UpG+cvcP2m+Y3g2u
+8Y1pKLKM3W5X1pJcNaj0H3jSyoKXUszOtxNAsbKHx3rEalIPNimZOwnCaQn
Ypf5lFNRjJNhWMQYCf4LYKd4S6Sif/o3rJQmScBqlcGszYvNH/9ZjswZEnyN
tRtWX8Kjx8VLDg4rmJ5E6AQL3uLRcPy4Mv8aCda1G8oK3PFIyafrSPcGNs+M
kiwipnjEcbPwm/Q2CXpnV8IDhPGoaOLJye09M/B2bnGbthyH+Jqstz/vm4EN
14u+wwk4FPDJoPce8wzc56s0k3qBQ3fcZX3r2Wfgr6GEvNVVHNrcvzMSzDcD
l4SZJn76pSA5Gf9oHqkZaHn2mvf43STUb8lzMUl6BkIz0tsLuZKQa3jegIDM
DAizRub6dSaiXNIgr7D8DPQUr1LnlRLRsWgx/EXVGWjb6hHcdzwB0a30f9Yz
mgGOoiIz08pY1Jpzpjns1QzYnkkMPfAyCtn2V9uyB8wA48p+xcpTUYiBTp/p
/esZKDtk7fS7/R1SuPtCMzF0BoTYXlz8x/sOEfb29ubEzEAWbdHnifwIFG3l
NdGcMwNd3y5e2AoLQSbHOv/Q9s6AD0/7vSerLxALj0vx1x8zIKDv1dKo5o1q
OQ8+fjI4A+anIt88THqOTu0zJpNHZ4BG6j4TUdkD/Vqd6e8kzwBbvZgsd/hj
9Orb7pek3RlQdGtwjLmjjbLcxB1lRWbBXComujzTHbtXdJ9ZFZ2FmhbThoca
HnDAzo2UKzELNGIjchwrz8DlXoWJwAVsfT4d12EZb7isrnpzr+IsRPwQ1VQc
9oUOfjPhH7dnQXv3Z221dBCsfw8jOvvOAkPYXxdBnncwsv+H7bbfLKwpPKSc
dnwHdRp8v14HzoKAUTZtct07iOjI2UoOmQWcG2z3PIwCkZ5mrvb3szAo0tl1
vCAazIZor5/JmQXJQ3QKTsc/gDLvjfai3FngNnqT6WH/Ac4aR+gp5mPxL735
0FXyAagjx8wNimZBsTxf1upGLLybuPwsoHoWWupPF08/iIOm2SefJnswe/QO
S55nAuQKV51z+DELQadUv6DyBIh6yFBGHZiFts/8a3TUBDCnvGtgHZ2FhTen
Bw+7JMLfpfzRK7OzMPKlXOeWSRJMSGze/zY3Cz5no4dqo5Og2VlhXn9hFoQV
dYvutiVB9O+2jUcrs9BFZ1y4eikZJDbmWOO3sPrJiuY5e1PgkMy5mJO7s8BY
7DslIJsC2089+ApoyGB1mG234GEKfP+z50zLf2SQZFE7yN+SAlY7J5Q2WMnA
xH2Uhu4KDtQVHrX4cpCB5do9wcO6ODj3slDrwEEyKA/uoSu2xsEuzVVjIV4y
6F+MXwkKx0Esg5mbrhAZgtQjD/sPYvb7hy90nyJDYAB14fkcDqzqu9ZvnSED
X5hSxM4fHEi+uvZUU5wMlb+JlYk8eIiZ3JZpk8Ts+Q9Cy4XxsK1YQlU/T4bB
ndMlZjJ4aPkn7Kl2CYt3YV+Loh4exO8R5ZrlyFDoxMDmbY6H6OqELZUrZJCS
2Xqs6IAHc28W72tKZPC6e9LGOAAPTSPNV+qUyTAcx+tWGIEHUXnfXcXrZBgb
jwx/m4CHzb+rLxU0sPWlhvQ/8/FgYvRZsUqLDGsvPVfUyvFQV25NK69DBo+y
Bi75OjwI8wjUVeiRIYesCUXf8RDuMfRK9g4ZyI9dVQt68LA28O5amSEZ7JWG
6c4P48FIRoNBxpgMZY+dtGUn8XBqozpA2pwMzodU+HsX8RB620P1iyUZXBra
bK1X8fC76NxeqQdkEB5h7/Om4sGQi9JMsCFD/B1nTZ4dPFS7pgdJ2JGhSSS8
4RJtKgj1mt7IsyeDkLax6AhDKgRLHWYSc8Li57A/p2dMheXIru+fHpNBd1w6
J48pFe6svAkRcSOD+KF3JaPMqVCpfU0j250MbTjARbCkgiBhm1n4GRlEIhPt
mllTIYi1pD3zORnSZbT5XrGlwpKjU/jJF2SYD7qBajCs3yF8K92HDIyu1eZ+
GK4QI7Ke8MPy4z7L/h3bLxCW0IUPIMMuVXs6GvMfsKAfKRCE8bl7YWUKiz9/
k0U3JZgM1t4ndEux/LQ/NXMcCyMDlSdDiBXLv4TJtzfxLaan6NdvKFh9fHZy
0UfeYXoNGkjXwOp/9W1VPz4aq49lIkkK44cs/Pkgzwcy9GmdSUnC+NMKsu7/
EIfp8697fxjGb9Es/4dDiVi/8prc6JfwwHt9yOB9Mlavqlbe7iwefDLfcXPh
MX44PCteYv2a+U9j6F0aGQxpKb2BWD81HvwXz55JBuY8t0tcvXgobKg2isgi
w4jhkTPCrXjgFvI4wvoJ01MX+3wdppdp4nwiM4EMNAvRO2EEPKgrpZuGFGL9
GTImV2figYA3PcZUTAY7c2Lv00Q8eJl3peytIMM053kav0A8cI4Vp9I1YHpp
fIZnvI3pjdnbu7QJm+cQNpKhKh6YLisb2n8jg4/bRx9+bF7oYnsO9HeQgfdR
7TL7YUxPOr88sofIEK1Nu57QhQNHnxI9sxEy7FlUP5JfhYP5PG9xznEyzGQ9
tLmSg4PJ/czTXtNk8Pcmn+zwxd6fjcK3tH+Rgeuky4E+ERxorP06899vMvRI
3D/cx4nD3k2lDBVrZEisPSKZQ00B9FKl4sRfDF+OMq/4kAJ5spYnNxnmYMI1
nCz7PRlCPydsJfHOAbly2+EqXRIwjlj26x6dg22pJwSJxkTwZxIp2CswB0L9
bzrkXyfCc5sy68cn54Bm7GLXV8ZEsDv+o1tZcg4EVu+h17QJoPaeJYuiMgfh
Uc47Sm2x8J+3r77s4zksftfsSH8UFK0s/EGuc6Au79KJXkeBlbVhiqr7HJhc
tXQ/fikKGm5JzOs9nwPuX/5zDz+8A3/B0ZeOAXMwWCNuq6UdCQwtlz6lxc2B
beEPjk6jMKDjXKZlqcPqsXl6d0T9FdBkm+UTOeZB4Nr3vWLX76OmhQHHlIPz
4Ow8vnb8oTUKldQRN+Gehy7uoTm24IfocNm1zz+OzoOPUfC0e4sTEm8W/tQi
PI99T2X7NXndkQnpd2aewjwUjXdmsor5ovLjr5M97eZBtDgrXnQuFL14QGMm
4zAPyx/verokhSHl7GdH15ww//kR0kXa4ahL0j7R4ck8tEx9KOYqeovIoBNv
7jMPtsNyZwcuRqJDZkdiVGPmYcH5RnZ9bxQawUffpo+bB/PDFTneQtEolXTg
YE0C5l/SpS3YLRqJOdBEy+LnIdHGxyOa4z1S9iJFiubOgxp+8beAagxyic8P
46ibB/JhBz+WN7GodDv+dV3DPPTVig0ltsWibbNAX5dmzO61MGDOGodenzB9
0tM2D5Kzy5O+7+JQYi6T6buBeeDucWT5HR6PJlk27igNzwPX/kvWm63x6NTj
Se3fI/Mg/zhE+gRjAiJcKFPWJc7Ddvoq76x3AmqsfiDKsYjxN2Mx+sssETEd
1zlV92seKvs+BVGjE5G2n7yAy+950L5yWZT3eyIavs7J1bM5D4YGvEKp55LQ
UlfNViQdBcx/Ss3Gryeh8+dz16/+RwHDnQ6pq0LJyOP9h18reykg4JTauKaT
jOiNHKd0DlCg5d5J9xc5yYh76kgrOzcFcGxEPPVWCjJV2dtYy0uB7ShSJMk9
BaV+/F39+CgFnF/V//2RmIJE7b8VdgtSQHnl3FQlKQU97ijK9T1J+f//xwwZ
cKhEEpd5TpgC088P++oexKGr6+7xkWIUsLubq1B/AYcCDSyjr0pSIJXCdFFW
BYfayjXDV6QoYBk/vS2qj91nXwi90rlEgcILrlqhzjiUMMHqRXuZAhV06wc2
vXFoQmnrScEVCohLRu4ZC8Yhu709D9mvUaDv521Z/jQcyn9Ydb9WhQK2pR0t
Hnk4tNaaZfpYjQLaF/bKa2L36ZcRL3W6NSlQqWWZ8aAdhxp+29301aYAjSSe
Pbsfh5hu31E5p4fx0/hT03och6J5xGQjDSnQIT94S/MXDg095z5/1ZgC5LqK
XPcNHDo2Ri+2YkqB/s6RvTw7OHRf8dcpvDkF5itFZKTp8SgrdVhA5z4Fdl+X
crUw4tEiQxMvrTWW/8eqF30H8EjKpoCrwJYC37+mGNzlwCOPb4ksFo+weCfm
Au4cwqOqs0GM7I4UELTXWmvlwaOLfYfb3zlj/DZvPQvhwyOC18dILlcKxBA/
N/Ydw6MzJ2XuxDyhgOSb2c6PAniU2t7Ey+2B4de60QyCeMTnfmc8zhPL1w+x
UzD8/thM2hFvCnD3nVQ3PoFHLM1PbJNeUsBDPE3pNoaDnP4T439FgSLd5/RD
2Hpa7vcrOH8KlEQdjp05jkeeNUIlgq8pIKW7h/UFFm/Ntsgz/Q0FNsz+PkvB
8nFgV4ZToRRg0Pi+qI7lO1PeS58VToEsvNMrH6wec8v7LWciKfBu7x49Raze
IabV0E9RWP23vnsHY3zofnmlIxaD6cOVR+geCx61GnMcyo+lQNcTJ7vqfXik
zJA6LJlAASVZa48sBjyqzj2XUphEAYXzRR5H/+GQzO3a+9I4ClTzno07+geH
CDvawiWpmN21hCn7Nw6JZE4syGRgej9gRFtDwd5bm/+eXM7B+BV+aBo5gkMx
KW/lqnIpIMJ0XU6jD4dY1fj/KeRTgM74WEhUKw7RxSkEKRVRQJjmTlxLGQ49
v9qh0VBCAbXH6TMl/9PfnCm7ajkFarQbmqXScWhWzjv+RjUF/EsKAvvCcMh8
ivleaw0FGh5lMG/54tBwSOIJzXoKjLAUuhOeYPMx8jVXuwWb34k7tt+Mcajw
xd9qgx7MntXjUy2IQ2dPB/sN9VHAvji825oTh9I7edSMBygQyoou4Olx6IOA
bLfZCAXKWJ+xJjamIK+6p1MPZjD+UfplkUspaN1ub9YsmQIEhdlXJRwpyJHz
g/1DCgXY5nLrHBeSkYVVybr9MgUi4itf2iQlI9U963vd/lIgfWfAOQ47b9jV
XURfsSwAQU1lm9knEeFqWffLsS8AQ4FpdeqNRCQp+3luhXMBJtod39/hSERa
wuRMC54FMCyKruDHJ6DgPWbHrwotAHlfEvlRUTxiqL9xiEZuAYrEPcfwX2JR
lNzsWqn8AnafHDX55xSLBAv9e51gAXK/BXTEn41FingUMa68AIzfVc2icR+Q
98sL+9GtBeCOxV/s9o1BG5eP07x4gGEzGxWvE9Eo4Ev12AVbzJ+xzY32vijE
ddakatFuAajxLPtfBUSh87wfPE2dF6CyZmJBgPQOOVOZ1+WfL0BbGPGcV1Ik
miuizm1FYOsXHTWW5sLQiFhX77PKBbC9znHEJf0VSqGwe9OjBWhRXBnp2PBF
ltl6p8JqMX76WJmK1XzRnNCAB65pAdhOL5VY9L9EG0fGjjZ3LUBXkFPv8B1P
xM60YMNFWoCarOw1spsjUp3Zu513YBF8+rw/Pq00gX3pNzIusS2CecDhBk0R
C2izCNGq48Dsz860Na/fB71RFvyPw4swIdhalxH8EMz7DqpuH18EZ0vPnd/6
LvC87kTEjYuYfVXU4OsdbyAkg9C0GeZvglOqUfsNrHqu7rWwwHCv62Hv32/g
osFHyuj9RVBsKpx9ERUMX1lZvwzYYvFqRJxv9YZAk8/Y1VaXRaBuPb+dfyMc
flp63ysMXIRQjg/slMBIOAbnrkm8WQRJhV4V/u5IMD9COpUbgu0f46Ad5H0H
M70aSxkRWD6XxEw6c9/BsjKfd1z8IoheTYzAfY+CPae/xvvkYfm3R9FKLryH
G/ROL3YIi9AXZqnSLhYDoeOClp5fFkGej/VXt2MMsMcGn3ErW4TEqROFTL9i
gG+fUZlNHZZPncm7/eQPIEWh/tDqx/JZ+ZZCqoiDJ8255a2DizAIo/oyv+Og
LM08Se3nImx/LDAeEI6HKyYtVkoTi6BsXV66HRUPau0fVi/ML4L+2lOhEosE
MM2/yH50dxE05FsL0VAilBhRWbpolkCIheMn7b4kYNlTwexHvwRt+I5aI5kk
qDG5wjjHuAS4fHeJm5FJIMik/K+IcwlMVB7O0sglg2fxfzs2h5bA50WvaK9F
MvSaN//l5VmCvrvb5QVByeBfqr7hc2wJBkMv7Yb3JsOMlc6ixpklWI4T5vtk
mgIKbJyUf2eXwFwzw7DGOwU+fO0jF4ovgfC0542hxBRQ4zCc5pZeAoYn+ZEc
gymAq+Ihtl7E4ks7Hj+3lgJ/bH+Ov5BdAjqnM5SPe3GQg8x+TissgdRqwmWV
4zigeyQw9OHqEpRNujvoiuHA+BCxX115CZj3486MXcIBs8ODHsKNJZA0CJ52
0sLez9ynu+5rYPZIMXhiiIOqenL7oVtLoEtD/rlpgd3nee2/eekvgXRoK3J1
xUFTo1izhMESGM2K+Nk/xwH/418NxLtLYPWN3XfyFQ48+Arq3psswfeHjb49
b7D7fbNLjdq9JajuT9aBCBwIu0pXb1lg6x2Za0/H4MD32MbXPKsl2HMhKj0k
AQfD30rLLWyweGxdfXY4HEg9eVbKZYf1Y9xDvDEdB8ECl4ub7Zcg3M30XXwW
DqZatws9nTB+7G1J859wIP+0miDmgsWbTWHDzneIFvTJm3BbAsFTp2i3CThY
bL+aG/V0Cez/ymZVFuJA9Rl9jqon1v9TMlubX3CQLNT48Y/XEjBFx6x+LsLB
ZmdgRu7LJQh9uBQ+hmHt52pp914tgR3D7443GM46xYTnCFiChZ7H5fnYftqe
1uTG10vQxGhsqI35N/IOS/QIXoK6S6Xlj7D4hcK34s+GLYFA26dftFh++/vY
YsfeLkGi0TM2Tix/q5c97yPfLQHfpOfFlI84qBSJjlJ+vwTpw0I+mWk44Oq/
Hbn5AdObDAPbmRQcOPgefpsTvwRe0lXMp+Ox/ogOhZomLcExDiY8LhoHxwbj
g9lwmF7zy7feh+PA3c8kqD51CeJ3P9/aG4SDTvFjge4ZS1B5b7h3zQcHPgF4
35GcJVA7u26i8hgHB57uVbf4vAT9Az1Wig9xEG/rwDGTj9n1ngV8M8fBl5uy
/9dA2fhCGQdwvIiSqJbXxq7ykpdw5KUoXysujfKy8khvuihDiSi205vOS4u7
li53uLt1udmKJKVyq4jKS0VYXjoZi5ien5oyXF3Pn/D5fF8UpI4GfZu9NI/p
U8B2WVJ6PQ3vY2OTDYFydLjqec49o3E15t7URV85xlZ3Neu8pDHQsiT1ia0c
abo+hXmNNLgG6UWOlnJoZ8r2r2imIVIrtJuM5LDoSxgzbaWR306f7BiXIUS6
aJljN+M7/HU3lSlDn+BEZ1Uv48stx5mKkSHuckeJRx/jQ+8OK9tPhgtxJY7b
1MweWb85AQtS1DixQ8LGaXQCDaozUmy3Eq3pmaAx0xn+xyBUijYjzWD0FI2A
wo0+fHspRqffJnN/Mvv1apw06C+HWf3RoowFGiYdSq9Ez3IoKlui5v8y/dEP
uxnE/Alb4sy6uIhgePr9W0pdht3Zsw/y9QjYWUl8u5wy8HYKukpXEtQ8bHEp
aCnFyMcXJk02BDy3JpbYXoKURls1x57giFpom03E0NReq2h3IMikrCRV9WKY
iqK8e10IJKeyp+aCxAg+RFPffQg8NGFtSTElqPpuXWocSpi8Hu9bFydCfjk/
dmgvQe3J0G/Da0WIi/xhVx1BoHReNTjSeQtWKlXNHorgk0Q5X+d7C9cEB99c
5xKMPSA5/XrFSPAW/1yeRRDVWkKn8W5gw1WT4KVKgjO7zGS/NHn4t4Vn9LmS
4EPKiej9QXno/zH6SXmPoFjjLiTXcyGkHh3mPCQw9h+hRi350DpFnuWrCNLM
m6rPO1/Bly6BVLeb4c+qWtMUn4mnubPHu3sZ/gzPAe7oORT7HXVU9BG0Hd6U
7h+bgZAK17odQwTvDuzgDFBpeJ75vvXyBIHQO2Kr3aUEiFy8BBFTBIGcGuPp
1HikjpTtW08ILDa7OOgc58IhNPnrqxkC1z1C6/bcaCxZ3HNXOMvweFT7fI6P
xPBjv8TYeYbHUHi/ID8YqkSFG/svwelwfQebgi24zTL8rdUSJPLM3XXHKf//
37Fl5w==
          "]]}, Annotation[#, "Charting`Private`Tag$3721#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.26743725821300257`, 1.5347953804421526`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}]}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}], "+", 
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "6"}], "10"], 
           RowBox[{"2", " ", 
             RowBox[{"sin", "(", 
               RowBox[{"n", " ", "\[Pi]", " ", "x01"}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"4", " ", "\[Delta]1", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}]}], 
                  RowBox[{"\[Pi]", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
                    SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
                 FractionBox[
                  RowBox[{"sin", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}], 
                  RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], " ", 
             RowBox[{"sin", "(", 
               RowBox[{"\[Pi]", " ", "n", " ", "x"}], ")"}]}]}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.761596613248279*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"fbb628ff-79e9-4ecf-8227-13925249d6bf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{3.761144108937559*^9},
 CellLabel->
  "In[242]:=",ExpressionUUID->"67fd52ee-6d2a-481b-a71d-b797c38f6333"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[219]:=",ExpressionUUID->"1f4d9cac-1220-4a27-a90c-921fb917b487"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwBGIQ7ZX64uKBl6F2DFDA4ixVcF/SxB7GN54/Y85mSRc4
3/vs9U1zJUPg/PCU73snSabA+Xf12517JUvg/AWi/m1dki1wfiPHZvVOySlw
fkTkwvUfPi6B87n/N8a4y62H81UD37043L0Fzi8/Z2k/48tOOF98i+A9Rsb9
cP62R85nztscgvMPZc2VjnxzBM7/qmbLvzb3OJzP9HO1gLTqKThf+qzTZ3t9
BN9k4c2rKZYIfqon++x1vgj+iZlJqk5lCH6/laRV5nEEX6amLXl75mk43zRA
1u1OMYLvp7JFg7EOwa8/8/Ct1yQE/5GMbcW9XQj+yr2fe1h5zsD5Zv8TtgWv
Q/B9fA80ue5A8JNny/ubH0LwJ5jfey51DcF/mR8t+egvgs+wb9fTy+xn4Xwx
HqlNRwURfKcVN7xWqiL4cx6E1hT4Ivib9LZ6JIUj+CdqRERDEhH8rxKX15qX
Ivg86UZVmvUIvtLWiW7SnQi+X2DA/X9zEPyU+etXf1iG4Fe/5at4tAHBn2Sd
53JlF4K/ovOswLEjCP6+6zp3t59D8KPcut5mXUbwAWynvkw=
        "]], LineBox[CompressedData["
1:eJw1lnk4Vev7xjvSSXIiGqRUCkeRVKQkt0TT4RhLKiqhchocNGgifB3KkKFC
kSRTpsjWUYSIb6Zt77U29pbZNg8bey9E/db3j98f61rXfV3vu9b93M/nea9X
yfGqlbPYvHnzSujnf+8z17bVWfTVItjJ31ViUzvkZdKXeItqcd02r7ngTDs0
HRbx3ObVIUJ3z6byf9pxYqbSw2ZZHaSyHm7lku14t93k9Wr9Othm6dwV/t0B
l1eQSH9Yh4PLnU0YaZ2o8deu+7K5HgutNSu+Lu+BnnS1WLhOPfirxh4/Qw9S
Y87qnjSsR//M9PZzF3vglxWaMHq0HkFKwgzyI72+qc9d/n49thrmvsQ5PlLV
41a6NtZj9VYpsjezF0b9vjm/GjEhk8aRfbRrAOseDU6njTAx9sFmjCk3iuKz
3mm5E0yUH64kknaOwmGHnN2HKSZ8VBR8ztqN4jlH732NWAMsT7naRsWPQl7x
wfXRFQ2Y2HFlw7DcGGTT1Sa00QCjsqnCltgxLCh3HvoU1oCADYz5OfECJD2e
flYV1YDHJP+aZ5YAxudD/miIacCY2uf1m4sF8JXMT+981YA1pmklF74J8MNC
/OKC9w0IWno0TGv1OKa+JfYcaW9A3cPeHjJyHINUWyupxcK75Ty7ppsTYJwP
Kzuyk4UuX8u2on8m4NNokPxpDwsEEc4IfTKBFQVxl9MOsMDYe2RMkDcBo+sn
Z++cYmH2bdnbD8MTiJ3krFIOZOG+cHjcxH4Szk4Bc9EhLIxfWuxBuE5Ci9Dp
+C2SBSZeZ5renMSXvKhUKo6FefvZgumISQjcrXSr81gYSApZbVI5iUOCWhv3
NhYe5EolB6kLIXf27q7ebhb436vYqbpCtDI11pwaYOGeZYJpzn4hPHMedpkI
WciJuPvfGyeFeHH1sPuqxWxoeDnE84OEEA2Xh5XsZKNMXZWxrVOIUntPDx19
NuYtGOBUDwkRXLvRNn0fG+pn+XOmlBAbMn3XRpmy4ZRwXE5cSgSzS4aZ5x3p
/W5Ztvu1RUga+PB1SSgbp1JTC0TeIlx5ar7RNZKNtbJj3LpAEXSNu25XRLNh
vNejNSRchK9xklvuvGKjeK71cEmiCAILu7D+92ykRjCWCz+LYFAgsi7vYuOH
yqBGxC8UJJweZKzrZ4Pl+jKuQYICS2btgtsjbGSsMl1KSVNwdjVhbJtmI2q7
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

        "]], LineBox[CompressedData["
1:eJxF0FtIE3AUBvCpCy3J2hIkyWxqVN4SW2oZSCvytklbhg/ptHXXUWlhWkpN
XEpt6MMwU9Pp1MpRm+To4iqJISWI6SwdzU2nTqcuLVyi0FZB/L8Dh4/f2/kO
Q3CFd86dQqEc+bv/sqRiep+j51sC5f9U7Di9XNQHj8/bbKUDcNzLAnPZMDzH
Ke+TmGDOrcdy+U94y1c7+6O/kVjYXMjqD4R1QlfsUAhc6EELNkbChijm6iIL
brp/s80vDw477Ok83w2rO5S7Rntgpu9xbnIvfGimtjVsEE6ThqYuWeECA6e2
mD5G/DpfFi25BCe2MC50+pmIbwRkB01kmonDF056j3DG0X/TkpduDaa+r1cF
N0wQ5zG7DetTLcTKZIH83S/YMe+/2VozSaw5keghOzpFfDtJ3NRlhRljKaMK
8TTxwdhy2dZoK3Hm9oFVNz3s6JNaropmiGup/Ou8kFncb9K0uOvgdaWi9AP5
NmLKU77KQp/D/+pUUvoH+G1YpRft8jwxLaUgvMxngdgY8VlfrIXVjQkhU3w7
cZYqhhbghO+Im0XGju/Ez2YD6n3Yi8SVj8Q5pjT4LM++8zkX3qbVqjkZ8L2q
U70SAXwx5uGPDcVwULlvkmc77Iwr2TjyBDbYJ4falXB1xousY52wK5R3TayF
jYNVjR56+NXdlTP6L7AsPnuPYhRObYvsYpngN0X9n0Q2uCZifxV3Ac63NKQz
FuHdbKG5Zxmmug23Vq/A45r43Jw1WJur2Bv1G34Q6O1wueA/xLsbCQ==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$647837#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 1.4999972080258641`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.761146826523522*^9, 3.7615836706651955`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"3c2aa0e7-1290-4ef3-a5e0-f75831038eeb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b5", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[243]:=",ExpressionUUID->"0c9a45a9-9078-4811-aae7-094ea1fe503c"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SqrtBox["3"], " ", 
    RowBox[{"(", 
     RowBox[{"2", "+", "\[Pi]"}], ")"}]}], 
   RowBox[{"10", " ", "\[Pi]"}]]}]], "Output",
 CellChangeTimes->{3.7615836899531765`*^9, 3.7615960424354467`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"d15b9d43-87b1-4a09-895f-eacca15dce46"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n", "=", "6"}], "10"], 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Delta]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
             SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
           RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{3.761146550424368*^9, 3.7615836745790777`*^9},
 CellLabel->
  "In[244]:=",ExpressionUUID->"ad3b701a-b07e-4fed-ad7a-8b4588501601"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwV2Hk4VG8bB3BbJZWylFBJllQqlbSQb0WkEKWQUNpLilRESVHI0iKRRGhR
hKKy/Ui0TPZtDmbmnBlroqFECO/z/jXX55pznXPu53nu5TqqLqd3HhYTERER
FxUR+f/vtsOd1UXfdxuaOBwI4JXsNZQwUjpDK+oiQvYtVoSvxar46IdvFI2R
1l8wMBy2FdvL2a/jFG3gWzykyw2zg+2hwYI7iocgMi5Gfww7Bu7yG0Zhip54
b9nlHBbmhYSZO66HKAagjKVdwwoNgr/km4XBipEYWfnUsyw4Gnb2j9N7+5JR
2JH8SyUgBVPG/feZzkvHyNxSX7PW19Cw/tn58WYWNlhoDZ+rf48LFesQ3Z8D
Zraw3Eu7EApZMjxR0UIM3bBwLfMpxluBUVmlQTGq+2peNYeUovhEnLJ9dwnQ
qmrpc/YL/mhumJ526jP2RS0NiZP5BrGhlzOUNVgIu644M5ZVDr3x/W93vSpD
kVpN9X7lKpQF6FZ8WlyJ8LyXY8361VC59WMo5WcVxukYh00uNfgxSPPqdWqw
6vVMiQMutUjuymNJh9ciQzI3JtqlDtJznwlbW+vwTyPY64BpPUKPZx9JUG9A
aY7D9IhJDRjY+LL1mB8bmTaH/koUNSA/+UfshQA2GtX1nQOLG3BVUnvX9WA2
fL8NOkmUNkC6KvVD0l02FBcHao19bYCm86tHvGdsVLQ/pZnaBuy5lGlnU8VG
7YBEvktHA7Jz3pVBlcL14nRV22lseK4syZr1kUJa5brwYRs2jujOT7j9hUJ/
WzLfwpYNOz3fm1MrKGRnpATE27Ohv17XRayRwte0uvcbnNgQ25w8/edPCnc0
J9QfPspGhHXAiVKlRqgMcN8d8mbjxRnj+Z4ejRieYjVxzkM26FclN6tVm8BO
rlU/xmGjqkeie+XCJrwdUtu+hcdGkfYW80jtJrxTNfw8n2Ej4UXpVNs1TTBw
2l5U08KGy9NPYRzzJrTo6Lxe8ION9rgvER0XmrBzaa6XxxAbPaFld0fLm6C1
4MmbKnkKvG9T+51qm/Dx8bLdXrMoVEhZ2BRRTdh1PGrrvNkUXgWVy19racLV
VTfVDytTOBNQcU9yqAlWI1Qaj6xTv0/VfTn1ZnxcKOi+sozCyIm62EUXm/Fj
S4G9vwkFGz3H28v8mpHmFrCxyZRCqmj79VUBzXiv8TtthRkFp+hB9w3hzfjc
e3YOZzuFD6VKW60Tm/GbU7RFxZrCjfkH+r1YzbjiVPzOyYGCXEOP+RclDr7L
d0d8cKPg+vj85nIVDtZU/FP/cZpCiev4mhp1DhJPmhjKuVM4Ly6jxlnGgcE1
g1GnsxQadXSHhJs5YF0rftF6gUL8zYtPFE5ywD7Xn/X8CoUlmyaNHcnjQM8u
cYbcbQoZL14upIo4EPFfPmnBHQq68lbWZp846FrLNVh+l4JBR3TykmoOOuIs
Dhvfo2AZtnh7bzsHR1afeW4fQ8Gj0SLaW5aLR3fvdSx/TGFg868PXQpcOJw7
83lBIgWf1KgfDnO5SAg1bZNLohDgRxsaanFx9fmTpt5kClEa7m1ihlwUZ5u+
uPecQo575MrQ41zMiy2oCEmnYNi8dt+oGxcTHW5fP5BBodiYG+jmycVnOUcf
vUwKLAXNRis/Lrw+xSs3v6bAKXjnN/MeF9kxOqunv6UgItVc9qiICychp3BB
PgXTRNWjmQo8fDVurRv4ROKNltb8NIeHocqY+JDPFOaHj7Q2qfKgZphJzyF5
MOxd7yKhzUPqBX6hwVeSJ9bBTrYbeYhMtRw//o3sl2jf7tFjPNxX7vC4WEme
N8iVl3XjIbciNeIPcXc3q1bzLA9TbC1VT1dR+EQlW1td4qG4cGKSYzUF7ww7
i6TbPKga+qlo1VKgnYuMzXJ5UBT3GPBooFC2O03cqZCHV9bxjvXE77c/KPYo
4UHv3/p1emySd2s8Nz6s4KH+4BOL38RbpmsZCAU8mDUkde0lebpywswR8U4e
jDMT+jOI542I5s7u4eHSYZ7HhCYKf9ub12we5EHMdVJZCvHL/yJW3ZtCI7Tu
ai/dTCE6y/dXygwaezL+xi7ikP17cTzzv5k0NkoF5bkTO0UZLe9UoZHrxN8z
SizjNrhYX5cGMzRxTJRHYexg6/cd62jkBVeZgbjLvvr5IUMaxYfuTPYhLtny
UjN8K43ver2tPcQX5jov4O+jYWf2WuoDTcHFSmcP5wANl42F4n3EltdEQ9hH
aBzZJXNFhaGg+T2pr/wMDeVP3mJexLJzzml8PUdjdnOIZCLxqKWJfclFGo/P
N9xmEddldRblBpD7P5VbpsCnUNSR058dTKPvicgmfeKXSje1MsNpdImpsB2J
r15ZeutZNI3NTztCHxG7vRn7mBhHQ0c6PDWf2L69cjAukUbsLKcdjcQ65h7O
kak0Lpl4zpMWUJjjZ3Q3IpPGiy3vtmkST3ot/znkLY0PkXOHDYh/tbYNB+bR
CKOeaO8k5im8W+ZfRONBmaXgMDFrW5CLbymNDUYKyl7E2Zfsoy6waIRrjDUE
ESdkLGZ5VNJwPSs2K5o4tGVk9FQdDT8jNeoJsdes8hXHG2ks/+g89zXxQbNH
hw/xaKTpvWvLJ7b0PR3j3ELi/6u14hPx+vSN5Xs7aWT7ZI2XE2sKZET39NC4
bGpvXUcsM7NF1/oXjbsjszQbif+ZZh0zH6QhbtlziUPceTHwoek/GklTOHY8
4q49S449FmEwbXbL2/97f6+cmIo4g6RTYtFc4obgf7EPJzAInbv+XxPxdrW2
1UqSDLJ2hLQ0EBfll1fel2JQvvm3RTWx3p63x2dOY7DL/Jw+izhV+Ej87nQG
16gZqR+IFwTfiJshy+DAiU/x74ijF5xZEy7PID82alYqsXS+XfUUBQZqc6/O
iCcO2L3pZLAig+7s4LBbxEM/F02YNIeBnvGrsCvEbkGy8QHzGLTk9844Tdyq
OrJWTJXBgyU7FfYRV9mUuY5qMHh283zaCmKTn1kTfbQYLJposEGJOP9GXMLf
xQxmBGtYiRI/y3Wr+72cQWvWiXEWOS9zbGzd3Fcy0Ir7GptGfKcHkkJdBn5T
d+WFE1+eL2PQtY7BvaHua+bE/TlD9UcNGNS6ii5dRHxil+B0myED9Z1b7SWI
d19/k8QYMbhgd17/LTnv2t27p7AtGLRFRmlKEr+3MS8MsWJQVdxcX0fyyahg
81nDXQxyi6aVxhPvDV/e/MSO7I++6UEd4mCdyS89DzJYc+lKvAHJT/mYcSet
Iwxy4mItR7jk/IkOyHKOMdBgSja8J35fI7ho5MYghmXD0SZu98zfJuvNYJ7S
gJIoqQ8e3NdjpT4MTlpP+5ZJ6svolpTX3pcZVHAd8vYTyytEKfGvMVjYnr0v
h9Qjo5zTXenh5H5LJiTtJvUrYXRBiEUyg7Uxb4zWk3qofUTRUPQZA+rqiuGK
egrvKqb/ykphkPzFqu8AcUX8P/s56SSetXceX60jz9vUsOhHDgMxg3Gp9BoS
7/Xgr0GVDE7FcyWzyJzT/tPvkkENed9Ky3JtYnfb8yt66xjEcrpqksopBGkd
jLFtYqBvyHocWkbhLcvguGYbA98c/R1mLNIPpvdKlgwzmPJgtM+tlEJNQcgN
s1EGshqVHxpKyP66akysHGeQyJKdtoFYlrVXvEmCD9nFs2ZNIHOYbGDpqFCa
j65Kpd9XiyjMGHnwS1mNj3s+DfzVeRSmdmzhnN3Ox2qpCo4X6Y9l95i9QxZ8
rL0lXJbxiuS/sU/jZSs+lFN5o21pFKYkZjQE7+bjsrmtrEUqBSlH5ep4Zz7E
+mQVJqdQkKztLf12lo+PCZNi15J+LVEYm672kI9Y9QPd50j/bzIw3ko/4sP/
kIXYMTIfpOd2Mw8e89FjcmaXHZkf9r7dICv7jI9FFs+frYqgkJlGe4q85uNo
/1Sl+hDSHx6qred+5mOxzpm1H/3J+fB+WRL1m49K+eu95mS+CR/c5bhzgPz/
I+HexFOkPp3792faEIl/VZLXfydJvrpbLAwc4+NGdv5freMUDh8TBp+dLEBK
AdPSeZCsl+2qHVYqAjKPbPKRt6dwUjevcfJ2AQyWPXNW3kzqR1V96nsLAZas
X9qXtJHCzFO9fketBBB9Nli7GBQKn2holu4W4O/R4rBVBmT/FG55XNkvQO1p
uXodPQp5Q4emDJ4TwPmbOqtpEVnPQukNrQkCOFYsntEznfQLM5eE/wYECN/v
elmGzYautqohhgQIbftdtKOejf+kmebCEQF8jAzuhtaSebfWUeGDSAtGQn07
RMlc3u9oH/5RqgUSJnnWzV/YMPSw8v0yrwXn47y3mOWS6x8Y2tWYtGDl+s9n
ZMn8/OeH0oz2qBasLfPavd+BjexdpuKRxq1QfqM7uzSvAX5bA+Oz2lvxSNRV
2Xt6A1S526ikwDa8+T7sccC6HuvXBEQqrmzHUq644mrXOuybVzkkWtuOggM7
Ygr9a/GHFSY4498BEet57mpuNYiWcPLcqd6Jn7/vmr+xr4YcLztRrKQT59cc
HGpaV4UJl/xt1rl/h/urpY1zmXKIpDilC2S74J9VZS+x9xs8HqSHyRZ3YTzU
yeS23xcULAmSlHH7gfjbenKCqFLIbPPQvirdjYIxTutFVjE4S6tqvfO7cVS/
KO/w3kJkPIJ6q1MPZGAQYns8B47pejJzx3rgKzRbmnLpDa4EPvbnvPiJ4s7s
JUV/U5DWOTdW2lyIhRGBW2M8YxEUF7ifZykEfb362q+JsTi0s0fjlbUQkg9+
pZvFPMCc/PwMC1shXLpU/vUVxCAkwuFTqIsQ+vcWWC6ZFI1jejF9Ut5CmMnN
WbQ1JhILAuS3TnoqxMQHl4NYXjcxttZ3Gvu5EJwVf2MU40LQ2NNS8/SlEM3n
bJOPfAjGLds3jiaZQqguz28fnhyE8cU7zwbmC9H6rmlgWmwAONURj8Rrhbh5
9Fx9o7cP3l8fPFhbL4TMn/mfTYq9EanvvCiJEqLSwak4U8oL258sy9rME2KH
8Q2Hq7GeyPUq/+r/XQgLxa8BahdPImrp6gjrbiFi8vg2bVLH4C54aKMqFMLz
8ESrJ7GHoGXuShf1C5FBNTzddNEBEqJ1ybcGhagv3vExJ9YGTLb+if3DQqwX
T4zdf3E78k8kLdcZFULdet+K+xf1cV9lyp/xcSGWb9QO/P/3gf8Bd6dvww==

          "]]}, Annotation[#, "Charting`Private`Tag$655946#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ei4=
          "]]}, Annotation[#, "Charting`Private`Tag$655946#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
Ei4=
          "]]}, Annotation[#, "Charting`Private`Tag$655946#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$655946#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wafRu71bl//9m4fL92684BOwrf4fbjeafw==
          "]]}, Annotation[#, "Charting`Private`Tag$655946#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5Foyj4Vw/nhCvqYMR9dLnl76hsUrBw9xm8Nl9LXUGNybz6Juot/S7w7m4NDd
Ba/5i1i4zl0dHWSdg6/lYkXzEhbVzKKuTx+zMTN9h22nJYtHseeyFaHZcPKk
HoMrWPSu6NW/GXAJxYM/XNJ1ZeEsGTXnr8hCck6Sd7cbiyfK0Sztt5kQbB1a
WLKFRds6Df+R1EzMqa4u3eTB4li7zslN6gyIJXsazviyCN1q7b0hJR1C26yP
WpEs4pxCHvAqLsA00cBpah6LE2N5MQ5ap/Hfz0enPyvg3pvWqS2wF+P5UH9b
3lUWVnouEkXgKZzzuL6XX8ZCU5T+4mLTSYybb/09qZqF25rgzr+jE/HqqSRX
o51FqcJQbzQ+GjdOjPi1d7IIU4vuC59EIs3ey0yuYpHrHmozbBgBF4VVxbpu
FuaC4z0FJWG4FfG4KV7N1UNVYSayQKRb/iTZ8p7jadrOs7QSIqQve9s8lgX/
r6Rk/yoBlrgG9dR+YnHG/LZcmb8Hkyd2/HFuhDsfOKOU12xDb6V9gPcox1s8
Kqq84oLqAPky6zEWUxImGwkK7ZFhov15fJxFQ6qFZfrfu1f/Dwe93IE=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$655946#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.26545160083726455`, 1.5544155360121685`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}]}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}], "+", 
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "6"}], "10"], 
           RowBox[{"2", " ", 
             RowBox[{"sin", "(", 
               RowBox[{"n", " ", "\[Pi]", " ", "x01"}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"4", " ", "\[Delta]1", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}]}], 
                  RowBox[{"\[Pi]", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
                    SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
                 FractionBox[
                  RowBox[{"sin", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}], 
                  RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], " ", 
             RowBox[{"sin", "(", 
               RowBox[{"\[Pi]", " ", "n", " ", "x"}], ")"}]}]}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, 3.76114577712881*^9, {3.7611462528653364`*^9, 
   3.761146257599749*^9}, {3.761146551750352*^9, 3.7611465643527775`*^9}, {
   3.7615836759585915`*^9, 3.7615836918157887`*^9}, 3.7615960447323275`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"2f80acb6-9056-4f92-8a8e-746d8b160a15"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"747e63b0-1e30-4f22-9598-6bacaf9276ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"b5", "=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]1", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ",", 
    RowBox[{"n", "\[Rule]", "5"}]}], "]"}]}]], "Input",
 CellLabel->
  "In[246]:=",ExpressionUUID->"4568c6cb-d52e-4998-bb0d-292d548b7e3b"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", "+", "\[Pi]"}], 
  RowBox[{"5", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.761583701991356*^9, 3.761596047763701*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"7922d9cd-c984-4ee2-9fb9-20229c83feb7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"bk", "[", 
       RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], "]"}], "+", 
      RowBox[{"b5", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"5", "Pi", " ", "x"}], "]"}]}], "+", 
      RowBox[{
       SubsuperscriptBox["\[Sum]", 
        RowBox[{"n", "=", "6"}], "10"], 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "x01"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          FractionBox[
           RowBox[{"4", " ", "\[Delta]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}]}], 
           RowBox[{"\[Pi]", "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
             SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
          FractionBox[
           RowBox[{"Sin", "[", 
            RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], "]"}], 
           RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{3.7611465754591064`*^9, 3.7615837187176356`*^9},
 CellLabel->
  "In[247]:=",ExpressionUUID->"28fac323-b60b-4d17-be52-1290306aecd0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
M1re
          "]]}, Annotation[#, "Charting`Private`Tag$656630#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
M1re
          "]]}, Annotation[#, "Charting`Private`Tag$656630#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk41N8Xxy0VScrSVyRSElmSSCSHkiSSECkS2hTZkiVpIUuRCkVEKalk
y77dGdvMxxqV3czYZ+YzTIms6ff5/cPzeu48d+45533Ofd/nGXmX6ycv8PHw
8Bwh/vz/v9kFZjuJZWvgq3a67Nw19+oVh6S96FJa8KCFv4jngCnak/Yi5YuU
MXRWKDeQ9e3RsZauglQpG3DJo/KG6l9Gdm6zVU+l3KA445TH1/0BaGBXxKEY
KT9I1qBeNdaNROkbLB9ES4WBhLpusuquF+iu4JcdUVLxcCWz+T/2qixkf/p1
7s9fb2Hf86ulM5aliNtnI/RG+h1M0+pb7geXogdOghesD70D3m/maCmzFH1x
vS5dHP8O3M4mpOT8LUUingfCg3UyIU61SkjkYxmqv9fjsCrkPVA0SrWSl8uR
ZrboKhnBj/DWX/YGLaEKrfl39+wR2VxojX9TG6JHRi+u2DmpmuTCbpMVxbnm
ZKTwXdVZ1DMX2rL7xb45kZHBhy7Xvqpc6I92apy4R0ZlHxKLStTzwMTo+iXv
RjKasOZUHmvNA6Hbt1UyTtUg26znTb5rC0A/Y0rFyLUWpTjeM78oXwDCE4pm
d31r0ZCYR4u9dgHYKD/rzLtfi66HHGw74Eiw+fDSQEYtijo50SHwuQB6n2/+
4Tlci6qWDva+NP8Cjsv4HcdzdWi71SSz9mEhLPbkKguY1SPp0CN6l14XQvXV
wBDT0/Vo/ef0h0IlhVA7CYp+l+vRgqC1utVQIXSsX1SPflCPvpJKfGn7iuDF
uu/KueR6FKRxd3lutAiiA9QcWvY0oOtOvZYpi0UwwrAp+GTUgNwe7XkNosWQ
t+W3ia9lA7Jkjh56oF8MaazAwSr3BqSQbhYl/qwYJPiP8kF6A2pdJyGhblgC
xy92nR5aRUG1BzwutNuWwK1ZPNVcnIJKrzYU+10tgTUPlyXS5CgogxJwuiKx
BNTv088s6VBQQOjAK9OJEtBjW8cmXqKgrdxMZdfkUuhYEUbdX0NBN1t14cV0
GeTrX5unuVGRiHrRKCZYDn5PKVrPPKjobYzGo0WZcgBlK9Hd/lTUbr6jx+lw
OdR5ON5RjqAilSYJ3+2J5fDIT2thTRYV0SnczAKdCvj+KCgzZpSK/HdctRg5
RvCTV6WdHCoSjhj7vcG5AvZJJFQITlORrsmAYWBkBYz75F3ZwYehZ3WNvdBT
AbE7YoyOb8bQEfI7kZagSnhq7Ti8zxJDtC3yRcuxlbA6bFBZ2BZDfndSzmhk
VIJLrGo1xQFDr+FZ1rOmSuhJ3fVh9gKGFqvuHHSQqYKc6YRg3WAMPd28xHyo
UQVfYlO3Hr+DIaWQm4+rjKvAvZivySwcQ7b6nv1bPKrA9FPJwmIshnLLz/iP
V1XB7X0J3/VfY8hEuktGqqMKas78Cot7h6H+wJO1ZmNVIHOlbKLpA4ZW6x5d
nyNSDSV2svXz+RhyLdn70e9cNUx9PpKoQcbQwn8FJzJ9q6FT8bMEuQ5Dcf5q
s10R1VDgtW6VLhVDVdoKxvvzquHSlNwWeiuGJAtFaby8CDKTRkz5+zB09tGi
zch/CKx4YvaupmHojdtoU4MqgilKIs8UA0OqG8rKHtoj+PHzMO+1MQz5TLzR
8PRE4Puxe9tfJoZK6h+9PxGGgHv//YIXjqGD/s4JG/IQxKvmpvL8xFDkcTPh
uXoEch/9TslMYahFUet+bx8C+YLHKdLTGBL7t3mh8hcCtVcBFxdnMJSN3y9t
4ycB/4+Kj9WzGGrtmvtNEiGBY/v8Obd5DP2q9dhVIEWCCKXxW5wFDEnkDbln
KJBg3RPzuVNLGNqbYpcZv4sE1qxVWMZfDJ2ObB4M1yPBagOBsY5lDN3yM9p8
8zAJ8r+eNBn5h6FXzsX2l0+QQFiWf7CLpxGRzVXiT58hge/I4c+feRvRyL70
NrOLJNi50/HNBb5GtGr7hjX63iRIP5RW8o9gZdFoE7VbJCjp8R8J5m9E5n+X
78pGkKCD67Kll2BPlm/VuqckWMP+4yK9ohE9+cGc40klwZ5nvRn6BBeSHbWm
3pOAtrWx15Dgzs8d14cLSHD4UOI/RYLnk458+l5FgiOSCkJcYj+ZB5Vj9VQS
aBh6TL0g2MBn99aSbySIGg7NUyD4vFOmYxaNBCN5t/WfEucLM9uUlMQi4hlP
jx0k4sncG/c9epoEdWc008QIxrauXH/rHwksQp5d3E7EzxEJOuYhRIblM7oD
UkR+RBYnHzhtIEPu58+LXCKfu8ddayy3kCHlW2z5eyLfNt+6/xqqkKGY/ljM
aBFD/shCV3MvGUSSA5YqiHolfarx22ZEBt4H2703zmGo8rlOnoQ5GcLGI66c
+oMhXi/5HbPnyYAtJWH+hD4Uzia6MK+RIVQ5fttpQj8mpmte9dwkQzWle1Rm
EkOPtsxIVMaQISisItKUhaEcYfcTn1+Q4THb7Gweoc/2OdrDVxlk4D8jcHt+
GEP/tVP57paRIWG+7ekuQt+6VQcMfOrIYNjtFyjzf/1/KAh0bSNDnEpAAruL
6Pe7KT8Pj5Jh5FqB7c52DNV5iKrq/CRDv8DOyZctGBo7/eCS0iIZ1IPuvp3E
iP7Q9KIJidbAiYF9Njo1GCoeOtTcpl8DxXwmirZEv3aa3v0Vc6QGpNZEBo5k
Y+hPTvV/5idrILqXn26bhSGdYN3z1Es14C3f0EJ7haFS8V1/SE9rYLz4aXlk
NIa6A69tCk2tgczXe+WUiHkyR/9geCCrBiJ4Tvh8CMXQvmyFh2VVNbDybsA3
Kz8MlRlLbylg1oDmVmFx3bMY6v1od9jrdw0MUfVvjRPzbWF9grv6cg3oHRMt
uknMP72BdUUfxWsh0q844sBBDJXfWGmWYVALthtI1k6KRL0yf/rGx9eCik0B
7ReTivqF1ZNOptVCDskGq2BQ0ZLP1er1H2uhvmzM5lI3FR2AMcEYVAtPf40f
dqVQUXVXX2o4uxZkbirZTmZQERKkUPwN6+B3fO0LSzsqYniumNA6Vgep69Ny
NS2oiOeHkdhv2zqgT1eazx6kIsPXlWevX62DzhPfN2xXpyKSbsGvS4l1sBBx
qVmMn4pq3FM3nebUgcAHrs3e9xT0hXX1qtOfOthoW3WQN4WC3l7Wq3DlqYeu
5qjM/DgKCr/Y5eApUQ9uK3jaawIpyNRFNPm+fj1EudDLM80oqO10+MacR/Xw
fDDI+cZ4A+o39djAr9YAwQcpK7XXNqAWyv4LgjoNkF47Z5i3XI+qTYSK1ho1
wEb28f9Ef9ajNOP3NhttG8A9kfP8fkc9cjEcfKYW0gBryb3aqon1iKljK2bf
0gA174ZWxm6sRzOKB9Z99qDAbuPkc1mr65DB0EFKdAAFmCqHnjj8qUUPUk1D
L9+nwM4ce5XJoVr0n4QNd1sSBb6dO/O5rKIW7eW92pZcRwE0ahYydLUWBfS9
eBy5iQpmYRe17zTUoKXH0+vcMCpEvnoVLXmBjIyPLVCMvlNB70iAKd9xMnq0
iueOHJ0KlcqYXtteMtocsuZn7zQVRpK+9K0TJPyV+9avVlswcKizwVU/kFCo
8Yk4uImBV+ONb+VNCPHNf1q/aXsjMBkZMR+fVqJNLQd/w65GYr5wMqucK5HW
654fbrqN8DYtm/xKvRJdOCrwMseiER5dkTVowioQNcll+0H/RuCISam0/S1H
j/Wk9K5QGkH1y8D8k7NlSObWA9eSK03Q3FSTfm+mCO3951xsndMM9o3CFR2a
n5G5Bene4dJm6JZ3sI0vy0auL+UsdWqaYf2zmIf/IBvF6dDGpTubgefCjtBv
xz4h1vUzUkN/m2HfUK6//7kPKIVhe8vLogUM/XLHv/q/Q7w1ZgdjOC3wlXlm
4UhrMmoO02pt2NkGd5Lj7rO0Q0AuDp//MPkVNA4V7o8hfBY+S6f90OiAXReV
khye18NbdkWjSOw3cErI/fC0/SuIbH7PHRn5Dm4OX8XTRzqJuIsupit0guD9
o1E+D/rhj+GnkcuhXWBM/hcft2cQ/DTrCv+r7Yb5urvNqWgYLmptSX9C7Ybo
UiEB2cZhsN9766FwazcwR01Vkr4Pw349LRe+nm6Q8Puy8Q5rGPgOvl03OdkN
nMx7tHXiI/DYKsy9XroHHH0cenZfGIGPXsZb/Hx6IOkgCU6tHAV6Tt3Ddvle
2H2wOJmxZwy+TqzgaO7ohVt2A+dr9ceApHrYPF61F94VtwynHR6D9I/1wnY6
veDNq7nCxG4MXDIbYvrNe+GyJU3VJGgMxlKpj8dv9sIdudYuUTQGE4+an/1t
6QWxEPrmokPjQGsSnnb61gsixuHD9cfGoVXIwobU3Qv7pSea2qzHISeyReL+
cC+09/6ZanUdB6+w1gTB+V7I0/KRCbo/DtPBX5+LK/RBDjPubyh5HBbdv79U
DuoDPzKHqrKPCTZ7HZ+oh/ZB+E537wEDJmTzjj3YE0as73v+IfIwE5xezHof
iO0D6r1fFU0nmUCulza1etMHPBqTa1d4MCFiy/npgMY+6Lwf91IvnQninRPm
VOl+WJavyfrAy4Jrr/0Ptsj1g1oYZVeEAAvqrv3T6VDoh3sr/htxXMsCf37R
bf3q/SCssQn7s5EFPRpa89yD/TC22kG7cxcL0h4GvZO82g9+SYaKR8+yQMVI
YPliRT9IFTQ95+SyIO/jpx3dpH4IuthUa1vEAi2JE1ZHG/rBQVvlQXE5C/TH
X7xVae+Hwr+vyU71LDges/PYz7F+iDJ5WXW0lwU+PRYvAsUGwN5aRSWCjw1/
Dk6R2ZID0ODHOnlZgA3B2Yn4mc0D4MF+PmgozIawULqBgdIATGUlKHVvYEPi
du9RPoMBMGV0r0tTYkOZd7zmoysDILx/lvXQnA0GffvO/vUcAGPn8/uHTrCh
xngg3NNvADS2HMB22bKhUVKx50ToAOQ4nI7Lc2RDf1VJ6IaEARC6nxth6skG
HqG+5lekATCK/SbwNYYNR97IX8qXpEF6YlSNWgMbtF6IKDbI0MDwlFapBsaG
LbGLI73yNPBnXmhRaWbDQuAPlxWqNHjz8ewJoQ42fLaKcrIzpEGPlvfjywNs
EOf9Zfv3Mg3sV68tzpoivm92QELMkwZ+F47Oqc6wgcNp/KboSwPnwK5DH2bZ
0ND91upECA32xoz/ilpiQ2CevUXGExpks3Ij8JU40M+RjI+W00CWNJCgLolD
s+1nfidEA2HsIl1TCofSY8k1PnU0OC+zfsuuTTg81fEzTGmlQT9Wd2+dHA6H
1ynpc4dooPLqdcF1RRw0V25Y5GfSIG5hMWmPEg6yi7zlGydogD8Y8uIq4zA3
1qdzcJYGhRe6WMfVcPhU/XhPwho68Az3/szeg8OLwltTH9bToYA9ra+hjUPY
xyv51Rvo4PJojc+nvTg4JR7axZSjA5+TVnyULg6inrM792vRIeXq3bcjBjgs
u46wLHXp0E/zUthhiAP7dHuWmwEdhmo6Is4b4VB3+JNirCkd/sT5/6k6hMPN
zee2Dp6lQ04Nw2WDKQ4uJzRO9Z+nw6vJfb9Fj+Jw/D5vdNdFOlCveX1ZZYaD
IivjV4sXHaZL3pG7j+EgJnNjO3aDDp/VyCLF5jj8PW5yui6IDo+OzEY9tMDh
eyGTVB5GB5NbG1fLWeJAGi+bLoqig1U6CA8Q/En6oVJ+LB2Mg+f3PzuBw707
anHvX9AhWosix7TCwfPLcu2bVDrw3tf+9uAkDqfH2mZT39BhxRU8f7M1Dhrm
Pufis+kglCf8c48NDjKhh549zqdD9sTP418IFiiQoEQX0+HMLZHunbY4TI2M
LoRX0OGmhcrDZIJpkiXqd0l0SN4iepnvFA6NZpEut+rpUHk/xtOF4KKQ04k3
G+lg/s37VTnB6Xk7G33a6GCq92xWyA6HR8OLfz2+08GmoDHQmuCA/1p2X+mh
w1f+GYV4gl2PvrrgRqMDs35qrpng47euJ50bpkOWU9bMX4L1cg1bHJh0WMO/
LL3DnsjvkCjvqQmiviX0y6YEi24Y1rKaokOYxQH6eYKXjhReNp+lQ8Jlodu+
BDODwlOOLNHBMtDgcAjB7FMql1/zMICBvmuFEuz8U5xPjp8Bz441mwcS3Bm1
9DJlJQO+LuyIuUrwsW2j2tKCDBAPnpyxJZhU2dL2XIgBM6Y7I/YRvPdU8ZUN
axkgk8cyFCc4m/uK/9k6BuxtMtg2Rpx/a1RE6noxBvy6D+r5BL/Y6qUTK0Hw
05UufgSLVNq3r5FkQHVoTvUugsNsja5GSTGgOP2M8TCRz/lJ5ZUCMgxYktb8
HUuwZ6RYWpgsAy4OOTRpEjwiv7iPT54B58v4WlqJen21ab72dzsDDLISLLhE
fU0mC1cFKzFAwWKi2ZfgyojU9LmdDPDclOr/k9DH+3LP7793MaBUWdCsg9CP
jI2dp7cmA3ZfOu6nQ/DTCRDkajEgn8rXGE/o7fYWUX22LgNkqTNzOoQep8vm
f1zSZ4B920BHCKFXd+uh66MGDOhsftBTcRwH2wdfMhiHGCB37IXnFkLvqhzb
NV0WDDjl8afmIdE/pTbmKPoEA+56RT8PIfrrUNVBXwNrBnjz39a7eAQHh9hd
fe/sGWBCFZjcdBiHKI3Vn/xcGVDufElWiuhfiaR/TkoXGXD7U3wAmejvdN4/
Yv2XGbC6Lz/T+QCxf8dQ0CFPIr+F43fv6+Ew5ldpJhbIgAK5pGNntHDwGShY
rg8mzvsp4Gy5JtGfh4kH0W0GbKHuMF2/m9hfMlF68D4DpPsoX9KJeXSo7Do7
N5YBgk3zs9bEPEv/uzXa4i0DhKPjFFb+R8R3UcqA9z0D+EKmznWI41DSum6q
8AMDKrqbIxJFcWhNWzotk8sA9UahN/xrie8z6lTGy4j4zT9v9+Yn4n0QhUW2
MWDFg4dvkifZMDYZGqLfwQCe8tGjXTgbvO38d//8zoD0xdhpIRYbIpVck+x6
GfDCdJ+D3TAbihv1ryiOMqDj13h8WBdxH6z7KVi3wIC061GmmtVs6KiKjjj6
lwGGPyRXSlWw4em17ava/jFgYcFq1VwJG8QaHfh7VwxCkP2qgVf5BIfX/+WK
DMJjX65A3Fs2rF9Mntq0bRCkxc3qeKPYIDx+uN/32CAI6j7euou4H5sTGA7z
FoNgbswhy5uy4ZFxcM/tE4MQEyZJFzZmw5o3eZ1RtoPwNGAuuXk/G4QcN7Wn
nRuEs55PT07tZIPgt5/1Tb6DMKJTmNxN3Ncr0MvcbSmDMP3UftOWShb06hub
0l8NwhaRZ0kVxSzILecwkl8Pgo56TvLxfBY4FB8QE3s/CF7GuzXPZLIg/zPd
j6dgELJBef26OBY4pWzTG6AMwpc7rRdGzrOgNPBTXeLvQaAaHHdz/MeE2Flr
x5N/BqHBmFbJnWOC642lmbXzg6DV+WNV0BQTRLwtdoQvD4Lw9tW3/UeZcOEy
N8p39RB0lgy6rmtigpjdHssTckPwo8zrel08E65qVfSsPjYEc9bGYXZbmUD6
+iO71GIIMgUm7MQ2MWGDx8/QSyeGQH2APVwvzgT0brtive0QDMkYaUuuJPyX
ZJzPHechiA0o0nAdH4eKebc1szeGwHI0Q/Ptx3FYg0QOjKQPwZ9yKU+myjh8
OuqSXv1nCFZlpfv7S4/BDC69fixxGHaZn/SI6B+GIusj/PHGI3BENvJ6jPwg
hJqGpxWOjcBJviirR3X9ID9g1p0RPgqbnzy1jlHtAj2dsHgpzTEISpPJv7Gu
Hc7Kts3zfhsD6+NrO5kLDTDTGDPkdXcclPYcHNupUAIvVjj5nVRggvOXlkO8
1BjivpXUbldkAiNzx1Vm1ENwq/06Y6nMhPTDJMVp8yjQuHfopoU6sb6sPH+r
Mwyo/5SCTAkfe0f3l0/v5E2YXfgdamDOBB7z16U1uhfRqV9RD3f6MeGE4u/V
UT3PkDit6A1fHRM2XuI5ck34I4oVDgkpaSDWOVoh3k8/IqH9xvbXMOI8b4QP
iW78hPhedKztbGWCfbT4M7mt2WjKihvwoYdYH51lee3OQV/rlSxPcJmQd0nB
2EE2Hz36/HIxVZoFfveEA+X4ipBgv0vnyc0s0MjvG4o3KEJhQjvzBbaw4HtY
tfr3oCIUfKn0ovd2Fth/S12dN1WE3OV/tBtrEOvkVbK99GJkmiCShR8m1tV+
tA7llqKVIXdtdL1ZYBiy+Y6iYiUq/MWZR74suCX/6a+0fSVyu2ifZuJPrOv3
jgxEVaI6y11s62AWxI/N57RyKlHY1oFQz3AWpHTVejnkVaEV1H2fMpJYYLNe
imetOvE+Ff/JK1LDgnu7v8RU8JJRQcSZ9/F1xOdv3C2LkSQjl6UG800UFsgm
rNU0USOjmtHU50rNLGietPx5xZ6M7pUeUzvUyQKX1xdngj+TEa/Te/sANgum
6Za/607WIJ4PTrlDYmwYlqu4XhdVixo4XZ5phI8W8tqUMZhaix5pWKmf3cgG
qUwyjZ5fiyRLD33+sZkNuh7f7UN7apE6RekTlfDZh3f51xzdUYfOjk5l5hiw
IRs/vlKwqg5tVb528aoRG/qUdG32tNUh5rXR7UrEHCmfXDgLg3XId7rr7euj
bEjROPtwfkU9iuavehNvQ8wN2wJ8xqwelclHvApyJ+bg6dR7a9rr0e0LPE46
HsR5Xq3IMhysR8YfAjdPX2dDXt7146d+1aOvGtdSPG6wocpHXHybaANiglWy
8x02yL95vfugZQP6z2lTokkiG1JL8ivi6xuQT3JujFgNG3waaPtCkymoZCk5
oqaODWkGqeSITApacnpw14fCBhO5MeRdQEER2xxvdBA+/vujKhk2RkEp2UKO
T4k5TcFunb42S0H11RdUxSaI/Myd211iTkVC8laKNVzCx7PkNbtOUdGJ+/pb
fAhfv7VHI6/bmYp6j4hLdBA+3mAfS+mOHxVNfiUtPuHD4U3rBs3zyVS0cXhT
k+hGHASdhdZ7MKjI8bBAPVkahwFfp5R3TCp6836q2nszDlSLSTL6SUWq17CC
9q041NJvDb3gwZDRjH/yE+LeU8rqIdNkMfTAziXeSIPwPXf4nRUUMdRcZhH7
i7g3U+6xso+pYejUbYV7VvtwwEsVz8F+DLkLdFwRJXx02mbP0ApbDOVeqXIl
E/d4rcMMR+Qshqabshy9iXs/MrJsm7ELhkLjQq3aCZ9QJFu4aO2JoXgpNd0n
hK8KyOKQVodjqCd44x6jMzj4W5gNX43GkCyNX+2XIw5e3c6TuY8xlPWmd4uV
Kw65LG7bQBKGqlQiBUU9iXVlzwPt2Rja+12y5akXDleavrydzcNQ3q33TyR8
CV+3aucSfxGG3rQ0SG8MwEGt9+XD1koMyfifoicF4dAVVdz0iIShBNmxjE0h
xLtoCYR312Eo8vpKNbl7xLvF4m6aShOGeDcm/EoPw+Gsd9vC3VYMBZEUirdG
4PBgoPRSdTuGPESNQfERDt8S1CJZXRg6+eWelVoiDgk2Ma6rhzHUdEbsv9wX
OKwL1m+KG8WQ8Yo3vRovCd9zJOvK8jiGdGzJrlrpOGy4c87pEYc4/98TSsVv
cNB5/bY6exJDOzMZHJ13OJxpTrry5Sdx/tl/N/Z/JHx2unKh7zSGEtMe61Vl
E/GV7nFS+4OhdaZy/wxycdDOb77UMkvE8zOnlpSPw/nfJzqt5zHEl2QQebAQ
h9gYlVzSAoaCjVrN64oJn6fZOSu+RNSP5ShqUobDqFZPkcVfDHk+nfhBqcBh
VXjTpMcyhsb1QpKPVuNgkH0yy+8fhpyHhc81kXCQb9zKPM/TiHofpmyzqMWh
L275izZvI7LWUmW21hPvMKMS0Z8EN/dXZJ+g4hD6QVXgCV8jMgk/5t3RiMMP
GYvkjfyNCKn1adu04EDx29D+gOB9ne4LP9pwkFrzJL+P4ILbC9V2HTgEFfcY
Sa5oRCo7ou/3fCfegQ2SkboEv22TMj3TRcTPdy/6IMGyAR+EB3pwCE9ztNQk
+PkW3XanfuIdYLzcL0jweoyawKDhIMfToNtA7B/tbe/gMkjow3T7NXeC+aWZ
siPDOHz5kxw0Q5z3Vs3N4QtjhH4NC69eInjGXSBrnEnsXyJsQiLi8xR/fu0K
jkP8oePreQhmVijuxieI/eV2tysS+TnvVjxz7ScOPN+CH2sR+esVNimfnMIh
WJP/pDKRX5uiH7e9ZnDQt/sot5LIv8mqGQG/BRySU1XmvIl6kXLCmmeWcIhW
FRflJ+qpayfx5OY/HNZba1sFE/VWzdojHbyCAz0hDFd5Qh/vTtTSllZxoDWQ
aWw5RfTX/MmM26s5sGtayd2N0JOomY/qPREODLVzXhkT+ksnr1ujJ8qB66W3
l2ksDGnofmb9EudA2PUUj7OEXo8rMTPPS3Ggd9D5Nc8QhgbSwsOlZDhwkv4x
cAcdQ9ckt7m1y3JghwIlcnc/hqJXOckbKXAgquKJL/cHhqRuL/6bU+RAwkCI
a0YH0d8zL2h5yhzgdJUU6LVhiDLy7eWWXRzgeru9EKdiaEXt0f949DjwL3rh
3fVSDD3TG58u0eeAo4RyERRiaGtB2LfrwAFFTCvgdy6GDF+jOLoxBy4qJxxe
9R5DIaHaa5AlBx563dzT+wxDwrMdLP+THLD7KSCJxWIoxdOLqm7Lge3htQIp
URgqd/wU/sqBA2LbqQaTtzH0Z788z+0LHPgc7XP08GUMhX+ppmlf5kBIyqF+
W2K+SaicrZpw58DrRv1eM2L+7ZF+HuToxQGzO6tMhywx5DUnPKMfzAH//udG
VG0MsQrnWItxHPiEN6cGL1FRgGoi9cszDvxar1vYPU1Fgm/3vL+aSLDEs3/S
E1Sk+MzTre8lB3LnFq9YDlCRi/cIrTyTAwaf5/gDK6moX+3rt8BKDix5puj2
3aCiNFw0hB8R+ffRfK3hQXz+g7ViDJkD7UviHtfdqIil0BWQ3sABq1x75w8n
qejPJtpmylcOVErJL69TpyJRIc4liVEOZHyEhwUMCjIZE1jKWTsB6+/+2pOh
TUGr3x59t289wZ9zcvR3UlDz+YfHa8QmoPyF3iayLAVZD4i8/iE5Ac2SZcvR
AhTk/H2DyZL8BOSt/eGm0N2Agmu2xR3dOwEHStzuBt5oQHmvQGHEaQLkvm0Q
Fnldj34H/RY4f34C3t6rTbj4rB7ttXuPD7hOgOfJhcfZ4fWoYt26L12XJ2B3
sO9aXvd61HCHZtTkMwEiM2MFLbvrUZ9LyLmCBxPg5DO9yFtdh1btqEi+kzMB
l68r7N2P1SLH3L2im5cnQNnG3Uk7h4yKHeZEvvJMAiegIKs7mYxEVpUL3+ef
BEVzLNI9goxIZw8IsgQnITtR1tHBmYy2Chn/KxSfhO9/+VOuiZLRmJvVhLny
JJh3GdV5eJGQp/Q17JbNJFgkc1ZxjavRnfDXd/s/TsJZ/dizjOJS9Jm5+aWI
ORcCg4V55b9/RJGp4c6041xQTFLjSl/9iNxOTmzPseJCXjamP8/7EclUVuZZ
2HEhrs4w323XBxT9+EzDIxcuRO+Yk+WPeo8u7036JRTIhQb6gSNI5y3aGiZh
KpDJBYuG/K/3hV+i5X231nZlcaGN+0sAtJNRz8RwR+YnLrgn9jFpjkkozu6L
o0k+F4YtalS+5jxH/3ae9A2v5EL6/cBTTyzjUX/741f837hQ/kz7d6b0Q1T6
YNb12w8uuJicbg+/EoXi959TzujmQo5i326z0gh07J164UEaFxZtFaKibcNQ
eUALdpfFBelAyb/assEoUU37sRWHC1GczLKc8pvIeyjFRp7LBYmCt+Uidn5I
yfwanTTNBeGg36e2y11FK3i/v42b5QIP7037YDs3xCja7+68wIU5oUnzALkz
qNI9Y5fGXy7c0dMxrZA7hp7LrZn5948LvTvvlf7/90X/A+1aNEA=
          "]]}, Annotation[#, "Charting`Private`Tag$656630#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVmnk41N8Xxy0VScrSVyRSElmSSCSHkiSSECkS2hTZkiVpIUuRCkVEKalk
y77dGdvMxxqV3czYZ+YzTIms6ff5/cPzeu48d+45533Ofd/nGXmX6ycv8PHw
8Bwh/vz/v9kFZjuJZWvgq3a67Nw19+oVh6S96FJa8KCFv4jngCnak/Yi5YuU
MXRWKDeQ9e3RsZauglQpG3DJo/KG6l9Gdm6zVU+l3KA445TH1/0BaGBXxKEY
KT9I1qBeNdaNROkbLB9ES4WBhLpusuquF+iu4JcdUVLxcCWz+T/2qixkf/p1
7s9fb2Hf86ulM5aliNtnI/RG+h1M0+pb7geXogdOghesD70D3m/maCmzFH1x
vS5dHP8O3M4mpOT8LUUingfCg3UyIU61SkjkYxmqv9fjsCrkPVA0SrWSl8uR
ZrboKhnBj/DWX/YGLaEKrfl39+wR2VxojX9TG6JHRi+u2DmpmuTCbpMVxbnm
ZKTwXdVZ1DMX2rL7xb45kZHBhy7Xvqpc6I92apy4R0ZlHxKLStTzwMTo+iXv
RjKasOZUHmvNA6Hbt1UyTtUg26znTb5rC0A/Y0rFyLUWpTjeM78oXwDCE4pm
d31r0ZCYR4u9dgHYKD/rzLtfi66HHGw74Eiw+fDSQEYtijo50SHwuQB6n2/+
4Tlci6qWDva+NP8Cjsv4HcdzdWi71SSz9mEhLPbkKguY1SPp0CN6l14XQvXV
wBDT0/Vo/ef0h0IlhVA7CYp+l+vRgqC1utVQIXSsX1SPflCPvpJKfGn7iuDF
uu/KueR6FKRxd3lutAiiA9QcWvY0oOtOvZYpi0UwwrAp+GTUgNwe7XkNosWQ
t+W3ia9lA7Jkjh56oF8MaazAwSr3BqSQbhYl/qwYJPiP8kF6A2pdJyGhblgC
xy92nR5aRUG1BzwutNuWwK1ZPNVcnIJKrzYU+10tgTUPlyXS5CgogxJwuiKx
BNTv088s6VBQQOjAK9OJEtBjW8cmXqKgrdxMZdfkUuhYEUbdX0NBN1t14cV0
GeTrX5unuVGRiHrRKCZYDn5PKVrPPKjobYzGo0WZcgBlK9Hd/lTUbr6jx+lw
OdR5ON5RjqAilSYJ3+2J5fDIT2thTRYV0SnczAKdCvj+KCgzZpSK/HdctRg5
RvCTV6WdHCoSjhj7vcG5AvZJJFQITlORrsmAYWBkBYz75F3ZwYehZ3WNvdBT
AbE7YoyOb8bQEfI7kZagSnhq7Ti8zxJDtC3yRcuxlbA6bFBZ2BZDfndSzmhk
VIJLrGo1xQFDr+FZ1rOmSuhJ3fVh9gKGFqvuHHSQqYKc6YRg3WAMPd28xHyo
UQVfYlO3Hr+DIaWQm4+rjKvAvZivySwcQ7b6nv1bPKrA9FPJwmIshnLLz/iP
V1XB7X0J3/VfY8hEuktGqqMKas78Cot7h6H+wJO1ZmNVIHOlbKLpA4ZW6x5d
nyNSDSV2svXz+RhyLdn70e9cNUx9PpKoQcbQwn8FJzJ9q6FT8bMEuQ5Dcf5q
s10R1VDgtW6VLhVDVdoKxvvzquHSlNwWeiuGJAtFaby8CDKTRkz5+zB09tGi
zch/CKx4YvaupmHojdtoU4MqgilKIs8UA0OqG8rKHtoj+PHzMO+1MQz5TLzR
8PRE4Puxe9tfJoZK6h+9PxGGgHv//YIXjqGD/s4JG/IQxKvmpvL8xFDkcTPh
uXoEch/9TslMYahFUet+bx8C+YLHKdLTGBL7t3mh8hcCtVcBFxdnMJSN3y9t
4ycB/4+Kj9WzGGrtmvtNEiGBY/v8Obd5DP2q9dhVIEWCCKXxW5wFDEnkDbln
KJBg3RPzuVNLGNqbYpcZv4sE1qxVWMZfDJ2ObB4M1yPBagOBsY5lDN3yM9p8
8zAJ8r+eNBn5h6FXzsX2l0+QQFiWf7CLpxGRzVXiT58hge/I4c+feRvRyL70
NrOLJNi50/HNBb5GtGr7hjX63iRIP5RW8o9gZdFoE7VbJCjp8R8J5m9E5n+X
78pGkKCD67Kll2BPlm/VuqckWMP+4yK9ohE9+cGc40klwZ5nvRn6BBeSHbWm
3pOAtrWx15Dgzs8d14cLSHD4UOI/RYLnk458+l5FgiOSCkJcYj+ZB5Vj9VQS
aBh6TL0g2MBn99aSbySIGg7NUyD4vFOmYxaNBCN5t/WfEucLM9uUlMQi4hlP
jx0k4sncG/c9epoEdWc008QIxrauXH/rHwksQp5d3E7EzxEJOuYhRIblM7oD
UkR+RBYnHzhtIEPu58+LXCKfu8ddayy3kCHlW2z5eyLfNt+6/xqqkKGY/ljM
aBFD/shCV3MvGUSSA5YqiHolfarx22ZEBt4H2703zmGo8rlOnoQ5GcLGI66c
+oMhXi/5HbPnyYAtJWH+hD4Uzia6MK+RIVQ5fttpQj8mpmte9dwkQzWle1Rm
EkOPtsxIVMaQISisItKUhaEcYfcTn1+Q4THb7Gweoc/2OdrDVxlk4D8jcHt+
GEP/tVP57paRIWG+7ekuQt+6VQcMfOrIYNjtFyjzf/1/KAh0bSNDnEpAAruL
6Pe7KT8Pj5Jh5FqB7c52DNV5iKrq/CRDv8DOyZctGBo7/eCS0iIZ1IPuvp3E
iP7Q9KIJidbAiYF9Njo1GCoeOtTcpl8DxXwmirZEv3aa3v0Vc6QGpNZEBo5k
Y+hPTvV/5idrILqXn26bhSGdYN3z1Es14C3f0EJ7haFS8V1/SE9rYLz4aXlk
NIa6A69tCk2tgczXe+WUiHkyR/9geCCrBiJ4Tvh8CMXQvmyFh2VVNbDybsA3
Kz8MlRlLbylg1oDmVmFx3bMY6v1od9jrdw0MUfVvjRPzbWF9grv6cg3oHRMt
uknMP72BdUUfxWsh0q844sBBDJXfWGmWYVALthtI1k6KRL0yf/rGx9eCik0B
7ReTivqF1ZNOptVCDskGq2BQ0ZLP1er1H2uhvmzM5lI3FR2AMcEYVAtPf40f
dqVQUXVXX2o4uxZkbirZTmZQERKkUPwN6+B3fO0LSzsqYniumNA6Vgep69Ny
NS2oiOeHkdhv2zqgT1eazx6kIsPXlWevX62DzhPfN2xXpyKSbsGvS4l1sBBx
qVmMn4pq3FM3nebUgcAHrs3e9xT0hXX1qtOfOthoW3WQN4WC3l7Wq3DlqYeu
5qjM/DgKCr/Y5eApUQ9uK3jaawIpyNRFNPm+fj1EudDLM80oqO10+MacR/Xw
fDDI+cZ4A+o39djAr9YAwQcpK7XXNqAWyv4LgjoNkF47Z5i3XI+qTYSK1ho1
wEb28f9Ef9ajNOP3NhttG8A9kfP8fkc9cjEcfKYW0gBryb3aqon1iKljK2bf
0gA174ZWxm6sRzOKB9Z99qDAbuPkc1mr65DB0EFKdAAFmCqHnjj8qUUPUk1D
L9+nwM4ce5XJoVr0n4QNd1sSBb6dO/O5rKIW7eW92pZcRwE0ahYydLUWBfS9
eBy5iQpmYRe17zTUoKXH0+vcMCpEvnoVLXmBjIyPLVCMvlNB70iAKd9xMnq0
iueOHJ0KlcqYXtteMtocsuZn7zQVRpK+9K0TJPyV+9avVlswcKizwVU/kFCo
8Yk4uImBV+ONb+VNCPHNf1q/aXsjMBkZMR+fVqJNLQd/w65GYr5wMqucK5HW
654fbrqN8DYtm/xKvRJdOCrwMseiER5dkTVowioQNcll+0H/RuCISam0/S1H
j/Wk9K5QGkH1y8D8k7NlSObWA9eSK03Q3FSTfm+mCO3951xsndMM9o3CFR2a
n5G5Bene4dJm6JZ3sI0vy0auL+UsdWqaYf2zmIf/IBvF6dDGpTubgefCjtBv
xz4h1vUzUkN/m2HfUK6//7kPKIVhe8vLogUM/XLHv/q/Q7w1ZgdjOC3wlXlm
4UhrMmoO02pt2NkGd5Lj7rO0Q0AuDp//MPkVNA4V7o8hfBY+S6f90OiAXReV
khye18NbdkWjSOw3cErI/fC0/SuIbH7PHRn5Dm4OX8XTRzqJuIsupit0guD9
o1E+D/rhj+GnkcuhXWBM/hcft2cQ/DTrCv+r7Yb5urvNqWgYLmptSX9C7Ybo
UiEB2cZhsN9766FwazcwR01Vkr4Pw349LRe+nm6Q8Puy8Q5rGPgOvl03OdkN
nMx7tHXiI/DYKsy9XroHHH0cenZfGIGPXsZb/Hx6IOkgCU6tHAV6Tt3Ddvle
2H2wOJmxZwy+TqzgaO7ohVt2A+dr9ceApHrYPF61F94VtwynHR6D9I/1wnY6
veDNq7nCxG4MXDIbYvrNe+GyJU3VJGgMxlKpj8dv9sIdudYuUTQGE4+an/1t
6QWxEPrmokPjQGsSnnb61gsixuHD9cfGoVXIwobU3Qv7pSea2qzHISeyReL+
cC+09/6ZanUdB6+w1gTB+V7I0/KRCbo/DtPBX5+LK/RBDjPubyh5HBbdv79U
DuoDPzKHqrKPCTZ7HZ+oh/ZB+E537wEDJmTzjj3YE0as73v+IfIwE5xezHof
iO0D6r1fFU0nmUCulza1etMHPBqTa1d4MCFiy/npgMY+6Lwf91IvnQninRPm
VOl+WJavyfrAy4Jrr/0Ptsj1g1oYZVeEAAvqrv3T6VDoh3sr/htxXMsCf37R
bf3q/SCssQn7s5EFPRpa89yD/TC22kG7cxcL0h4GvZO82g9+SYaKR8+yQMVI
YPliRT9IFTQ95+SyIO/jpx3dpH4IuthUa1vEAi2JE1ZHG/rBQVvlQXE5C/TH
X7xVae+Hwr+vyU71LDges/PYz7F+iDJ5WXW0lwU+PRYvAsUGwN5aRSWCjw1/
Dk6R2ZID0ODHOnlZgA3B2Yn4mc0D4MF+PmgozIawULqBgdIATGUlKHVvYEPi
du9RPoMBMGV0r0tTYkOZd7zmoysDILx/lvXQnA0GffvO/vUcAGPn8/uHTrCh
xngg3NNvADS2HMB22bKhUVKx50ToAOQ4nI7Lc2RDf1VJ6IaEARC6nxth6skG
HqG+5lekATCK/SbwNYYNR97IX8qXpEF6YlSNWgMbtF6IKDbI0MDwlFapBsaG
LbGLI73yNPBnXmhRaWbDQuAPlxWqNHjz8ewJoQ42fLaKcrIzpEGPlvfjywNs
EOf9Zfv3Mg3sV68tzpoivm92QELMkwZ+F47Oqc6wgcNp/KboSwPnwK5DH2bZ
0ND91upECA32xoz/ilpiQ2CevUXGExpks3Ij8JU40M+RjI+W00CWNJCgLolD
s+1nfidEA2HsIl1TCofSY8k1PnU0OC+zfsuuTTg81fEzTGmlQT9Wd2+dHA6H
1ynpc4dooPLqdcF1RRw0V25Y5GfSIG5hMWmPEg6yi7zlGydogD8Y8uIq4zA3
1qdzcJYGhRe6WMfVcPhU/XhPwho68Az3/szeg8OLwltTH9bToYA9ra+hjUPY
xyv51Rvo4PJojc+nvTg4JR7axZSjA5+TVnyULg6inrM792vRIeXq3bcjBjgs
u46wLHXp0E/zUthhiAP7dHuWmwEdhmo6Is4b4VB3+JNirCkd/sT5/6k6hMPN
zee2Dp6lQ04Nw2WDKQ4uJzRO9Z+nw6vJfb9Fj+Jw/D5vdNdFOlCveX1ZZYaD
IivjV4sXHaZL3pG7j+EgJnNjO3aDDp/VyCLF5jj8PW5yui6IDo+OzEY9tMDh
eyGTVB5GB5NbG1fLWeJAGi+bLoqig1U6CA8Q/En6oVJ+LB2Mg+f3PzuBw707
anHvX9AhWosix7TCwfPLcu2bVDrw3tf+9uAkDqfH2mZT39BhxRU8f7M1Dhrm
Pufis+kglCf8c48NDjKhh549zqdD9sTP418IFiiQoEQX0+HMLZHunbY4TI2M
LoRX0OGmhcrDZIJpkiXqd0l0SN4iepnvFA6NZpEut+rpUHk/xtOF4KKQ04k3
G+lg/s37VTnB6Xk7G33a6GCq92xWyA6HR8OLfz2+08GmoDHQmuCA/1p2X+mh
w1f+GYV4gl2PvrrgRqMDs35qrpng47euJ50bpkOWU9bMX4L1cg1bHJh0WMO/
LL3DnsjvkCjvqQmiviX0y6YEi24Y1rKaokOYxQH6eYKXjhReNp+lQ8Jlodu+
BDODwlOOLNHBMtDgcAjB7FMql1/zMICBvmuFEuz8U5xPjp8Bz441mwcS3Bm1
9DJlJQO+LuyIuUrwsW2j2tKCDBAPnpyxJZhU2dL2XIgBM6Y7I/YRvPdU8ZUN
axkgk8cyFCc4m/uK/9k6BuxtMtg2Rpx/a1RE6noxBvy6D+r5BL/Y6qUTK0Hw
05UufgSLVNq3r5FkQHVoTvUugsNsja5GSTGgOP2M8TCRz/lJ5ZUCMgxYktb8
HUuwZ6RYWpgsAy4OOTRpEjwiv7iPT54B58v4WlqJen21ab72dzsDDLISLLhE
fU0mC1cFKzFAwWKi2ZfgyojU9LmdDPDclOr/k9DH+3LP7793MaBUWdCsg9CP
jI2dp7cmA3ZfOu6nQ/DTCRDkajEgn8rXGE/o7fYWUX22LgNkqTNzOoQep8vm
f1zSZ4B920BHCKFXd+uh66MGDOhsftBTcRwH2wdfMhiHGCB37IXnFkLvqhzb
NV0WDDjl8afmIdE/pTbmKPoEA+56RT8PIfrrUNVBXwNrBnjz39a7eAQHh9hd
fe/sGWBCFZjcdBiHKI3Vn/xcGVDufElWiuhfiaR/TkoXGXD7U3wAmejvdN4/
Yv2XGbC6Lz/T+QCxf8dQ0CFPIr+F43fv6+Ew5ldpJhbIgAK5pGNntHDwGShY
rg8mzvsp4Gy5JtGfh4kH0W0GbKHuMF2/m9hfMlF68D4DpPsoX9KJeXSo7Do7
N5YBgk3zs9bEPEv/uzXa4i0DhKPjFFb+R8R3UcqA9z0D+EKmznWI41DSum6q
8AMDKrqbIxJFcWhNWzotk8sA9UahN/xrie8z6lTGy4j4zT9v9+Yn4n0QhUW2
MWDFg4dvkifZMDYZGqLfwQCe8tGjXTgbvO38d//8zoD0xdhpIRYbIpVck+x6
GfDCdJ+D3TAbihv1ryiOMqDj13h8WBdxH6z7KVi3wIC061GmmtVs6KiKjjj6
lwGGPyRXSlWw4em17ava/jFgYcFq1VwJG8QaHfh7VwxCkP2qgVf5BIfX/+WK
DMJjX65A3Fs2rF9Mntq0bRCkxc3qeKPYIDx+uN/32CAI6j7euou4H5sTGA7z
FoNgbswhy5uy4ZFxcM/tE4MQEyZJFzZmw5o3eZ1RtoPwNGAuuXk/G4QcN7Wn
nRuEs55PT07tZIPgt5/1Tb6DMKJTmNxN3Ncr0MvcbSmDMP3UftOWShb06hub
0l8NwhaRZ0kVxSzILecwkl8Pgo56TvLxfBY4FB8QE3s/CF7GuzXPZLIg/zPd
j6dgELJBef26OBY4pWzTG6AMwpc7rRdGzrOgNPBTXeLvQaAaHHdz/MeE2Flr
x5N/BqHBmFbJnWOC642lmbXzg6DV+WNV0BQTRLwtdoQvD4Lw9tW3/UeZcOEy
N8p39RB0lgy6rmtigpjdHssTckPwo8zrel08E65qVfSsPjYEc9bGYXZbmUD6
+iO71GIIMgUm7MQ2MWGDx8/QSyeGQH2APVwvzgT0brtive0QDMkYaUuuJPyX
ZJzPHechiA0o0nAdH4eKebc1szeGwHI0Q/Ptx3FYg0QOjKQPwZ9yKU+myjh8
OuqSXv1nCFZlpfv7S4/BDC69fixxGHaZn/SI6B+GIusj/PHGI3BENvJ6jPwg
hJqGpxWOjcBJviirR3X9ID9g1p0RPgqbnzy1jlHtAj2dsHgpzTEISpPJv7Gu
Hc7Kts3zfhsD6+NrO5kLDTDTGDPkdXcclPYcHNupUAIvVjj5nVRggvOXlkO8
1BjivpXUbldkAiNzx1Vm1ENwq/06Y6nMhPTDJMVp8yjQuHfopoU6sb6sPH+r
Mwyo/5SCTAkfe0f3l0/v5E2YXfgdamDOBB7z16U1uhfRqV9RD3f6MeGE4u/V
UT3PkDit6A1fHRM2XuI5ck34I4oVDgkpaSDWOVoh3k8/IqH9xvbXMOI8b4QP
iW78hPhedKztbGWCfbT4M7mt2WjKihvwoYdYH51lee3OQV/rlSxPcJmQd0nB
2EE2Hz36/HIxVZoFfveEA+X4ipBgv0vnyc0s0MjvG4o3KEJhQjvzBbaw4HtY
tfr3oCIUfKn0ovd2Fth/S12dN1WE3OV/tBtrEOvkVbK99GJkmiCShR8m1tV+
tA7llqKVIXdtdL1ZYBiy+Y6iYiUq/MWZR74suCX/6a+0fSVyu2ifZuJPrOv3
jgxEVaI6y11s62AWxI/N57RyKlHY1oFQz3AWpHTVejnkVaEV1H2fMpJYYLNe
imetOvE+Ff/JK1LDgnu7v8RU8JJRQcSZ9/F1xOdv3C2LkSQjl6UG800UFsgm
rNU0USOjmtHU50rNLGietPx5xZ6M7pUeUzvUyQKX1xdngj+TEa/Te/sANgum
6Za/607WIJ4PTrlDYmwYlqu4XhdVixo4XZ5phI8W8tqUMZhaix5pWKmf3cgG
qUwyjZ5fiyRLD33+sZkNuh7f7UN7apE6RekTlfDZh3f51xzdUYfOjk5l5hiw
IRs/vlKwqg5tVb528aoRG/qUdG32tNUh5rXR7UrEHCmfXDgLg3XId7rr7euj
bEjROPtwfkU9iuavehNvQ8wN2wJ8xqwelclHvApyJ+bg6dR7a9rr0e0LPE46
HsR5Xq3IMhysR8YfAjdPX2dDXt7146d+1aOvGtdSPG6wocpHXHybaANiglWy
8x02yL95vfugZQP6z2lTokkiG1JL8ivi6xuQT3JujFgNG3waaPtCkymoZCk5
oqaODWkGqeSITApacnpw14fCBhO5MeRdQEER2xxvdBA+/vujKhk2RkEp2UKO
T4k5TcFunb42S0H11RdUxSaI/Myd211iTkVC8laKNVzCx7PkNbtOUdGJ+/pb
fAhfv7VHI6/bmYp6j4hLdBA+3mAfS+mOHxVNfiUtPuHD4U3rBs3zyVS0cXhT
k+hGHASdhdZ7MKjI8bBAPVkahwFfp5R3TCp6836q2nszDlSLSTL6SUWq17CC
9q041NJvDb3gwZDRjH/yE+LeU8rqIdNkMfTAziXeSIPwPXf4nRUUMdRcZhH7
i7g3U+6xso+pYejUbYV7VvtwwEsVz8F+DLkLdFwRJXx02mbP0ApbDOVeqXIl
E/d4rcMMR+Qshqabshy9iXs/MrJsm7ELhkLjQq3aCZ9QJFu4aO2JoXgpNd0n
hK8KyOKQVodjqCd44x6jMzj4W5gNX43GkCyNX+2XIw5e3c6TuY8xlPWmd4uV
Kw65LG7bQBKGqlQiBUU9iXVlzwPt2Rja+12y5akXDleavrydzcNQ3q33TyR8
CV+3aucSfxGG3rQ0SG8MwEGt9+XD1koMyfifoicF4dAVVdz0iIShBNmxjE0h
xLtoCYR312Eo8vpKNbl7xLvF4m6aShOGeDcm/EoPw+Gsd9vC3VYMBZEUirdG
4PBgoPRSdTuGPESNQfERDt8S1CJZXRg6+eWelVoiDgk2Ma6rhzHUdEbsv9wX
OKwL1m+KG8WQ8Yo3vRovCd9zJOvK8jiGdGzJrlrpOGy4c87pEYc4/98TSsVv
cNB5/bY6exJDOzMZHJ13OJxpTrry5Sdx/tl/N/Z/JHx2unKh7zSGEtMe61Vl
E/GV7nFS+4OhdaZy/wxycdDOb77UMkvE8zOnlpSPw/nfJzqt5zHEl2QQebAQ
h9gYlVzSAoaCjVrN64oJn6fZOSu+RNSP5ShqUobDqFZPkcVfDHk+nfhBqcBh
VXjTpMcyhsb1QpKPVuNgkH0yy+8fhpyHhc81kXCQb9zKPM/TiHofpmyzqMWh
L275izZvI7LWUmW21hPvMKMS0Z8EN/dXZJ+g4hD6QVXgCV8jMgk/5t3RiMMP
GYvkjfyNCKn1adu04EDx29D+gOB9ne4LP9pwkFrzJL+P4ILbC9V2HTgEFfcY
Sa5oRCo7ou/3fCfegQ2SkboEv22TMj3TRcTPdy/6IMGyAR+EB3pwCE9ztNQk
+PkW3XanfuIdYLzcL0jweoyawKDhIMfToNtA7B/tbe/gMkjow3T7NXeC+aWZ
siPDOHz5kxw0Q5z3Vs3N4QtjhH4NC69eInjGXSBrnEnsXyJsQiLi8xR/fu0K
jkP8oePreQhmVijuxieI/eV2tysS+TnvVjxz7ScOPN+CH2sR+esVNimfnMIh
WJP/pDKRX5uiH7e9ZnDQt/sot5LIv8mqGQG/BRySU1XmvIl6kXLCmmeWcIhW
FRflJ+qpayfx5OY/HNZba1sFE/VWzdojHbyCAz0hDFd5Qh/vTtTSllZxoDWQ
aWw5RfTX/MmM26s5sGtayd2N0JOomY/qPREODLVzXhkT+ksnr1ujJ8qB66W3
l2ksDGnofmb9EudA2PUUj7OEXo8rMTPPS3Ggd9D5Nc8QhgbSwsOlZDhwkv4x
cAcdQ9ckt7m1y3JghwIlcnc/hqJXOckbKXAgquKJL/cHhqRuL/6bU+RAwkCI
a0YH0d8zL2h5yhzgdJUU6LVhiDLy7eWWXRzgeru9EKdiaEXt0f949DjwL3rh
3fVSDD3TG58u0eeAo4RyERRiaGtB2LfrwAFFTCvgdy6GDF+jOLoxBy4qJxxe
9R5DIaHaa5AlBx563dzT+wxDwrMdLP+THLD7KSCJxWIoxdOLqm7Lge3htQIp
URgqd/wU/sqBA2LbqQaTtzH0Z788z+0LHPgc7XP08GUMhX+ppmlf5kBIyqF+
W2K+SaicrZpw58DrRv1eM2L+7ZF+HuToxQGzO6tMhywx5DUnPKMfzAH//udG
VG0MsQrnWItxHPiEN6cGL1FRgGoi9cszDvxar1vYPU1Fgm/3vL+aSLDEs3/S
E1Sk+MzTre8lB3LnFq9YDlCRi/cIrTyTAwaf5/gDK6moX+3rt8BKDix5puj2
3aCiNFw0hB8R+ffRfK3hQXz+g7ViDJkD7UviHtfdqIil0BWQ3sABq1x75w8n
qejPJtpmylcOVErJL69TpyJRIc4liVEOZHyEhwUMCjIZE1jKWTsB6+/+2pOh
TUGr3x59t289wZ9zcvR3UlDz+YfHa8QmoPyF3iayLAVZD4i8/iE5Ac2SZcvR
AhTk/H2DyZL8BOSt/eGm0N2Agmu2xR3dOwEHStzuBt5oQHmvQGHEaQLkvm0Q
Fnldj34H/RY4f34C3t6rTbj4rB7ttXuPD7hOgOfJhcfZ4fWoYt26L12XJ2B3
sO9aXvd61HCHZtTkMwEiM2MFLbvrUZ9LyLmCBxPg5DO9yFtdh1btqEi+kzMB
l68r7N2P1SLH3L2im5cnQNnG3Uk7h4yKHeZEvvJMAiegIKs7mYxEVpUL3+ef
BEVzLNI9goxIZw8IsgQnITtR1tHBmYy2Chn/KxSfhO9/+VOuiZLRmJvVhLny
JJh3GdV5eJGQp/Q17JbNJFgkc1ZxjavRnfDXd/s/TsJZ/dizjOJS9Jm5+aWI
ORcCg4V55b9/RJGp4c6041xQTFLjSl/9iNxOTmzPseJCXjamP8/7EclUVuZZ
2HEhrs4w323XBxT9+EzDIxcuRO+Yk+WPeo8u7036JRTIhQb6gSNI5y3aGiZh
KpDJBYuG/K/3hV+i5X231nZlcaGN+0sAtJNRz8RwR+YnLrgn9jFpjkkozu6L
o0k+F4YtalS+5jxH/3ae9A2v5EL6/cBTTyzjUX/741f837hQ/kz7d6b0Q1T6
YNb12w8uuJicbg+/EoXi959TzujmQo5i326z0gh07J164UEaFxZtFaKibcNQ
eUALdpfFBelAyb/assEoUU37sRWHC1GczLKc8pvIeyjFRp7LBYmCt+Uidn5I
yfwanTTNBeGg36e2y11FK3i/v42b5QIP7037YDs3xCja7+68wIU5oUnzALkz
qNI9Y5fGXy7c0dMxrZA7hp7LrZn5948LvTvvlf7/90X/A+1aNEA=
          "]]}, Annotation[#, "Charting`Private`Tag$656630#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$656630#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUW3k81O8TR0KSkOROJbmSSilk5AqpKEqFr5CQK0kKhZAQkpD72LWuRXIs
4XGF3Mc6cq5jWWdIbJF+n99f+3q/5pn3zLxnZvd5/thDls7X7zMxMDC4MDMw
/P9T7z6tq3rWWPXsa+1Eeq2ZKrOGoMuYgALQtL9JkfWV4XRybMJnAU2INWp7
APqX4XJbf2GigBEY/D5VVaF3F25Zb1RGCliDzm65AkGthzBy4rXGWwE3iJ2R
OtAm5wkp+68FBgv4Ayns71P+vmDwbIupv1nuD0wyJer78CFwM4DCdORuADR1
PpO+/TgUOH49evklIRBuCksqfNoTBh7kKI+Fg2/AdKW/6GVCBBi+H7S/KhEG
9qY4i8bC9+DL9vnYG4EoyDi8Wxg9+wjSl94FFbpEgQP59wOjgY/QHeA8O9QY
BT4iDHaHz8aB+A7ZHDn3D+AR+EvS7EccNPzFyZG7o4E3LAn+3UoAjp/RZw6G
foQILoHB6H9JUHzySbTO5EeoT9yZ4GSQDOYuNzYeKcVBqO+720YpyZC/uLes
nhYHLFut/5JFU+A6LUjFXisB5LntA7OLUyB25LlG8XYSCOeV2Sq3pMJF4du4
UeNk6JtjWQ2ZT4W5O4o72YjJwIO3eW+4Ow1EF55ZEY+nAENdrMw53TRwtjt7
lGE4BQbqPqzcqkqD+iB8bxQr5uf49L+zg2nAn8kbKHU6FWrZztj7/UqD6unV
6evBqYBTqJ/5TzodeKzzM/Hn0mCi8q+DwNt0sHklelvJOg14pSXCruDS4Uva
210d4WnQzM44RitPB+vxh/b06TRomJOVvT6dDiSGIcG3POlgGdFSI7qZDhxi
ei2HVNMh9E9t2bW9OCg2l5S9/CEdVD+QFIbP4ID9RczwWHU6MKexPTmrgwPz
RJa3bgvp4Hr6v8jV2zhgGZ5aTNTAQdMEM3eYJw7ubN5IOuWMA8HXekYOITjI
F6y72hiHA7H60HPZ2KfJ7dT85RUcLHv/G1QvxcGPISP2NEE8SJerHUN1OAg0
Z7t/QwMPpE7VdWIHDj5bOQuWROFhOSYjf5yKA73pw08eVOKhKjNz4egyDii2
fR3803goMkw0HPqNA06nCwGeihmQC0YWsbvxgF9eHpO1yIC+nYRnyfvwoPIY
pzQalAFehdxxfEJ46Pl160P4pwzgT/X0+3sID/Yeu5fVBjOA1Phk44YkHhg3
q/RWmQgQG6ZSIyCHh1hvV3y6DAGY3pXlXD2NBzkGCQZjIwII6wQEriri4avf
9zss3gSIS6KJ71TBg+nOt8WleAJcdxo1CwQ8rL5W47JrJ0DSNC+Huzoe3rCv
2QtuEODq8NIesiYexN4SvrYczIQFpgCtFG08lO69K+atkwnlnITYwUt4uBrJ
6Sn3KBPUq4eX/XTwQOWt7R37mAl8322UP2LYK+aJ/LvaTLj+G+xEMLxPUCpE
fT4TtG1EnPdi/tkJw9Sf+7JAr9xZy1kLD2oHI9TwKlmQ621FU8F070/ViL95
Pwt4MsdveajhwUl84xdrWBYE7Y6IOXQBD8yEbIOykizoJHTlnTuPh3gp8xz7
sSwIm2nIrFTAw6lcbhZhtmzYqr8SVXACD9/kvlq0yWfD0gCjP7c0Hiw+eXx5
cTsbug1VwihH8LB+WpZP3i8b1nr2tYmI4OFtyZjLeHY2WKibmn/bjwfx8+9b
InuyYdUlw2pyDx7Kv2hLaG5lgygCJoedeKBVE4cyruRA9g+1z99WcfBS495Z
E/cckHi6eDiZhgO+Bt53u5JzQHrLZXpyBAcaLZ7aDss5MKftq1/RgIPBKydS
RQRyIem7kL1BOQ5cOic22y/mguxoRpcREQdJvbqfTr7PBYtjHon573BwxuTv
7skvuWDN8TiO5RUOWgcLbKKmMNxQz9PxGAe/xw4Ib5whQlHtg47iGzgwmqMG
VgwQYSFYsGKKAwfzDh/HHRnzgHzgXmXX73Tw+6GvclA6D+QvyV45je1nwdrn
FV/PPEh4zDtjXJkOu//5ml4SzYcBi5tPJO6nQ6zdLXNZ7XzwMtSnK19NB3Gy
rAW3Uz5kLsppdZzF9jar32qoMh86jcRMH7GkQ1lWdHGpXAFUrN/h+pycBgz/
+Z7NVi8AjidWZg3+aaDN61CacLMADESUWE3t0qDnxcUy3xcFILz+YYPrZBos
3liouNxeAB6HJAify1NBYVf/BdWJAtCm2ostxKfC86qaKvn1Ajin6GyU65UK
rFIx1ftFP4HSHpe+BpVUOLR9sX7M8RP4HGE0eFaaAsaZMS2P9xRC1FBpFMeJ
ZEgw89O3OYRhv5875SeTYILHsc3kTCEkUPbPeUUngbO3escFs0KQbzt5I+5P
Iry5vtjNSiwEa9Vb5ANlCVC5pT4Yr/8ZtmbjnnRyxcFRwyVaXUgRZMo0wPfz
USD48pLSg9Qi0CGOquS1vwcuYkoIe2kR0B6kzvdZvoc/bDfkDCeKwMJ3puLE
m0jorC59PHquGKo5Dvy62R4Bz+V9t+nUYrDwWMd/eB4M7Xt5eeXUSoEyy/jj
G+9TeNp+HmLXyqBgPwe92uMV4pQrpn5jKwcD0qGzC+b+CPdWPnRTuBzUKpMv
l2sGoC79Y9/NtcrB5XlTncTe10imhffx0ehyKHjBnhyTFIzGGn9kFCp+AXk2
Vlm9rgh0qQbP2fa8AmLRKiE/OAaNih0q3g6rANtKlVKp1Rjk5pNwVz69Apuf
xW98t2NRKrzPfN9SASaiCSTVox/RZqWP+h3hSjAp/hz/tCQO5ZffdZ+prITl
YRamY+WJSFuwX1iguxIK7BhPBx5IQsPPrtfpTVeC2iQalnVLQrvO63LlcVbB
QFDJWW2ZZGRVejbb7b8q8AoPjJHXSUEHirhHGRkRkK0ZyDviUpFp6KbRFB+C
raPqrJ+/pqI0a2pLgywCf55U39HlVCS7v6wsxAQBr1qzHU4rDam7W3zYX4DA
elMktY6WhoKu6nHQv2L2kPIwWa501Cah8GpwCIGtrrYZi2I6yp1/RerYUQ3n
FvrkWV+lo7MJtzKiTlSDA7NjND8vDt0Oah0PUKoGUkeS8eRZHPJyuyjyVKsa
1vq3X/HexqEafZmo23ergU5oUMfH45D+321f0dfVwDXg/9VcAI+cZh9X7o2s
Bubjd8yVFfHoXS+NzpBYDa3ho9tuRnjUR+x2niysBtN7xet/QvHonnmGWeZo
Ndhe7RdVWMcjfz2hjx9nq8E/Xfv0EGcGyjgbQQ5eq4blaDOWfokMtMD5/LIj
ew1seYiKfDPKQJybS4Hm+2vA9NHB15X2GejkjFXtNbEa8Bd/vcXkk4Hc0ZXz
p87WAFvxZIh3Zgb6mFPrduRiDQx73/tZ8CUDVcQoFvDq14Ds1APGU+0ZiNHl
0LGNezXAXHNiUmAlA4mbRlvSHGqAXpwr+5KRgLR1did9f1oDzy+fYzvBTUCh
Yr94K95ifD3XPj6UI6A8DnsDYmwNaJ8qX1xXJqAu+mhIUnoNjDJsczfrENDa
1I3G8LwacO1PtJwyIiC+riYm37IacDC1uqhlQUDnKy+outbXAKXp/v4FewIy
zSp8ZtVRA026XJcH3AjoxYdjxUaDNVCoImm06wUBpfomLGtRa8Bar4fwIpCA
6h25ZRWXa0DNLLFWMYyApm8HPpDcxM4/fiGh8IGAdmlvpgmw1ILaVcqdx/EE
JHvKZZSduxZYNtMX1lII6KooVWBLqBZUlI45kfAE9Ij9jvGiRC3UIt2nlVkE
FLXeHjF6shb0DFzxO4gEVDKh0dqhUgs2pe/jg/MJqE/Hd+XtpVo49SXs4eVP
BLSeV8Wnf70WeFf69G4UYvXu31JmN6uFvNx9K6kYVvQ8f6/pQS0YPBYXUsSw
ybh7YKBrLbB/Fw/hwfw9LhXlaHrXwpKKC5sCxh9LXOlkCqoFI0v8f/G5BETa
d2K9OrIWkmhZljpYfgPPHIReJtaCazKRpoTlTx/LUruQWQvZZcfbXbH6+LVn
7m8W1kLT0MbajzgCOpcrHlJWWQtOu45rFkZh8XksC5421YK7k2Zm2Vssvkdy
75meWsjcybmPBdM3dnT4z8+RWqgXKvaM8SagMk1BsUJaLfjk1446Yv0ZzL6l
5fKzFmTzDqq+wfr3h+uDvdx2LRzmOJA6+x8BKY3sLc7eVwdLHutZz7B5uKNx
ZdBWtA5yfZ2fZWHz8jwr+J+EVB1w7M9MFsXmqfzJTr101Tq4eobp5XcujH9I
3fmebh2YKrO+PYjN45+LPlEHjeqgiRwVn7OcgZQ5N0fj7eqgnt6cHN2GzXfG
8uOoqDqQR4lf0IsMNMwh9/F6ch34NA6KXrDLQFuuD6u4susgM415iOlGBroA
02xvUR24WWas2IpnoKr+ocSAuTqoeCXclVOFR6MXBOo0ftVB7OcUTo90PNpO
v0ljZKgHUZPLtyNe45GqS9epF/vrQW3q8C3CFTxCbI2N7mr1cC7k5tzLLhyi
ODEvKlyuB7/JRIvKAhxi6L3I89O4HgaFZVcvh+OQWmqFqfPDelD6s9voPz0c
qj5fuPIguh60I8+XupHSUa19otDthXqYY1Bx5n+Shj7PPnxovl4PPBFpriT9
NISzVfpixfAV+Bm/ebYeSUMBNv13nHi/go7uIw6jzlSkY8kd90rlK5TcTvj9
+3Aq6rgdwJ8X+hWqN/l30MyT0bCO4/4dxxvA5YRZ+M+BWNTWqHyfTbEB1PJX
Xuyzi0VV2uzFey42AGm2/6oFPQYlaxKM+I0bgAYmf4J5Y5Cl2vj7494NYB0o
1emk8QHRFI15TNoagO1Ig0G/9zv0S+LCXqJjI/DvTn0m89MPqU6oNwZ7NEJE
mZm/bI8vCkzUeWn7qhHoiearQoU+iI/X6MeRj42QcphVvuO7FzrL+LAjrr4R
1BwZD6nlPUYeQ7HhQUJNwHB2JM25WB5tha/ttf7WBCSN8mv73f1A8/Kfxovk
JpBflNqlQHgFoSwMPgfHMHu+1VHNAX8Q8d69PLjWBGx7U/14lF6Dqv3hTkOx
b6DDSi823QyBl5oGEfD0G+Aqt2hiJZHA9DuHS+hoM8iPChcNjseDUJv6TzjR
DGLvN6qRTQIopH7vtT7fDJlllvf45xPgvi5rfN6VZhh42FPDu5oITR8tj6q7
NwNJs+xAGz0ZwpUElOwam6GpyNVycTUVMjkLhMO6miE2FC7wymPvtwntf4VD
zUDbbubvc0iD1WC3+q0fzZDSwqJ3hJoGN4c6rkbwt4D+3e5T+Z3pIOwVaFVq
1wJBOrwpP97h4YyBiPbw4xYwYtfYSWvE7v/iRZKML1qgKSZjn/lfPLxsHV/U
i2wByZc/hSpsMmBC+ILHaHkL1GcYLXCeJkBW5c/QnRytYDAqAxEFmVD7LthZ
mq8VeF9NWkeNZMLg/UPXr4m1QoXYBN/mrizg4Lx24KNCKyxcMy+btcgCF/Ps
VFmzVhDP4v9+kDUbzv6zKLmR1wpihhdlPp7OAf0r1X5apFbI3KNGtzDOAav4
g9cUa1uBUjSi/xy7h0cojs4I9mH+pjuvJ5TkwKzzXYGJv60QylS29kwuFxiq
yqk9rG1AcXm7N1svF/g4BAu/crcBfy419pBNLqhnDuhlHW2D3BVz+Ym4XOxe
aOzlcqUNzvl3fg/azIVCuWIdy1ttoIDnLenhJkKTF+9+o3ttEKtydMD0GBF+
8fcQFZ+0AcfjSdxRAyJwPDj1XOplGxS9cz1jZUWEw8XvtIXetIE/Mb1/8AkR
rhoajG0ntAGuN1PPLZYI1sn52NcSlk/b1uGoTCJ4LnJ6TBS0wVQ8s/BcKREi
lZ00yeVtoMajp/mkgQiZb9q4GurbQKesNE+BTISqftmR0vY28IpLdT02TgTy
0dCsrIE2cPjZlqO/SATGWj31twttYPvtyQ6ZHXnAz5XN+XK9DRYkWVwmOPJA
znzXkAtDO6gU7Ftq2p8Hmrm2BEv2dmj9erBgRCQP7vxpfGzE2w5q9QaLB4/m
gYvOMTVt0XbwOfF8PEwmD15HB3Kck2wHi17xNqmTeZA0RR2QOtUOskPRv36c
yYOiU1p4IZV20CEN4Sjn86DZB/doj3Y7DAu1Sm2q5AGlfYfqv2vtIFa9f0AV
8mBd2Ip95XY7dB7TYMtRy4M9D2v7JqzagaZbdwAu5oF42aF0smM7sB1dsf2D
2ZVYfZ0bnraDrbqQ1TDmb2BMUSb5YvxiIa5TF/LAJh3YskPaISI0lI1HOQ+8
VpLI8R+wfClu8daKefAetlPeJrdjeWZnDJ3Kg+y3Zo4vs9ohxSE72/14HlQP
VZx/9LkdTPR4jp85lgd9UsIsVpXtkHAJR+ITy4OFp57dRo3tIOl2bUSQPw+Y
GgaTtLvaoeLUWfmLe/NAgFfp4bmhdiCPF11+sxN7h1l+VJSmtkOso23H6h8i
aBfQdwj/wPxbFCy8fxDBdPtW557f7eBiejlTcpIIrvqlCf+YOiD0wslba71E
CIrjs1vh6AC3518PURqJkEx7cmaSrwN05C7VzpOI0Oqv0N4g3QGkqn1v7mHz
pbS3hendmQ7gfR4qoR6Azc/He4p31TqAdmqtS+AREV7lhaX8MO4A/Uhvf6IW
EZbPHe0ts+gAjhNlinZyRDCv+7LL/2EHqM0fMxTiw/gGaK78vlg+ucVWlhO5
kGn5kjAR0gEMrt3aGw3Yfi3uH86N7gDhBllrv+xcWGHU0LqY2wHLr78+9XTC
zsskHrDv7wD/p2+mNmdzgK/ktL7CBMbP0qCp1ZAD/mrNPtsLHdD5ZY0xMDUH
CrI33XQZO0Gt5kPFklEOhCDJ0RG+TqC8fSz4ID8bapnd6OrCndD5LoT7yats
oOsinsxDnaBglhbifTMbbMjGl1xlO7G6jin6/M4C9Vm/Ahb1TmhyWvU2O50F
z+Tamx9e6gRy/O/7Bv8yoeCxALVTH7P7JjBrNGeC6Ha+QPytTmB+rJUobZYJ
v3lG/E44dkJER0+U0FMCFKgoGpvEdoLtz7FxSy88zPj6OVcmdoLFBUGOunN4
EG1se3M4vRN8uv1jTq/hINTQumqB2AlBgUuHL9viwNbm3THfuk7IfD8s6KmV
Dgcj5n9nLWHxQ9VSTvWmQNW9l1mFPzuBVHM2rSUoBcxP77v9hd4J+gG9lVnK
KZDQp0RqZeqCCILJG3fVZOAXCXb/wdcFpJLbrFVfEoAnW/KnAnTBMvcm+dST
GNhZf38BhXcBRSwgy/vPa5jfGBvtle8GLkuZhEfGIajkQXit3tluUGO1y/Y5
9hb59Ktil6ZuMCjNMTf/E4b4ShMds7S7geL8hf2o4TvsfXV3y8u0G8jhpu2J
W1Eobq1PQDyoG6yrr+/YvpOAdFbajFzHuoGXQop8/AKP9t3zPjcz1Q0VJx7k
1qxg96VOWWHTuW6Isz7MWGOdgdwKQia1fnXDeKIiqUaXgJKddV0FdvfAhrLQ
n6t7s9D6Yn149dkeSLuvMJzpn4twc1+aOcN6YLP04gVer0/IKebaEfv3PXBE
sbs5IOcTUtSc9Pwa2wOc9rNXggc/oeZE9uNe6T1wiQ1kNRQL0YrB7fBZUg+Q
tv6bV5gvROV/F2Y0q3qA/O5q6zbfZ+Sf7aOWUtcDluuTfrrqnxE/c+bKzfYe
6OA3NjGJ+YxUS9dv1E/2QKsPD01IuQixWQfnHpztgbqcgYpcyyLUzSW603Op
B5Ael3zumyJ0316r5OTvHthlfIG82FuEQkWi+JM5yfBpVFBX5UExutl87NGf
fWTI1De5xBRcjA4+/fLNWIAMN/Usc8Vzi1Fh58RzDnHsvPPP90+WitH3VydH
np0ng1fCoCHbwxKUJv/1TK8q5u918O+joBLkMGISJq9JBgYP16Wj+BLEoOgD
M1fJEKfZnmQ1XIKaJ/fFqhuRYXs1ZoS2XoLeRxCWE2+TIf/qLst8rlIkMdee
amRNBnKmiNbGxVK0HG35J9+ODIz2ndJut0tRucb69d3OZNDTsbSWcilFVxJF
mGufkSE4Z9fi6fhSxKf3yVTkJRnqn221+OeXIsq6ZrGHPxlaF1NEd9aVIjcD
B5sT4WQ4KRGuHzJTilT//qsKjiKDOe+O2lB6KWLNfn9g+iMZdNejxorYSKjz
5jGXi8lkeNu28oSRn4TidnxpSsBh/Mf0b7lIkJB1wdVD9CwyCAra3vp3moTk
zCae3cgnQ4My4XKuGgnVlOySYS8nw0Szi9OtWyQUbJX46j4iw0LeBQPDeyRk
xHVyuLqeDEUfm0Mt7ElItLJeQbiZDOek1ZheuZIQzc7k7dMOMhRAbkTJMxIq
5FugdpMxfab3CP5+SUKedS9V5QbJwKJ5z08ngIQ0XfbFvBkjg8PznPy0NyTE
KUL4MTWF5RvOErzzLQmp3Xw1MjmL9e92qtqVcBJyDf+vZWKJDEbmv++UR5AQ
rkm5bPwnGeQ2PWQuvyOhPkZ+AoWO1XdDjWUbs7Mpr0WN/SVDLO74xS7MX8mt
02+UqRc4Eqin6zB+B2KuywhrL/ClDSl2B5NQ0nSQ+TBHLzQfu5O5FYjpefC+
/hB3L3AuBU+o+ZEQ0+2LSoN8vRCl+1Ir0YuEFCJFJL8L9YKF1blTXO4kZNPy
e/+AWC9EuOXvjnUioVjmvh39R3shc3vk7GkbEmq+ULjSK90L7ttfBSmmJLTl
HjZGPtEL20LPxRKvY/0osG/rUegFFfLRz7aXSMhiVvtL93kMJ+9Xu6hMQpGH
j2R1qfaCERc6e1SOhOrv/ovu1OiFPytNbPvESGg9asi/Q6cXJE33Se/iJiHJ
9lLX9iu9oPcVcbEwktAd1iiLtuu94LTn/Bm25VJU9UxfpcUUq392WJyvBZvf
Qknp5ntYfdZRC6KlpejwAjP/N5teCPVSn5dIK0WB5pU/G1x6oX1dPVXuCTbP
GnI5tf69MBF1g2WNsxS98GL/WPOmFxJS74a0rZagguLpwOowDL8ZL4jrLUG8
ksmWVbG9kCJI12CPLcHek1yC5bm9cEp3/+oBrhLEqb3AWvapFzRNFDsfzBcj
tZdNv0pLeiEuUcs65Wsxwq34dBVX98ILvIJzg3sxcuhbCfpE7gWuaeJ2TUsR
Strb7l7wvRcGfqranE4qQp062db5o73w/OkZo1fORUjhi6UakdYLDnaXpss4
i9BWcs9G5lYviLdqhljAZxRqV2yTIt4HNj3/Zt/bfkJzasSg3dJ9sMXiKTV9
+BO6xI/Pdj/RB2ky25ntQwWIqTFqSV+pD+wJa3pmugXombib++9rfaDfZdWZ
IJGH+jYfxlob9wHDCZGM//yJSKHHqrzjDmaP3RmuPJaLln1vbOPv90E9v13m
mdAcZDN2KvC6Zx8oRKrlr9dmovoS6cxKH8y//2yI1q5MdDjscLNkYB92z2Yg
JugT0IgKD+e/iD6gvXeUNm3GI6O4lQ85GX3g82/KZDE1DV00LsAzd2P4noZD
58sYlCSb2ejc3wcFzJKKozkf0NaOlNnB4T6odpc51tz1HpEKw49/mumDCPH3
3Kd3RyA5Ludis7+YP5vwSQFbHyTccvxriWQ/VPOhZLtLvvA87ejMITkM7xDr
vVUcAP3PRHa9Pd0PYiY9KVUngiFScs8VK9V+MJjqk9nGvYNdgQvkvUb9QLG5
0CTLHg/rajlTti/7wWLbcFbVhwAVuPn4p/79QHvbXnCvNBP82GRvBL7ph873
pWoqK1nA2Zlbk/6+HyRP8lsecMwFif/ykkYJ/bD2VYWVWFsAN70/mRh19sPA
uSf3vwmVQHFZaSscGoCKs0HOJ2eq4bkI/dVViQGoek+LNNerATXfc8pmMgNw
uPcR/6m8GmjVKct6fmYAhjskcpqf1sJUf3lgse4AFJpcYynhqQfe9Uo1GdcB
YLi7t2fPg0ZwO1VfxFc3AO2HjjdsBbSDjYJYyrumAfBantf6xdIBJme9Qjja
B0A94ixfQlAHKCspWDJ9H4DllgJPunYnMKnj9i4tDYCcfWXkVYMuCDf0t/8q
+B0K//4qCHftgWwXTTE31+9A2yHrEL7SD2N59SFdhwZhDS/QSx6kwKY9OV7q
+RA4SasleWvPg9FZs3dyL4cg8k+qW5vjPOQyTgee9h+CTNy5gAMf5sE8duPR
hbAhaLuk/DV2ch5qvgrqGKYNQaekcJumzwK8Fru35tE8BHimI+LzpYuwr29R
v0lwGC68M+UZ4FwGh1R39baDw7CZfk6v9tAy1Dv8U+wWH4Y95Zdvpissg/sO
7iPDcsNA/Bl+WPfOMnyXV/j9Q30YeuUUeETxy5Ac8hx/4OEw2F7QJNacWwGZ
i6zbNl+GgcClej365ip2n805NlA9DFTDPdce2a2CAq+BoW7DMPAsJ1xS8loF
lZlYnEzXMPxobTr/IXUVrr6Vvrw8PQwkq+ZQ2/lVcP1+JfYZzwhUfpamGHj+
hLJHUadC7UZAjcuc8X3wGqgOnTP96zQCE1rlP7/ErUGt5kiAk9sIXGZPLm3J
XoPmAxLfDV6OQCFj/FhS8xoMV5a+3P9hBErjBFf37PoFDOxDrUnVI/AxZ1h+
wucXXEo79ODTgVE4bqtfx3F3HRRiOSUahEchiTvY6bvNOoiFbU4NHhoFIz2F
uWDXdfjzrNeSWXYUbj9M/hb/Zh2Ihm/Mb6mNQoLdf88elazDPsYV47+2ozAV
0He4k30DGDZGeHmcRmHjE1gN8m7AwkJzj8TjUQjS4XvcKLoBDQM4QwPvUQj8
uRCie2oDnhWYXEl/NwqDIlM+c7c2YOy/ak3d8lGwziAFvk7cgFZj4g5zNArD
MveKP+E3gHQ5rta1fhSCqZs7K4kbEKnoppbQPgolX0uJ7pUboLVXUuXHxCiM
7F0Jfzy0Aad27t/cQRuFTPH/NHETGyC6yVjOv4jFd7S4Xzy7AfTpIUX1jVH4
U3Dxo8fGBuRUhZ/+sHsMwsaX3vlw0yG2yGs1i2sM3LTGHhUeoIN/tt2nqv1j
cM3lpFi9CB3MozVO0A6OwaFaanKgFB24nTaklRXGYNfK1KVAoMO21dTstfNj
EMeZVlSkSYe5212Z1qpj4IIzsqvVpUO9Vo5EmM4YsAeHO3neoMNTkf8Oj5uO
QYOW3W3L+3SwNJC/OXxvDNqWHKludnS4+ooxuN9mDOxN/T48cKSDxGz6SpvL
GAxVf1NYdKMDj/CTo9+ejMHCPxNOHw86/L2qfbv++RjQJwsoq550IBfRqsv9
x0A80VrHw48O1TNla8VvxoASt9kcHECHHMEQyU9hYyBK7hLzDqKDn8/xCELs
GDD2ZYkzhtHB6fN2XVriGMRsfauNjKDD7emOjcS0MThnbMPL/J4O8vqu/0Xl
jsFh3islATF0EH6p8T780xiokxJ+f/hIB9ZC3sbgkjHYr/S4LyCeDqtT1D8B
X8ZAXlzlknEiHUYPlMr5Vo9B5vVqbeZkOjTrBVl6fR0DCxaJzsgUOhR7345+
2jwGi+vLowxpdEgpkG527RgDBSsm56vpdAid3PzrSB6DWLGPXp44OnjwtZ20
+z4G1ExD5iA8Hax0k+5bj45Bs4TEDrcMTE8v54//TY4Bp6+TOxDooJSv1naH
NgbW1pS7cxiWmOBmvLk4Bv2Xwz+5ZWL93T+pYLg6Bj9eLzwZxfDWpSJb/Y0x
cNJsJBzLogPteUDCpa0xqArV1zbA8NxNGdtUBgosXWU1NMGwxfI+poM7KPDE
jNIIGO57sxWfsJMCHs6iOSwYvnyEekaQjQJtB202czH+6oq2jhh2CiTMlZWd
wvDZmyV2+/dgWOr5TAyWX+6PpB3v91Jg5977gcNYPYffvE7k4qEAX3J0LAOG
Yw+7KIbxUuBGZpAYM1Y/Z4VJ1+4DFDAp5zk0g+nlb3zx4RsBCpgK2SdmYXr+
XpLaySpMAYOKQx8vp2L9DuJJ9helQJ6MNH8b1o+pQ5vnmA5RYDGwS1QuiQ6d
Rq0Of49SYIHC1hcWRwftpSIWT0kKvL7G9i4slg4VrxNT6NIUkLIKoDlG04FQ
7kT+eQLj2/s9oOUdNh9Gt5wenaLAcjLbd91wOkQuAtsPBQqkRT6YJITS4YUY
t8rceQoYHbdS2fGaDmtlv3sfqFBADSCewZ8O9jcmnKmqFHC//K1rxIcOxoGf
0ykaWD615nOKz+kgu2C8u/8KBTivbww/fEgHkpE+CjagwAcBHleuB3TQqFR/
rHqDAinkgIhwSzrcCTsxhDehgM61xQyR23R4I78rx82KAt3HXHZ4YvvL+/Gf
uaQNBX4ERWT9UsXmj3GdZ9iWAttiBRaXz2P83RPPNZyweCb/rgYdp8O0W4Ue
zzMKFGwaW+rx0sF1pHD7qycFVhj96pL3YPuplVX47AUF7Mv0hztZMP4D0YLj
ryjgqiT4roG+ARplznP5YRQgvn6YyYR9n6X8PRx8BUeBlgdMQuTYDZC1EVBl
JFBgrWgILYdvQGn73tWiLAr0rwXXzQVuQHvy1m3hfAoonRW999RtA/5e7JOa
L6PAK+v8e+tXNuBO4JtvQR0UCNTk1sv8sw7TSy+9VbopcI6uy5L9Yx0e3XI/
uUzG9J6/oxQytQ5BklYfb2G/4xcrGZMX2tahpFnFToJKgaiXP1+dSMZ+D/Yu
s9X/webD9uDNAeV16K4Mfq37lwI2hbibtSfWIdLhKEvHPwqo99PkIo+sA0/z
nR2DzOPwxaHm5yQ7hgO+/v3BOQ4q1mllNwZ+Addm3KrQkXEIc1928nf6BRwz
WsOPL49D4OjVrPNv1qD1A+XO7yvjUB+SOn3s+RqEanp+f2EwDqsPJykMD9dg
d1pB3xvjcUiZuEt6rL8G7GZCXcn/jUNQ19vP9zjXgK1n+WvL43E4aHXCLyDs
JzCj+PwjCdj5M8xHZXxXYVBFU2csaRyoBy8duu60CvnlC5S41HGYdbIbt7m7
CndKLvDwEMbh2tqr9DtnVuETccyNoXAcSi26fz6irYB5whGlkcZxUL/wwj76
8gqQnuXUR/8ch0dHA/xcWZfhocKX77suT4BJoFiYdOMc5OhaplStT8CpWT8h
AzsKKMgeUoXfEwB/aBZ3NSlQxUkZQpsTYJCoddTzIAU6e8wO1DBMwhnp702r
OWOwZnY7rI59Eq6GKzquvh4FVVcDrybRSSjIT2Z6pzMMnXGqJt3ak8Bd8coQ
lvvhtvffX9d1J2HA99D8+9x+mPiv4n3P5UkgK+ENjthh91RxpQ6yAeZfT3qy
NtEHAvlntPvvTMJwm1WmI/ZusayTVRh2moTj+1QPinf3wK95Qa7p6EkIIp8x
MJrvgKjEmcaEj5PQVGngaGffAaevFb28kTAJHNLWZMm5dnhUeOVHdeokuLYM
cWTPt8Gih097fO4kqEU7aLavtwB153SoYe0kxF5Labwh1wS9Bz/tqlycBPFz
5lOGx2rArcu75vHyJCh0vViUrKyGfa/0nkn/nATBrQPnq29Ug+H0JC2GPgn+
50KnLFkQtOXyNbnumIKCySB9474v8PW8V6CkwBQkjDVDIiqG4huXdkRpTgH/
AZ4e96d4CLpMChC+NAVqO+UmRC7hwFRDig2vOwXVrgXcPgLpwHR6956Sq1Mw
sOR7270hBa7ydPANmEyBvNaAqIlfLNA6b0oLO2Ln2b2mlNu84UtTYy7OGcP1
2jajhCcQVn3uxHHXKWDIu5/+Vv4hKBQIKqg+xXCaQrf8cXXkGz56wcIXw94Z
R5+/8EGCV20McR+mwAUueL6LiUaLWv09srGYPfrfpINeLKq+oHOzOG4KUnz4
Z5c2PiKb49J3G5KxePOXTX6oJ6LPHEvWtKwpiDAU6o9oTUWBzP/NuOROQdMP
3zxSRBq6s9Vh9zsPq9ch+8qF6+mIYeGTE3sRxreVomPZhkP6LU88ZKumQPxM
6og6joAO1k3/KaqeAp+CxnseNzLRavkt7wt1mJ5eh2/zMWShj9nn/a42YXo0
cwpEGmaj6Td/Q1y6p0DsvOyv0t5c9FInILloGsunpfCGZGEB6ja3NZWfnYI1
9ZDdYmsFSPzJZYHceSy+9bjQjMIn1JzK/T59eQoymyTVZwo/Id7NxMDIP1Mg
qXZMvzWlENlw+2pw/p0Ch/hjN+9+L0Rlx6wZgv9NQVGAFnst12dkbiT93JeZ
Cj7dud8FvT6jTGKJowsnFSxuxWcJaBWhP3UfpRe4qKB9KcY3wK0IXRn0mnmw
jwpJ+mZS3WlFaJVF495//FSgpEuX8mwVIRWLDqOrh6nAll0qeiO1GIW5F3I3
i1NB7wdL4UxjMRoP/dCudYwKrpdvMj5YLEaBZXd1LshSofM4nVHmTAnq5KEp
y56lgqx9/MPF0hJ0WKqFTjhHBXfFkeyt3hL0BPKKjyhToVWqVo/xZwkSdHA7
IaRGhTtHLU4tS5UiB79bC9HqVBCPjNYY0ShFKFYpi0eLCoO0uzpfTUuR9VeG
I+x6VIhuyhwKCSlFJUOTYwH6VNDP37jkmFqKdq02JDBeo0IVk7HVtZJSlCf6
lu/3DSqwn4r2FhopRQxnXHrcblKBYSjGke1HKbpx+UbEsgnGd5C8tPmvFNGf
CrDTzLB62AtTtkRJSC9sq8HKAqvnXBeZ4zgJJeLGXo1ZUuGqG1+qlBIJLZfX
qt29T4UmkepQI20SUu/C/+17QAW6z8lD4YYkFDUTVH7dngoDG3Ozg3dJaObv
w6ftDlQQZvVzO3+fhJR4rynoOVMh4/FHg1xHEgqVPrXy9REV1oy/7z3zhIRG
1fbnXXSjgsqxGa1eTxI6eYtuX+lOBdsWs6AwXxLydxw6dv4ZFZw+fHWyDCSh
vldVU0WeVLiuGxp5PZiEpOJSU+VfYPH5/4ZZvCUhrwJ/81wfKkwlnGMMCyeh
9oYHQpKvqFDQIhs0HEFCh0b0BtIDqBA4F1p/5R0JBdcq5xsHYfEPPTvdidlX
CbKBrCFUsKYdEbiO+d95K2JW9pYKqlu1Eb2hJFTryqnwMIIKDm1dpaZvSEja
5B+7yHsqlOjvzJv1J6H3F5bH2z9g9nz48OIlCW0dHif5xFJB/rT/O5FnJGTN
1h1+Kp4K24NzTU2PSKh1sdZmKhGbH5koKz87EjrT8/lCdAoVBMcTQvQtSCiJ
hOPVSadCBZ7bUeomCbEkfZj/jcfyrZs4I3SZhJxeBdbmZFKBuat/vziQUL/t
049mOVQQs3qlqn2KhDJP375UU0CF04a/zo3tJyEuAT3Rx5+pwFdp636HhYSe
bSv9Ei/B+i1C7tn4VYr0vgmnB32hwuHLxv2p3aWoMG/Pc6UqLL6h369CVIoE
o7YNFqqx+WWtPPIjpxTNm1O2rzVQwQZ156/4liIjza5exm9UWKhJj6h4WIoq
pGpzP7dQIb7K+PUXo1IUupZ+50AXpsf8o2/m4qVILvhByegQFd4OM1k+Ly9B
0c4mbyNGqbB0jZx9NKkE/TPStVYfp8Lohz16B3yx/Tsow5MxTYWo/m8VfZol
6FHxkqPjChVYnHVWWOqLURHlydEtlmlY5EGap9KLkHCDzRZx1zR46U+N3/Iq
QgE5t3r+45iGZYn9ZJpREbrpft63jnsajBJ2MNxkLkIbu/8OBwtPQ3Aqu2OS
6WekpOgfJXBqGp7N2iYsrX1CfZYCZxMVpkFIvUuU/dsn9Dgsr19McRoMTo9d
qU/4hHKpA4KSKtOg8zNZUljjExKNOp56VnsaqivPL70NKUBMK33EG3emweG3
zBd5wTzUki3V+NYPs1ec5jiICMhUtOM3Y880+AiX0wgRUYhTwLX4S+80sFXu
OVCLf49q9u1/9GRgGjrrZWIEvkQiiV13abQRLN7rvv3J0xHox8/pvg7aNKSY
JHLmvQpGft+2PyduT4OaiDJb8gUPlOkm53ReegbUhuIOPDr0Eu44d0n9lJ2B
akLUjg/KvrDH3o2aewLDnqdd1af8wPW/clOxM9j5KzL3xuUCQVlP+zKr2gyI
ZfzOWyKEQvtBc8le4xkwWZLuI4dHwa/mtxMuvjPgcurozfIfyTC8u9d269UM
eCg5Bnlrp0CtvvCP14EzoO/y7KBFVApEtGdvJoXMQKjyPJl6PBWkuxt52z7M
gJeLSuO3W2lg/p3xklT2DJC7XoxUBOBAU1C3rSh3BmR1ZA73NeJA5m7EDbX8
GVgOUt0tvAsP9GFRi1tFWHx5y6tSb/AQSVF+FlA1A+e2lzJlXmZAw8yTnPFu
rB7+nP3rFzMhV7LypGMvxm9nNGHhngnv7ZhJ9H7sPJ3FdjYrEyzmI+v3jsyA
eLd1qwFnFvxZyh+5MIP5u3Dl2rRmAeXEhtW32Rkoakz5mvs7CxpdVOeMFjA9
+jySd0tkQ9Rq6/rDlRnIFX0axe2VDSfWZ/fGbWJ67LyydlIkB/gUT0Yf3Z6B
zLXm6yc1cmDrqYfwJwYa+G9XCmnb5kDzbxappp00sP2+vzIvPwcKlK7m32Cj
gcdoxB6m7hyI8fxwZoydBsMH8SS7nzlg/feI+vpeGtCfshs/OZ0LeqoPm3x5
aJDC5L7Cfz0XTr4svLpnPw0qnmSodjrnwjbDxbvigjSIamB9/SwzF2KZzd2u
i2P82eEuxZxE2LY6cKZLggYuQXZpfkeJYF3X+euaFA28tK+HOigTQd5P4+kV
ORosJJ6firYmQvT4lmKrPA3YruuE9T8lwpZaCV3vNIaVPW3PBBOh6Z/kc51z
NBD/vctKN5cIcv9NKDUq0cCk8tjCvy9EiKqK39S6QIOi5XF3cjMR/ogYV9QD
Fm/DUqtxgAgW3pzeGuo0wElfTR6gEqFhuPFCrSYNDPLLuthWiSCr4rutdokG
XGckT5j8JUJkvBJCulj9aX57G1nzYOPPz5eq+lh9qdydxtx5YHqHqFZ5lQY+
/E97mAXzoLbMhlHFkAZTYQRf8qE8kBQQqy2/gen7ePLSV8k8CPP47nf+JsZ/
vSC2Xy4P1vojNUgmNNBZ7JrfrZAHdxT1mRXv0kBfW6PK8lweVEfv/FpsRoOE
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
hf//u/kP2kovew==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$656630#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.2032550026233523, 1.541343990819708}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}]}], 
       RowBox[{
         RowBox[{"bk", "(", 
           RowBox[{"x", ",", "4", ",", "x01", ",", "\[Delta]1"}], ")"}], "+", 
         RowBox[{"b5", " ", 
           RowBox[{"sin", "(", 
             RowBox[{"5", " ", "\[Pi]", " ", "x"}], ")"}]}], "+", 
         RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"n", "=", "6"}], "10"], 
           RowBox[{"2", " ", 
             RowBox[{"sin", "(", 
               RowBox[{"n", " ", "\[Pi]", " ", "x01"}], ")"}], " ", 
             RowBox[{"(", 
               RowBox[{
                 FractionBox[
                  RowBox[{"4", " ", "\[Delta]1", " ", 
                    RowBox[{"cos", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}]}], 
                  RowBox[{"\[Pi]", "-", 
                    RowBox[{"4", " ", 
                    SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
                    SuperscriptBox["\[Delta]1", "2"]}]}]], "+", 
                 FractionBox[
                  RowBox[{"sin", "(", 
                    RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]1"}], ")"}], 
                  RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], " ", 
             RowBox[{"sin", "(", 
               RowBox[{"\[Pi]", " ", "n", " ", "x"}], ")"}]}]}]}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.761144141994855*^9, 3.7611457844931498`*^9, 
  3.7611465769979897`*^9, 3.7615837205569696`*^9, 3.761596050245183*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"41d9ac69-9de4-4dfe-afc7-2d354f64f138"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["delta = 1/100", "Subsubsection",
 CellChangeTimes->{{3.7611442262145195`*^9, 
  3.761144232296647*^9}},ExpressionUUID->"9bc8da92-f94b-489f-a44f-\
5bf07b9db9b9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, 
   3.761144293485469*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"a230f1b8-85c2-42fc-b0e7-3f66c1134c04"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611444170292478`*^9, 3.7611444236934347`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"bd24bfa9-3ba9-49b9-96e0-4de7b8c87528"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
/+8D/wMd2Az0
          "]]}, Annotation[#, "Charting`Private`Tag$5562#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
srHW0w==
          "]]}, Annotation[#, "Charting`Private`Tag$5562#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wO8ch/Xuy0wwF1wDV5ZSoP/ohvT3q0xYSHnPZFZQ0KXsknr5OhNTa6x+BdWT
/mCWYnuLibzHr1PdBygouN1ySvo2EyMzj8wDhynwaNwvORDMxN0MKT7/cQoW
j+xKOhbBRK3ayfN6nyiQsF6bYJDAxFuurKLPHFQMZlIsuJKZcLjtL3WVm4r7
H1esrKYxEf/PyuP9MiqULnNQNDKZ8DK1GfYVpUL/5sdYxSdMrOKWvTC9ngq3
lMIo0RomfsXXp5/SoeLZn5TQmjomSncFW+Xsp+KPdUiAWyMTdf3VcQwDKkLl
ra73tDFxOeuxtbwJFalP+K3i+pk4u0f+7OuTVDAE507oDTAxU7u3lHKGik3X
GKZfB5l4yJL13W9NRdHOcn3zUSZuLvls4eJARX3VOUXRWSa833ZJsFyo4Jcz
21TDZuINe333uqtUmN7WknX7ysRqzu7vOteoGDgoJt7zkwlzM39P0+tUyOT9
WxE4z8QyGaJ3nxcVjsuZvKp/mTDmGkiSvEHFp67qhdglLIz3F5xKvUmFmtqT
H7rcLKRLCFvs96PCm5rI/sLLwhNe2rO3/lRwnb4yZraChUoVgeKOQCoMK099
4BRmIfH84qEdQVRErzvQTxdlYYPh3kN+wVSsHlvbKrKaBR+fXX6ToVRYHeCt
f7WGhQU7lxLOO2Q9Hn6tuibNwl/pfnP+cComlw2Vy8my0Gbec4ozggpFl+bi
7vWk//iG5gmSr3WUPAnYyMKc3ZYHFZFUlCln5KgosLBe0XfiZhRZj7iIDMZW
FoqNzShK0VTo/vBMiVVi4cgyvfw2kkMs7Sm6yizExP5SOX2XirbnJtFfVFng
+bdV/g3JIlIaYZk7WZg/khqgE0PFCb8NgWZ7WDjpLHUkmWTaiNBNzr0suMiE
3RkheURv4Tp9HwsVa5vVJWKp2Jg9cdVOh4Xcb32mmiRf4u25KLKfhe1SxUPG
JBdefOnw6gALNOblYROSv7fmWl0zJP3Hbzq+j2TN7RRLOSMWNm7m0V5Lsn+M
v1m3CQv3KfvTJkl/dV8vGQWYkvl5sN7zPsn8FicOqBxjYcnctwYjko8+0wXD
ggXFpSvjxsh4KJJKGrEnWVCQ/vz2Isnv/lutpnuGhX2Of1KHyHysG+JS+mJF
xtf5cliXZAcd9qZMWxaCNtbfjyfzmXt/QNbMgczv38LJXjLfs0sb1nA6kfFU
KBQtIVn1PF2cfoGFK5ETf2XI+rzcFsYncoWFzbJHlDeR9d31elV7nCsLBike
DuvDSH3ffBgr7k7Wn1/8vBCph/vtDWtWe7PQU7xh4gWpHynPE8PJPixI+DEc
/7tNBXXdxIO1viycO1dQsY3UW9hVbiWZQBbC6m58tSb1yLma+iUjiIWOT8Jv
Gb5U+FRvKFsfyoJ44jTNgtTzZRF9bIpkISVpvl6I1Lv500AzpQQWWujfBjrI
fmk9IypRmMTCn1ePp9+S/aS/9P6AMo2FeJ2+id7LVOy2eOWgnsHCaMDh0tSL
5Pt+Ll7fm8dCFuE5esOWioT0u5ovn7CQNLMjS4DsXyFDmUXtQlJ/iZ+cosn+
XpKsHaZXQrLDf7+dTpD61vRNOVTFwinj4RRHIypsx5bbtFazcPNg9BM/Q7J/
I1LlTWpZYBvvfn3nAKnPwRdPTJtYKArLdnUHFcV+81WWPSy4GR3YTlGl4maN
19i5CRaat3BYC0pQ8eMSb+7kFAt1Xsqqe8l5dkUs0eUiiwWbVRYmpwSpsHMs
++HymbxfgtPpIg8VBjw/eD3myX7OpwS8+0GByGE3xUDBGVj9iwz+001Bxish
AU2RGYyHFAS9baNAWSN/+ovYDOL9XG48aKTgiMJUjp3kDCKnvljyvCT3AY+1
nO6GGUg3mN3geEjB0tpDEhyaM6jSEvzV4kVBvObk92daM2hSXNWcdI3cN8VB
vVcxg4fzeycsnCnQySRihvXJ+14qSqVZU+Drv1OAODqDFdw5Uuf1KZjbK8fh
d24G0eeEm0aWUxD8tGpo54UZTF0VVM7hpkB829mXs5dmEMWx9OCZf/FQW5Po
Y+U6A+OxnakUdjxcfy3/ofXfDIpfzaXpd8djuuTX9ELMDFYWqvBmxMZjUKmr
90blDPQHF9568sQjnSXiy0XMYKnyr8nBv+T+fnRsU9Qr0v+p43d2kvt6ekO/
d0bDDLy0be9Vkft8bu2QdGPXDML8xeqUq+Mgwj9zXvzjDIKzTb6meMbBYIL3
T8GKWWyYUyWevYtFURo2jFvPYuDNB9tSnxh88/nGa2c3C3WH59zqV2Owy/Ih
64PDLDTT9eMfOsTghZDQ0/4Ls7BRyAq7bByDhltDuq1us+BJTiKuS8fgvb2v
TXHILIZrCMm/PnfBs/lFyq2CWYwEqnw8yYqCVeEuEel/szgsrbKtOSYct4Iz
AwbzPiGd6mH/xi4Q+VPSNEFjNpbOdyQpvXNH2L1g26EjbLRu/lK9NcIdjuaz
GwvM2FjeTdFetc8dUpWVRSaWbMyKbzpAZLgh/O6Zhkh7NhyPJ7Sbn7+GC7uS
v/DfYOMk53hj0NhlrA8SN+TNYaNs664dOxcc8G/PzRX9uWwcH1P5xXfWAe9m
x3pyHrOhl2qk21ZpjxjLp1YGdDYEdn12k/ezw+JWc/fgSjaKmm7ZGnBYY7D7
bhpXLxuyn7SVq7iOozzkp0NvHxtxxZ+1+mrNQdlrs+XBWzZUz/AbD942g1H2
9hK9ITZWMv0u+PIeQYV3e3PANHk/xybuj9z6SFDaeddshg2eLNHPR4J1cW00
9bgcm3z/uZl3x5ZpQ8HYZbj6Oxvz554YevGoYynn66yYn2z01wtFDCzbjpHS
vZds59n46iEz84RnAyovPdih/JeNEz/MbwzyiCNRRuDH4iIb0vo0+yuBatr/
A9M8mtc=
          "]]}, Annotation[#, "Charting`Private`Tag$5562#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
AM04r+yM9xHon4k8+CH5A5z0bl6M+2eJwBUVBcM5ZLyBR4JFwm78teQ5u6Sa
jF9tPz/QaE7M9d8fNRn6AF3mjNpktwcxPjs40KnchlAvvrNepwOIyjPRdBP1
NmwsCAzaIRxI3OrWoRJabah+0vP+QH0gIVqVfv6hQRv4lkYsCxQKIvR8jy/4
nWhDYeLJWpGyECLlZ5eYTGgb+l5MOS9pDyeMpt4e9h5swyOR+pPlzbHEamf/
3ayRNmxRUa6PEI4jBloVJE58bUOn+Z2iZfZxhE9J+OcD023IKVy7a+RbHJHp
ZewttrIdIUZif5REEogZTlM0Tb0dtdXu/F1GFCL3a+1r/qh2yHcYsNPcUglP
ioW0e1w7FPfCSZqaSmjof/7veVI7qvQPGRl9TiVep6/Y4ZfTDike/XKPE2nE
lOWx6C/V7eiTTOoTN0kndKpmrJs+t4PXrilzVDiT4HUNK9zwpR0HRNZt1jHJ
JNoEpZb8N9GO6pkSF5WATOKU+4HKnfPt4LY9GMrhZBIRkvHrMvk7oFhSqG7j
nEX03t7Zf21PBwYPWYXEKGQT95Wf7+rU6cCZ/j9JwgeyCY9+2yhl/Q54PnEN
crbPJrg0boFl3oGaStfiU5HZhOzXd9mHXTtglP1iYsl4NuFj6XFaKboDD03v
TaSm3Sf4JfMnR0Y6YGjQt2ugJ4fQPXK7//OXDmg1EdOlX3II72jHN8MTHSg7
vczM9lcO0bVoXf7QXAeizipWS6zPJTKYoQ59fJ1oUCg9GGSXSyiWuL9tV+uE
qoB21NvWXMLpi0Ft255O7FtjKPd6IJeI3Sz98INOJ5aqiFkms3OJmfhPQe+N
OhErfNCieFke0XDNVPvNiU74FG45UKOVR5jtV3xED+pEr2hunnlqHnHDb0Vy
491OeGRvtr1MzSNKKpghtKhOfI6JeetZmkeIyGW6NCR1YvrnX9GPL/KIPj5B
8ZrCTuDH9KvYyTyC34C97GlpJ0SeCuy2nM8jdG++nK6q7ETJaF/KEDeVyJ26
9aGC1omF8oXj19dQCY+uqdDSjk54L9zNj91NJTIE3vmW9HYiPf1N/JgulWg1
KnAtHugk9xtRJWRMJdRqXXQfj3Ui71Hls35bKrGQ2T77YKET3AXdix18qYRi
b/Fo/qIuvMuaLjT3pxJOwhHt1KVdqL7U8kk4iEo0BekX5wp24UqN8Oyae1Qi
4mzF6SyZLhSYT5zhfUglvuo+Dl0p3wX9B/1v+IqphOG6vAJfpS7MPVQx7y+n
EtzN8ROmml24O2LwbZggz8+IEKxGF4Q7xneue04lGi4HqUgf6MLg1cZOsddU
4pqMj++8RRdqlmqFB7ZTia7f55JcbbpQoqzf+KWb5NN+sua9HVnPDqP7kn1U
4luA9d+8U11oNLxUOv6ZSpgfO7hR6Bx5//jVpSEsKvFIeb+e34UuGPOqH+Z8
pRKnB1VCrP7rQt/sd3npKZJfpfyD+lsk3zX6/VM/qMTmqM2v5UK6MNUx8TFy
hkrcOiXOjgvvgusKhz2zc1SiX1uY/19MFzgdxvyKv6mEpsgKZffELmScqvJS
+UMlksYXWXWmdqGyee4Szz8qMUOfv6Sb3YUDDwp35nLlE4dTphIeUbvAI9lA
CHHnE2UXv1SJFnZhzN11l9nifELAmNEbUErGt2wuOMKTT3hs7P3NriT7p/5y
l+KSfOL1bKukbV0XTDZ4fWsnsdz7l3jWSPLV9f9uuDSfCKHSnBWbu+DmmHM4
jMQj/tW3k1u64LmyXymVxPtsSvJ42sj80xfSr5M4Q+FBs1c32d8RTqUciRcW
Z3352EfqKaScmEeeb/eJstJguAsp5sdtpsh6qsuid5SyutCT1M/PR2LRsDsW
EpwuLDP07J8m+VxyvnnxzvcuFL5Z1Ve0KJ9o3X0l7vtsF+QuL5HVIPkrCnpV
2P/pQsIOVlfUX9JPrNPdL7m7YaEZuaJygfRTg8O8Km83Rn6J9Rf+ohJGiUfW
Z67qxv38WfdLZP/zzpvvXbG6G9yCPa3LSX24Dxg4Xl7XDWnb8u0XSP2cJHQC
hiS7oVfZkkT9RiUk3ux4XinXDR4bkY1BpP7X729hbVLsxsu/Mr7bSX90X5Nc
HqnajVhetSM5pH9i5VaZndTphpWUkNKS//vrH4/Xu/3d2B08cWqS9J9590LM
HuNuxPuO3S8g/bk8hN0hcLgbOS0HiuJJ/562H5m5fqwbIi/6656R/m5S61vH
dOjGu5Ffh5popJ8+vzlRd7Yb6tmicZqVpD90H4243ezG18lq0X8ZVKIudzz1
SlA3jiuFrpZPphKBvArWIXe70fZJ0G9HHJXgby1szInrxj2b6kUNIVRC1rEo
YyC/GzJD3DzLPagEmz5hwynshu7ZkYBfrlSiTFZp1UJpN5zijK2f21MJnYni
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
e3eciYqr3TbXrZKJw18UzPdPkPoJHRWzsU0mqge8n1f+YCLXZreY68lkwr13
TcCFGSYMDN3MktySCcmOam35eZL/k5XT8eeTicBXf5+k/2UiqV8zjuWbTKg1
ZXsdXcSCzrRC8N7/kglWg/52IR4WtLc6Mo7fTCZSnrKYr5eywP8ph6p3O5kw
LQ+7H7ScBbahbsdUSDLxt2iHgw4fC6Zn2GfPhiUTJQ9bxeb4WdjNajvzMDKZ
WJMpeu+cCAu+E+qZgXHJxMvkp6Zb1rIg32rwaX1iMnE9/gTvoBgLP3MrgvyT
kgmF6H/PkiRYuPfka3p+SjIxcPf+TasNLLy8R2xLSUsmYoIOaPFtZiFQ8NZ2
m4xkYv/NsZnnMixIbv1K7clMJmauhZfd3MqCc/+OLJnsZOKBj6LnHnkWjHZx
1u+5n0zYeX3Y9kOBBb3V2htEc5KJVe4+o4VKLKyTzSquJTHNdW32aRUWCt4K
tm/LTSa8HWtObNxF3s81G+1EYhk7+3UfNViIUdnBcSRx12GujjhNFs6o/5va
SuJQi5xos70suEvLU6vJ87RMDA4u02WBW6NPSJjEE/pfljbqsWBbWb5Xjawn
CxH06wdYCHv/TGUDWa+VptINNSMWZK+F/Woj+fDsatszYcKC56FfGRYk30ql
y9P5Zizc8bssn0D246z8ulJnSxZWBr7LzyH7JbGl1mO9NQu624w2/0f2890G
B7lOG1Kvwwl5/+/3LfFFI1G2LKgN9OwNJvVQXZObaXSchaueebNVMckEU8Dw
OLcDC/G2fwafkPolrfgqWufEwsIFK55rpL4mSyLbLp8k6xkN9l52J5n4808p
Suk0yWf12G5H0h8u05eX5Jwj8xflLT9H+knk27rGE56kn8Zfq2y4kkw0f631
E73IworQiqk0b1LvoUU/7/qyMMOreGma9Ov068jhCwEsuGjxn5ewTib6Vna6
LdxmwaNts2OIWTJBN5WYvBPCwmI1neONhqQf3hX8zghnIcAyuKxAK5mQb2sW
eZvAgoE9+QayKZkQXC2QapvEwo04lfe64snErPWRTSMpLCwZ8/dbujqZaOoc
2fE7k/R/y/HBpTzJhEPvIsNtBaS/rJKY/Z+TCH1x47flhSycKvyP5vQpidh+
PMZat5iFtB63txVtScRcn5TT0XIWJC6WdXbRkojYIa1rwQ0svLldunQ2JYl4
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
KG8TKBtWTv/7NwlXhv2rPOV9Ov8DfjfI0A==
          "]]}, Annotation[#, "Charting`Private`Tag$5562#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
WTZMQzZvgTUnggRSf5sNo26loUerab3J8SR4xBBeZGeahv6Dv+lRr0nQbZTQ
TDBPQzlR95wDsklAN/wyc8gqDdWNVCu4FZOAKL9j7WaThvqPCe+yqiHB33+c
4jp2aWjR+2G3cQsJpPeN/LK2T0MMzcNpWt9IcKb2BNMXDAvyKjpeGCGBI0OE
zQMMy1omnj8+je19LedV9TF/rYLfjMLfSXCJS6zkIRbf9O+trr2bJHCWnJhZ
xfK765Wn/GPoBOnmor8FWH1hSfz2q+ydoHvN83AlVv/rWc+zU/ydUERJecxh
kobKzvXR94l2glro6Yv519NQR7A8qfl4JyRdbQ1J1cP44mxneHG2E6azGTVB
Mw19SLQ4f1e1E9j5tYe4ldMQv8RvR0ndTvDKDm3ll09DTz5Fp3+/0Qn7skqS
rmH6rFyQ7Ksw74RrsQ1DNZh+Zl+qdgc7dsLja/9xW2H6Kg7OugsQOiHuZ3Sm
yR9sHi0D3k9GdMIE/YJo3lIq4l/iI+e97ARL5TuDSuOpaJVeXfNSXifs2f3i
qnBdKjKLHPLdU94Jhq/KlFzyU1EHP+5TX30nXLiZ2MiYhsU7kbrfYaATnsc9
4aHD5pe/7Iye/GQnLF7e4HXA5jtYtS3w72InKEXOHxMxTEUFOX/wV+i74MVc
N6/jkVQUgaTGRvm74IrXU7rm1hTUwIT/rSbcBfI1Smmf8lPQ7yuI54NYF7wX
uxyyHJ+CbHpvXHaX7oKdYzJTfuYpSG0uqGCXWhdUtpew/lxKRr4nSW2Ol7vA
5U8vT0tnMirwEJzu0usCj3DP+Z2CZCTyN18w+VYXCCndGUh3S0abPKNBp5y7
4E5oUu7CQhIqUDp/wyShC/J+fyLtb05ENEKQa01qF7Q1V6kzv05EIi3EZ+Jv
u8DAI++kh3ciijS0rl382AVX94pYDRxJRHY2L44SvnRBZr7VpbWABHTo+cJm
9jKWL0/q6pbwK1RrEZBd9KML2DNJUuTVl8jszL7bVb+74ObKtKZt80uU0q/4
uYPhG8wYxvx+7PISCRwM9/rO/w1StKU4yJXxiCdH6oc8fIOgI32p4ZpxiLnx
wSKK+QbVyUv7Y6VfoIVf42N9st3QKM4d03sgBJXZxjTonOuGfF1ljl9ZwShw
QCULXeyGlD2egwJywYi/PNU5W6sbvizpFdhoP0FqXne3H5l2Q0Lv+EWCJwEl
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
QA==
          "]]}, Annotation[#, "Charting`Private`Tag$5562#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81e8Xl5AiibJCQkKSSinhSCojM5Wdvffee+89smeSsvd4bLL3utd1
XSNEaXwVSb/7++u+3q/3ec56n899nnPJwFbVmJSEhOQlBQnJ/3/ljDfG2zef
S3Aolz6JeRfaRvaQxW6JWRjanlc3XK8zRrdy0jKrmaXBi0Msj73WGckPz1Zl
MavBXSWyK36Vweil0a/WBGYjCDxRPaNVkIwWr4c+jGZ2gq9aly5ctCxCSTlM
7Ze1nOGLegl5Un0xkjtTKtaW6QKKigffBElLUN2XodtfL7oD88sSNYv4UhTz
no5XhccHzG40ip5ILke555VCIpiDgMaVLms7qgZ5Dqd2v2gKgl+Na+uc7LXo
RTCelEsrGG59bpTLfF+LqP+z923ODIFoHvGWK311yG0qyW37YjgQ9LkVn600
oGdRi3UN7eGwx1n34ZlxIxKU5vkvSD8Cyo2uHt1da0Sr1fX2bAWR4PQhvD0Y
14RUEhcsFHliQEm58+9ebQsSkOd6y9IXA4eP2c/vXG5FlMetPq2bxgLbXJOn
Q2IretV4VInU4mCvfU/suGkbenqea/xyURzcGCUh+TPUhkTtn+xG/hcHWEqd
VU0hhM7zxQmqp8SD4Whv2bWvCJEG1yi0rcfD1ZBjl59cbke7+DkrbpEEoEk/
JZGu0o4G0y69251NgLhHgx5ni9tRw89HAy94E+GU4QeB6yPtqFjZYrPFLRFU
bmJ6Fn+2I3/K6ivhzEmQNOHevyjegfifxIdV2SUBm7+E5W+DDjQRbLuJ6UsC
jRNvWVRCOpBnt4Ic+cVkMCfzFVt504G4jwu8E3RJhoYvmuqlfR1o6MEpavXh
ZHh5koQpf60DOfttWPlzpwBV17snvcc6Ue/fQsGpiRRISns0EyjciWzFAmP/
8qXCScaPXuflOxGTp/4uj38qYICGq/tVJ2pvBBXluVSIGmF7HOXQicx/s1W5
X0+DQtWroRaBnYhO5JCuICQN/s5OvtNK6ERNzguOQ4tpQDaqka2d04kMaxqm
/hNOhw4hnLVFaSei/pFy+2JUOtgtpCgGVHei2hvOKTIr6cDHRvo6r6kT6do9
+2Uv+hrivRlHe1Anoii/oZ4R/xpicp0Ttjs7UfnOmcbujddQoR/9gb67E6kL
fGH+AhmgTDtAf6+rE5FYDnkwpmZA31jdnGZ7J3r7thQj+SUD4OIlUdfmTqS6
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
Pnp1GYEOQx11x3+3kkF6WrbFk0yH369F90yEk6Gd2RAnE06H5egpiNlGBq1x
/rmLJ+nQqnNTtB9Pgvn3WRNh5+iQvnCwPfUbAUbW9OOWkunQN7TptnYcAVrt
5HgXztPB+SDKMZchQE7Xw7+3MugQTm/4+c4CD5qf26U/XqUD7m789nsJOPD+
yn9A4yEdxhpCw2gZgWC15eDH2gqs/jwkpwkGwk6PHCfzKmweFATjXM4EwOKI
vK9rLR1M0+WN7gX4Q+64yenUJjp0nwvWr1X0hbf06EffP2P5r24Po2qOQ4X6
q92kfjrczzu//+pJF7gSKli3+IUO5l0nQ34YOYMvK7dt3SgdiptyLqTWOcAf
btXoPjpW/y0m4f7Rg6Dza2pd4V86NCvZmM0uKEOBoHeUoyoDxkNGDzVOOaDl
gE0GPWoMwI1+Om8l54QCX3fPH9NgQA7r8cxrO2ekm2R56og2A3xNLBKN7h1H
HSvqsbZGDJA8XF31y8wDaftMGLcbM6AYL7HDwNsT5TXd+Gu9D+uPLzl5OdYL
+cavjbe0YICs6La1pg990MKfn2fN7Bhgn7dUfWjGD3m6PzZ/dRTLRw1FLkf6
o9aXwfymDgyIu2jydHTOH2XHfE3ae5wBi8slWtPTAUjtV1Oqvi+WTzusq9kT
hDJdYmye+jPA6Jtl6z/LYDRbu1tYL4gBngW/vpbXBqOmyPI0HTwDKk5anrK+
hP2/zVzM0IzC+P5pv/FaPRQ12lvaPTjJAIYwYcv2i6FIuXpJXP00A4rGnuSv
o4ciLpmSvT0B43O2/7b3DTxy7lI/Vp7IgDQFccenM3hUv2tinUoyAyb//TkS
bk1AqWzny4ppDHBz+qQgTiUg5uG1jrfTGTCosFt6WJeI7B+1r5fPwvBNRuUs
nCYiObxx3tZcBlQP52ryCZJQ0rufzoV5mD7czZHjViTEUH+8cfM1jK/3yPVf
SSRUS1e4JlPEAGkDsYaqXyS05cBX16u3GGBXdHjJVouMEu/mykqXYP0H9z8U
9CEj2mq7r7llmH93IvLGssnILmh1odRdBqgafv/0uYGMatqa3HPuM8A03O3F
KJWMZFVjtq57hOHTfsH6K05BCcm7R7IeY/xP6Dlr7qagyQlmkXg1A2JcLssH
O1LQIYtyr4waDE9uAKoIo6DqEi95sWcMWHqpM/s3g4Jk+Dd9S3vBAAvpopcO
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
1syvrPAgcNLp5N4Rvab/AabrGjg=
          "]]}, Annotation[#, "Charting`Private`Tag$5562#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.14660879157123707`, 0.45129858210896556`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.761144410919673*^9, 3.761144426004262*^9}, 
   3.7611461364831066`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"d38bfa3b-7ef4-4fd7-a6d3-874d9a818aaa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
   3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
   3.7611440902338066`*^9}, 3.7611444455438347`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"85c987e3-356b-4e26-b727-3c7ee3ac64d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, 
   3.7611439802455397`*^9, 3.7611440554388747`*^9, {3.7611444571292562`*^9, 
   3.7611444594296117`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"623a6c0c-3f0b-46fe-8d33-2e828b5b7812"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
31o=
          "]]}, Annotation[#, "Charting`Private`Tag$6002#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
D8r0z4M=
          "]]}, Annotation[#, "Charting`Private`Tag$6002#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
O0myY8z6Dt13DPCYHvc82kMldq8m3P72M/DM5ojKXZJX3j797/kQA87qk3f6
SB7lWUO5NMrAd46t0Z9JpoeXK+8cI9dbFFP9RHIUt1Pz9AcGwtI+RHaS7By8
wjl/koGMq88pKSTv4ShZcGEzUHG031WP5NXXjyds/MRA3p+MH2/IfJiLXAoD
nxngPnna6iDJ5Vcfv0r+RubzX1HEXbKeO/NH7S1+kOtLcFCYZP0ul37Prf5F
xj1mI5eRvOdb3p3mRQYK9OXO8JP94vMy2Rr2l8zn9inNP6+pxPinOWI/JxN9
Ky4u6yT7XXE2y/b3Eib0zyn23CT1OOU+e+viCibkRi6k3Sf105xI2bRjFRO9
vktzVpP6rnHdX8niY6Lmn3PLMVL/qpNx005CTCgcO3g/p45KxA9phEkKM2Fd
eupMJumf03ZMyfeiTLgvenpeJ/0lYLPL1GwjE6oJKmc/V1CJybcDH1duYkL7
Oqf3DdKfLyxCgxq3MPH9+uehedK/7kd6irW3M9Eyum5lUhGV0G4LOLSgwMQ0
19RQ5VMqIXhIdoy2g4mmp+s0mx5RiWqDK0KKakzsrjxTEpdHJRLrNj6dVGci
fW3x6JEcKnFGp8kgT5OJqqa4qi+ZVEJon+gV8f1MqEQI5E4mU4n/VCvfrzBm
QrFKb3vGTSpR09nzpNyEzP9JgXB6CJVYd+5z4Gkzcn2vjbNBgVSCuCcjW2/F
xO/Q2SDOK2Q+wrHeQY5MNGQlqPWR54V76SODHS5MmKXz+fKR58kL03qR4VNM
rNdumVUgz5vTEQvVe/9jQims/N5GcypR+ct15fwlJgSrkvYN7SX7nRw4fM+X
nP/lm72mu0l9VNKKLf2ZmOJTr85XphL8/722KQliYm/f1ysCMqQfBjXyzt1m
IurH8uGXq0j/Enz7xrOZ0Mp7kpral0U42m1bk3CXiZg1Hs8iOrMI2rzemM59
JjZuf8vp2JxFnFS+eov6mAmdVVVGjRVZRGnOWM9xOjnff/t7r2ZkEXah5ee7
WpnYd+zIO1+7LOLxQefs6h9MqGdvCFRuyiRUFaS18YuJP/bClR+rM4lqvtEB
YpEJCxWxsNu0TKLzjb3wS44x6B88OU3JzSS+2x+7U8c7hkcPp7a1+WcS2t5m
15o2jMHonHVs5nZyfJq2bbfhGJYzXnqq+2UQxwL+zFkcHEOrquuqpPMZBPNk
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
          "]]}, Annotation[#, "Charting`Private`Tag$6002#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
wcpa/wMqyota
          "]]}, Annotation[#, "Charting`Private`Tag$6002#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
cndv/D920xEr
          "]]}, Annotation[#, "Charting`Private`Tag$6002#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
F7f8ySHvPpnyReS8QW7PttOHinOJUIbltEX5G0jEja6NG+WR2r0uKsc632B7
hVrnPp18wjjqycg08gbky8dSu9x8ohLpX/tu9g2ShF0mM1fyCYUpUijt9xvY
B39OSAwsIEebY9+5r2vFUXvvLKPuAmLpkZx8e0srXNTvT27bWkjofr9k3X2o
FQbntKQP+heS3R1S33G8FZIZ9HbLVYVE+NnIgIFoK6rSs1/v/1JIlGzMy/2l
WzHEXhiZzlVE7iowxOVebsWGU7T+PvJFxGVPonOfRiu0bzzVb7EoIlHfhHV/
3WmFydt/282ii0hLjN4hqUetiHDYHbUyUUQoD34zGLm1wlT7G/uH1SLyRzL0
Q8DjVtj/bW5X5iwm23Yc7siPaEVY96KD4KliIvChOm8gsRX/otavC75UTGRr
1ML+ZLQitvyaleXtYqIT9tF6X1ErGIRl/0xbFJNHhh4aMtWtiBZs/jrpXkxC
znGeu9fcCptTuV0WIcUkgyWfK7inFY1CHOeSYotJ7Yzcv8KxVmRItv9nmlpM
RkonKEPzrbBWi56eziwm/z22blj92orWV9nMtLnFhOk204v9f1phXvnzWV9e
MeE5leIvt64NHzmsPulQ5QsMoqb3Wdrg3B+kmZldTK6PdSmHcrTBevm+ZcWL
YmKWZ3ii5EAbaLOk5iOTi4mf599towJtWBf43EH2aTFJ1ohYWjvTBiWjUc6u
gGJSwc8/clCyDUWXuJpFXYpJ77+6V/KKbUjb8y0l8GEx+dCnmfhAvQ3bqx++
77xVTOgzvrqF3W6DYIHXNwaFYsLl5KNfdq8Nk4HSAqDyeVplj9y4VRv4GQ7y
OO0uJso8xXy0Lm3on5RzaqItJq7tlM+XwtqwdmRcJaWliEQn23WbxbdBJOGy
n3RmEcm33lIU8bwNBxq9I7b6FZEZrgt2k5Vt0HzIFKQmUURWFvtu0De2QeHV
r7ERziLC3mhyga+rDW85jV9nfyskcg+i6Sxn22Cg5fvxVnwhyaz+HrieuR3J
+7p4BiYLSP2Tx2ZHd7SjmOv72ZKXBWT07n7VK9ztkFPnjz5sW0CYWa7sjBFu
x51ondCFjQXEXCfrmYB2O/qk1rE278snZ/7pll7LbYetLVn335FsonS51kO2
nGqfs33pyLOXRD9u3xWR+nbwpi1Vlu94SUJFJt/uGmzH3on0yn1/M8l7s5uc
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
dnJakb0rtJUcnyehK7R8fNd7K/JrYUxEankSzEplbm9cbcjLmpBTkUxTOBru
vvN2gB2JLnb6L5N1CpNKzBOtcvbEK+teQc32KfSPzSmx/7MnOlHSx9/tm0I0
O5f277uOZOvD5aPnhadgrTwrfJLJhazpz72/IjqFtO8aebkvXcgHrZ4MA3Hq
+a8sU295V9Ig+5I3WH4KBXetJz3PuxHbPbcPUG5NQYqGlfUb9X+kpyJ0ffzO
FJaX8juiwtyJsift4yHDKTy8fyRHodud8L5P/dZhTsUjtJm3XtaDsHHZHHpj
M4WTHInfnJ09yF9lOa0GhylMfWeTOVXkQfqL39VWek3hmuMv2HN4ktq3FT9K
/KcgWbw0QCvvSV7uCuArCJ7Ckqxvu5WNJ/FwOxb6InoKbt0t+za0epKHRWuv
UxKmcOt4qgD3N0+itdC1nJAyBWXr5j87dngRISXL2xHZU7ikOZoXquVFuFyl
w0MKpvBjeYR1i50XYShkb35cOgUhR8fDdyK8yH9z83+8X03h+qUeCe9cLzK5
s0zQvXYKKu4vZu2bvEjrJT89p8YpRDg87r4w7kVKnLWibFun8NOrmbb7qxdJ
zj/aatk1haIBo5fHab1J4OzK3wf9U/iUdOj8LVZvYrej48S9kSn4PLipqb7H
m+grJN41mJxCbN7n2V183kTZySzm9uwUNkQK/soW8ibn8iQ6brybwna+qndM
It6Ed2Yr7fXPU2Au1pQ6e96bbN0+K3z1vynUBle3nrzgTVYvFhsrLU/BWcDY
bVXMm7xz8I6/uDqFpow7sVHnvMmH6/zGz2imYVpC40d3xpvoLm6j20c/Df6/
6YuSx73JoP9qXPz6aXxitSq6zutNFA/On97FOI3JgZUFqd3epLaqo+vppmkE
hvw3zMjiTc5cL723ffM0Xnt2bn655kWyvybSh2+ZRu61BxICn73IAX/fBFa2
aZzakHcnZMSLRB8wFwlmp55PMEcPvfYiLFWaPUw7p+Hw5ygYs72Il7rkfX/O
aRyaM3jLE+ZFfn85sp6Baxp8q2rqJx55kYd+bElee6ehunjd/YSmF5nbv3KW
bv80tl9Y//TIWS/SrdZu+vfQNB4mjhzd9p8nkftSvMGRbxofWCNWNrd7kirf
hORfR6chs7iqtS3Nk7yofNj//Tj1ft9qZ1Xq/sSlpvHQ4uQ0OLinOZ5ye5Kw
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
Tm9WRLc2/je9vIz3lyma8u2s4cv/AT2DLLU=
          "]]}, Annotation[#, "Charting`Private`Tag$6002#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.12772163882474485`, 0.4704992246929024}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439698689585`*^9, 3.761143982754935*^9}, {3.761144058387106*^9, 
   3.7611440952600126`*^9}, {3.761144452064659*^9, 3.7611444619807854`*^9}, 
   3.76114614562228*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d32feb78-7cd6-470a-9bc8-79a62f4871d5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{3.761144108937559*^9, 3.761144493334594*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"b629b722-06d6-40e8-9afa-50636939e577"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761144502139766*^9, 3.761144509016369*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"579ef880-2b06-4ac5-a94a-bf97f2dd2419"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$8684#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3bY=
          "]]}, Annotation[#, "Charting`Private`Tag$8684#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3bY=
          "]]}, Annotation[#, "Charting`Private`Tag$8684#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
5gI4HaW8rHylWPc/25SZcQ==
          "]]}, Annotation[#, "Charting`Private`Tag$8684#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwUV3c81d8bNxpCKmVmVfhKVlFK5UGUsoWEJEkRskNky8re17rXlpXsdZA9
rr335XK5Vpoq+t3fX/f1fp3zPOc57/f7Off5nDF9pf2MhoqKquAAFdX/f+89
Iw00rurKyr1kXRjt4284cIvTdo5DCkhpM0IH2WiRZFpC8icORTieVbTLyXoS
qfSOlaZw6ECE3bsjB06eQw/MftZHcZgB6UhV2s4hSTQj/u7Wew5H0L9GTiGN
KqCYNPZGAUMncPEgrMb+uYXuHcu/0ZDsDAl2NNyFPEqoYrPn8havK9B9vaZZ
+/gOCitkFtISfAu2Rg5BnV0qKJ1FIyCYww+oTmkQbrFroze98S16NX6geTtc
622CNtLzn6c5Z+gPjdczB66w3UeM3+08a5MDgP3QV54fx3SQy3CMyzpvENAF
Kiq83dBF90NnKqoag+DqiPVZVxM9JKYo+N3vSTBQxS5TJw/ooaVPlXbcGSEw
z0Rmkih6gLSiJy3VBcOg32Nry07jIRJROZfH2R4GEXpeo6GlDxEdrdXK8vNw
kMPp2b49aYAeV+9/RDoRMC8++7EBb4BUWc4NCGRFwHHe60d/CxkiGbs72yHf
I8DW8KAf0csQsZyPENOPiwQ5nayLOeeNEI1/mVrDciTMX2GYsXQzQtvz41b8
0lGgebrzfXWHEepOOPNheywKSsbvUw0/eoSqvil16QlFA9WD6wfCMh+hbE3L
1ToXCmZ0jComPULedJ/+C+KIgZK9hd+HLIyR8J3IwFLbGGhk/k/ndL4xGvR/
tTrVHgOaxZeu/V4xRm9a1O4d5I2F+VnD24lnHyN+WpEPYs6xQPWflNzmw8eo
R56eUb83FkoOHT+19f4xcvIiWXnzxwHVl/fjkQ2PUdteptjwYBxcVagX76Y3
Qa9u+IbvnY8H2zd8kTvcJoj9zZNtQe940KQtIj8QN0GN1aClOR4PJVTt5T9k
TZDFL+5SV/EEmKf68aZL1QQxS/9lzghIgIhpkQW8vgmqcZp06JlJgF9t1Gn/
TE3Q07Kq4e9SieDlQ/bXf2mCGL/GXeYNTQTlOnePETsTVH7RKU55MRFsA1P9
7J1NkLHt/Z92Mklwlarr4wVXE3So+KI+JjIJSv7ISe5RcPHGseoWUhKMrypp
LLqYIH2RTY5NwEAH0jabdDJBVC973NjiMSBHpbE6a2uC8vLyp+Q2MfBivMV6
w8IEaZMCb1gqJcO2OksSzRMT9EfweUp0cjLY+n0QP61ngjKfKe3XfU0GErX4
Eam7Jkg189zj5Xsp0MFSznlPxgR9J1A3HsOlwPjVL3YG501Q6pl5vmu7KaD/
1uyKKasJum3S4G2qmQom9KF5xtQmaCs1mRCSkwpU7NzqScOPUcKM263y/VSQ
cBm4q4d7jOS5HmbO6qZBROXF5+svH6M1A+mDdIVpsG0e9ffBxceoq4f+EztN
Ohzn+Robs2OMeNZdnxaKpgPVS43vKcXGyJ5h9aTCw3SQK99gtn1hjNqE9VtG
/dLBi6WA+zC3MXplcUWAajod+B5XdDi5PkItgVkjMYexwKemMnn7zCPEnnsq
4LwkFubNuev6WoxQ4/LOsnYwFuQOE67u7xsiZrPi3KyrOPDaCnkZDgbI3Jfn
oYwZDuSCFXtnWx6iWtz7I33hODBp7dYeVXqIzBZeWv5axkFjeJ1kjYw+KjcW
ElGJzYDGwSSy8rYuon8bPz3XmAF8R384d2vrIuOUQ+8d1zMofF1c/laigw5N
L22k3MoEvrHvwnIm95H+Q2zx9pdM8Lr+8+FcsCbamtKhx3FmAdVYEl66WAMF
GNM9u38rC+R2yoQl5dXRp6evOCtiKOt76bhmdRXEZHPT/410NmX/8bujx5VQ
q8+EwSGPHKB6+GyGd1IEGR18X16ZRcGFCaNfXgqgnXdyxy3wFJwdsHTm82nE
9z6ntZs3F6i8rnTZ2JNk3eOdJCKbKdhn69XYgARcKjhxiIsuH6iuMs7hKu9C
p1irSa9EPnidYT/6dl8FTD661L59SFkPHGDFqKjD+4o524V8yvolaloxdy0g
NRZOZat9oPAT2sampgepI3c/XowugBJtU9PN6ybA8M/b6A5PMdiyHbNJ1n0J
CRYPjEVuF4NJzdSPWEYr4B8WMTlhUwx8tL987FusQDZv7OlUfTHIZfHH112x
geq8uPJKsRJQvnrb0jHKFjbur9ep4Eug5PrJ63SRDqCbG9/tcLQUChaECk5W
uULyIx9V8zOlcLVhfv3JaTcgMFv36l8uhfSx2MVPb93glYdC381HpeDF/xB7
X+kNBGlvDB4uLAWSWxAL66A71P9VmMSofgKXGp3DV5Y9QUBrk/Q5pAxSG9ic
VTd9gNPzjsxzbBmYP1qousLnC8cL00PoK8sgc1C+eFTLF37T3RfTIpRBgtbH
XyJlvtDfWOkwe7UctD0bClcc/cBNwnv/F7EcXuSqWcss+cMr40mN5D/lMM9m
ynDzeACYhVLMfKICzM+I6HRdDwANEvFWwI0K4K0/cMktMgD40+8FnYyuAFaz
z/ZLV94B/tipU2JylVCuL+Ec9TwQPt+0fjagWwlB/lOB1CGBUPWyrcLxZSVc
ErIQGigMhIx2l4e1cZUQFS/V/+5LILh4zqQqb1TCxVv8xQx2QWBdeGWbTFMF
XYPrtFfDg8B0Klw+nL0KjM48qSgpCAI1aYWlkVtVkK990cCDGARnt7LPP02q
girhHEdQDwY2bqo3h0qqgLPMwznYPBgYVR725LVWQUtJjB/T22D4mc3wanu7
Cpg5TC2r8oNhfdisMfpQNSiafUibQMFAoGk4Ic1VDWKSEcnCw8HQY2xb5nGn
GsIlY6e0fwdDc2jnwTOPqgFzjQ0rwBgClTVnH7TYV8MrftHLvNwhUEB6k/s8
sBr00QXzm6IhgGMd2aVPrQYz3azDb2+EQLyimErRp2rYb/Ddmb0XAqH275K1
Oqvhqt7Zg8b6IfAafw0SvlWDMsP8lSLbEGASKyd20tUAv7z1ZqdbCGS+lwj9
w1UD7G8Nhjj8QkBm48Ml0Ys1gGf5K5ccGgIDqv9NGCvVwPKLa/EaMSHwogDn
GfGwBrIbUmUuYUJgn4FHsNm6BnKOvIpRwIZAzMvEnq/eNaAWX87smR0CF7pP
OQjE1UBz3gOh5fwQaBaO4HiQXwM1vwXUnItCQD+YoTGwoQYmhTb3RD+GwOZq
gHnNYA0YM4bWMXwKAf+7NEfXlynx334fYyoLAa48j0/cf2qgutfcT5KCS+l2
H2ocqwWOCzc/uFH2K79wpPI+Vwtd12VPEyj55tq3skula4GAfW/7ojgEnP97
qbakUgtyFz+rMhaEAOO75a8sJrVgHvVHryeHwu/yk6Q7jrVwpYt0PQcXAtdu
z8i5BtZCYxahEJMcAv1Z+iv5ybWwSPfTLDc2BMwPDr+fLqmFar7fPD3vQ+Cv
mYYUU2stFL2OSzvoHwLRLV2TMFELsG5Ucv9NCAjz3/a226iFj4HDfOUUPRp9
m/7LoK6DQzeC24SehYDe4g38MEsdtNrzeRRS9NtQqHI8JFwHfRHGggoqIeCH
kzx9VbYOou/K5RMp+nPSFDdZaNeB/PiBn3EUf9xpymLqdauDVcu5zzwUP83y
nSnfD6uDozmqcl93g8HRK9lQIqMOvPNevB1YDgYsROdGd9eBwx69V059MFxN
Y9JonauDI8k6jik5wYDfD/r+42sd3N3bCkmMCIY/9V4KBlz1wO7e1p/+OBii
uP+SQiTqYerfD7N8pWAQ8ngdXq9IwUqeaxXCwaB7w2aaz7oe0jSolka+BEFx
jaHzSn09eMGHUXbHILjNOcbFMVgPvNIb9P9pB8G0q/bne8v18MhUlFdSPAiO
XLt7vIipAXaklVcVlgPhaeWVfMfHDfD1DeGjlHIg/GYt1cx2aAD95CITAZ5A
iHAW/Tn2rgHaJywqjn99B/WX+RWvlzSA8b6pymjiO2ArOzFLTY3gUgifD9tU
ABiF/tFZYkUQJFdTEpcZADgzYnebCILtvTWLBasAEGGprg7RR6B2NNl2Ytcf
FJxNYllKELgHuezoHvSHQPV7jL9aEZRdwqlItvpBr6CU7+QUgnu5cjdnfP2g
gOxb1UfbCMrawncT9nzhSvKD7BjxRjiVigQrCT7wMLBnwV+mEWwsHFkPJvqA
u6M892ulRqDKvxxyTt0HmlQvxDw0bAQagZrx4TJvUN3b9+Z51whFXKHWvI5e
8MQ4+1HubCOotkt/eeT8BvzunU5MXG2E+YnZAmK9G2RfiRgO/tYI/ElBG+K0
brDO5KZiTd8EcgqVuWzvXMAZqV27dKUJfj3lpQ1xdIJQvu+n6t43gQnNdTrm
QWuoINzq6bvRDFQ2lo87zFlgVNn7y/s7FCxR87xu4Bz6UdTAqqpNwSoDsjFK
15D0m2tPOp5T8HfOlwcFVVHVSfEfjVEU7KfY3zT/CFUrcvKVkppB4uZegZfy
K1SXve0QE/MZqI7/NT5j54WaLVNOP1xvAca3XRHLGpHo0+rLl8Y/WgCncYrq
X3QkynwhU/uUqhVmfdQ/0I5HIn/zMQObU60QpxQW3fk4CimbnkjyvdEKboFB
ckw20ajvoT97UWgrzFOPj+f6xqJpZWsWWtE2eK91wfiiXyLqbb/+jE66DcKO
F67VNiWihtv05Ufl24DRou3c5n4iSlPM0WHXbYNlpfYiOZckZCq3EC3q0Qae
wX+8HptjEElal1m/tw0c0qe7QsVS0ETFOdNHY21g3lH/y+9ZCuq6vPPRdKEN
ki8VTFAlp6APkuFa1t/bQGQ3K9/tcCqyEe+M8OFuh8n0kFvS46nou+DNY4XW
7cD275SxtXg6kiUotAe7tAOrerukjXI6CkhR9nzh2w7jjLis40/SEespna1z
ie0Auv15UpHp6Ar1y76klnbInYqzGFhPR2/rbN+59LXDy4Qq7UoaLGp77Qx6
k+3Q0NLmJcmORQ82vYtPbLfDL0E9plV5LHKZSggPPN0BB9lfj5yJwKLGuNQ7
5oId8EUb0xaFwyI67cx/ty52gCUX31RYGRYldhS/+ne7AzgurX45O4ZFBN/y
/2a0OiA77dC1qhUsEobauRqjDmB9oSI69BOLasrbNJztO2DowvXyGFYcorHr
Oazj0QFlRzQSrgrg0D2RQXQxsAM++Nq2G0ni0BRuRnwjpQPkuoqq+NRxiN94
caUrtwNubDGM1hvgkBXHalrupw6418bwY8Qch/6Gfztm1tkBtb8vH7L3wCFF
ld/t8sMd8PpVg/HXdzgUeojKi3euA9zpa4LXInFouOng1b3VDti516ygh8Eh
bg+G7clvHdDDcEf+ciYOmV89kVv1rwPIMQkKAQU4VPSV1SSOvhPis78cUC7D
UfzPxe7I0gn7b72VXWtxSNbybL8WXyc4Tjj1sTfjUICAUKD4hU74b+WAsUAH
DuHnReWOXukEBvnXNSm9OMSaLPlrTa4TigcvFnoN4pDxg2slHSqdkFqPqHpH
cSibGV5k61HiL097e0/i0GavIp/fk064oe3+L3kGh64E3Rt/YtUJe7Pj93jm
cchTUTMCXnfCAIeL9AECDnX801Xm9umE3lfSGLVFHDpea0j1J7QTxkR11Xcp
WN/5SdV4fCckCrldOLSEQ+kXn9tW4DqhzeDzMQfKOmndSiimsBPsXbsnZSn5
JHLt5+2qOuH+2zKbF5TzXJ66JGh87gTL/y6WbFLqaeR5qymK7wQuq7CAfkq9
dJO+dAwTnXBspW6KcQyHNGODGkmLnfBbyiAZR7lvgma4S9tmJ3TeqamMoPCx
wBArkblLqa9wm3e0HYeE25NI3ge64GLvRKddEw7Z+6SnPz7WBX7M/IWmNThU
czNb/yZnF0idfNiSU0rx0+6H46cFuiAUt8wol49Dp3sVvoJ4Fwz9LHXqwuKQ
FHZixOxaFzw/+DeuLgGHnt09jClS64IUFjQ27IdDb7lTPYYedIGjgNHzXVcc
ivsiZfLrSRew+HSE+9hQ+Ew0FVBw7oKKG/JZSJdSr/Xu4edeXeBy3pLFXhmH
fstHrIUEd4Hvhxz+ABkcElmrLx5J7YIg3Sj5fi4cCpfhkLFo7wLmTcW18Qks
ymUq4Qob6IIPVqcq/dop/Ua4/a90qgvoJ5/lhFL6ayfYseXvVhdwvxY3LwrF
Ir2pPvUI9m64Wh3FJXQZi14Vm18sP9sNo3lynzK4sSjQd+/kpEg3GGAMMc4H
saj6woWJc/LdIK4ccIFvKB1xuQc8rbToBn1lrIeDeTq6rMl9e9qhGxommBqS
7qYjdf4yIeq33ZDOLnuJRSQdefYsbNyL6gbl8wX1tLNpiMB102W2phuyz2/x
GU2koj/bQwa0rd1Aig661RqTik61Wt4U6uuG9/tGx/Dqqei2dQKN/WI3nCho
qKptSEF59V9DDzL2gOLbB+rf3iej5sjgV8KsPXBCXSDkjmwymnx2RluDrwei
As0ULm9gECOTBluiVA+k0HPRzt7GIFvjfKzIox7YyQa7B6uJ6Mo/k4r7RZR8
oW7fYtbikKpao49SVQ9Y+vy2MguIQ08xvBrSzT1wsz+cZYwvDkVIz65wjvZQ
5hza8CytWLT6ypCDsNcDuJbiT0RcNEqe13W3VeuFVCqh+L+0EahUrFzZ9EEv
1IXqxVOdCkcd7qdYdJ70Qg2PzEEt7jD0nX2oUNqplzIPtz/r+y8UqWtpzu0n
9wLVPssTPa5ARN18T+H9ei8k3Pu8X0bnidiP5zN5/qDk+7SGKe5yR2LGR6Zs
qfCwnp7OY/TODRn8bnfQOYWHXB2y++i2Eyq7pJR1+gYeGjN8VDWPWCDzDKDL
D8GD1/a1qkKpR9DjJ4VvE+4DUpVj2TWjIJA51k0TebkPYtKdp0rIwZCb+ETa
UK4PhMYuDH3xCAXforD0Ld0+cGwx5m7KDweZcZI9u3cfZNM9kI1gjobcCyls
lmN9cCgohNG7JxEUVn1KDin0w/6mp8IH1kzgjSDv5m32Q3DHjVzJfx+B/HNu
dkRiEMyqZ3xlTjZBxfPw5ntXBoGsaDbLS5krvMZks9H1QWhf9Fn7qd8ErJUp
1nm3B0FImTfdI7WJMk8Z/nU3GoTbCvXX8ELNkPRtlIM/cBAsJ7cWdq99BuUv
vTr2c4Ogl46iRO61wsknHldXlgZhcbhk8oolZQ7oF+EyWhsEMb3ua3zBreBY
ErKo9H0QJP1cx993tkLaq7v2HAxDEJ66vvr5dhv82GgJb7wyBLIzd7XZZNoh
c622iylsCNwE4t10qTrBJl7jnGX0EDBhu4OyODtBWnHxTWvCEHiH7D1skeqE
rhR6UfeMIeDKYgWrF53wRfNh+GrVEMRGjWk96O0E2cof91sWh+CV7ciw2Psu
oDMLLuBdHQLz+/VIIrMLBo/zHHyzOQT89Zje3ZoueGapVHFxdwja/l0PnFuh
vFvcMexpTMNQr6khuCHbDRO+F2dcrw3D8pEnoR8XugEn0Xp5RHYYRHcObXz5
1g1WM/phEorDcD9Bu3LncA9QSXvBivowvHr7eU9StAcE1/BYHbNhiME9a8x3
7IHtONPfxRbDEPrt1siifw/U3PqhzfBqGPyHqx5OxvWAWgr3gWbXYXjJYXJ3
v7IHHDWtzMXDh0HLz+wC+88ekN371xAcMwxX9Ze5JA/1wuH8aLblxGFQWpvt
pmPphSTa2o7kzGG4gLfiXbzYC00VRy7Q1wxDg/WRoyoveiH4aYrvMzQMq4qH
tSUpfaNz/OJ0Y8swlGi/3Rzy7gWShf77133D0C6mwnwzqReYuHO2lpaGIUBa
KSSnvRfk9HxnFleHwVw/tS92oBfswx93EzaH4XRY09dbU70wSs2eM/9rGP7p
n2ed2+gFuuvfYub2KPXW3S3rpvSdjGO/zyzNCIj83rB7/Y/S58uBxtOMIxDr
8DqO4Tge+nmfqU6dGAHBSzeyvrLhgeahvMwk6wh4jCidS+LFg3n3Lss43wi8
dDvRcUYMD2Illr1DUiMwoa9jyaaMB5PV27WD10YgsXIbu6mGh6iz5/IGZEfA
ccycw/c+Hn7ETPn1KY9AAz3x1uIjPAjhK+3xaiPQ+iS8ssgUDwaHY0x6tUdA
Iuzh+pXneGhwVb3RbTQCuiQxQY9XeNguFRLuejIC125of5NxwMPZ9QPsneYj
cJi1naXcGQ86AgsHO16OwMqhFjuyKx4CjOu/ttmOwOfeyO0ZdzxUxScutDqN
wIOfIW9CPfGw1u/U1+I2AlsuZ/Z+eOOBi167/rPnCNDfHjHh9sOD2i2xD81+
I1A2Lxv9zx8Pb93pE5uCRiBsid4n5R0eSsqXAxrDRqAi9M/pn4F4IGw2O6Lo
EbgttarJGIyHU0Jppg0JIxA90HxihoJvP3mjWZ8yAqJWYZoWlHfMJemBbB1u
BKzfW1B9pOD8IUmR2pwR6PkQxFJGwdOMxzlrCkZgOOKGvz0FM91eP1z9cQSq
qklK65R8cp4d3ysrRiCi9KjGGQq2r8pcrKgdgfNWiokngvCQ+cVroLxxBBJC
gaeeUu+o8CNU1krht6Z7/FwAntKf1wo/dY2A/EJfixLlvjIpLJjSvhHQclSb
O+uDB6vRL4Efh0fgb7aJYC2Fr9RjeOeSCQp/GXKJTB4UvyjnmxXPjsByNVzl
dqP4xSdAu2hxBKRCuw+sUPSQqjWVKySNwOhFa2oril7m32TFCjZGgEe/82IB
Rc8E0dNcH3ZGQNYoPSnnJR7+pg39zP07AnQPVcT6KX4Qmygm5lCPgj/nhRd7
FL+YMIcOZR8aBezDlF9EfTy0+CkWZx4fhTVv3zurFL/9qOdLyWAZhXx2AvcB
ih+Ffv4NxnGOgo5lrtukPB5CLcrN0/lHgfmWPW2NFEV/ucJABuFR+PDOx/C8
KB7usGflO4uPgn2btpOyAOU+7TGbqjKjcPb0Ze04yv+SSWro8SoYhQZ1TpVW
Boo/nfwunVMaBWXaZ3aZNHhw5Xd03tUYBa/jic0OW5R+/PMywUx3FHpT34mb
EXtBauhpTZ/BKMhyE9UOUvp12/v+ftazUTgWmi9p0NoL5nOXArTfjMLghxtH
7sf1QkuFcG691yhwuUwb9Qb1wtmws11CAaMgv4Qr3XXvhZkbzEz/IkZh3C/g
vIUp5T1J+hL7IXsUMosv/c493wvyuiVZBwZHQfzm2Q+zeT2QKpLb/mpsFJYN
rG9FJ/TAX9r01cnpUbhtrpC8F9ADVaXhoh9XKPcZm/z4zbQHxI6/Kn+0Nwrd
G+IFjmw9wNUt2lohNAbed09a01DmJjecwMoZsTHgOmG9K/2oG8ZcuY+8lxyD
q0k/bIXudEOU0FG1p7JjcLyvHnOdsxuOBKwPH9MZgwsPnnpdru+CH3Ifll54
joEqI09D/49OqMskY177jcGn38Ls6bOd4EMncj8gaAySdnCLV9s6gam/oCkj
egwU907d6ojpBMHHRamzOWOwgvvg+0K8E/Q8Purr9I/Bj4xfhAOGHVBeTXnE
z4yDuesv3ndhbeB4qaWM9fM4FDvKMBM9m8Fcii89smMcymYfTwYaNIP+FfcQ
Rvw4EPOja5guN8N1GSlTmolxsLUrfPV5tQloFDKPbW6OAxftt7eLWk0QruVn
2co5AVOR4hfiuBsh31aRz9F+AvTIyefENGphrqglZODMJGDXlVTYDD5C/8aB
9Uv/TUKqFvX2J8aP0CiipBojMgmTmso0VqgE0vNbGR9IT4Jbwh8fSYESMM1u
ez+tOgkOEf/FBCwVwnJKR/jK60kwr3+Y9FswDzZCe6L3eidhyyv+qBk5DWa7
Gb8ZD01CMyC+E72pgKdX02kcn4SPPodCWotToCiw95Tv4iRw3z7MpeeCAVs/
fCzd7iTM6NCWRrDGw7c3/fEn+aeg4SF9uSbre/hjOYw57zYFJnLtZ0rW9ZHO
lUeRYp5T4LX7034v5SkqoF4OkPSbAk2+lxYHay2RccJPu5thU5DLun/U3tIR
NbVyKmvhpoCx4vd74zPe6B3fk28uXVMQ6Pp5f90uDM2TV1c9+qZgW/h1vN3h
CHS10n7OZ3gKaFzD+l4NR6A1Nb+u0NkpMJIk6a9bRCG1Nznp6TtTcNbWKCrb
JxadHN1Q7eCchi66AE+wwCArrLNCL+80BCYU+S7zJKMWq3/Sg/zToC1Oxbs1
mIycaU+cmxabBp2UX4PcV1LRhITU7pbCNKjOrdGYOKajtBC3LLaX0zDxK2Zg
eB+HfunRYrhsp+Fn8p9XmqoZSPNsaMQZp2nwargqtp2QgWiqU95c8JwGfv9Q
h0TxTPRsuVELoqfhv8jer97aWeiC/OF989ppuN2jGSpuk4NK8j/8N944DQ+y
VtV/lOYgqVOaWnfbpiHs3OfSkh856MZKQuaFgWlwS5J4ve+Wi9TfC6tsL09D
6f7vb1+c89DgD7zjk/VpMMi9nXj3Ux56YOKQOvhlGpjjHhRFbuYhE8m6L2V/
p+FER9fBnSf5yH5CLcGVeQbmZVDN+vUP6IfCTtMa2wwQf7szNL36gN4UxJEN
uWegSuYjnx/uA/LznJOVFZqBTXPry6MHClCcgB2RRnYGMvOps3LrChBnOMsx
x1szoLAzFvJlpQCl/aq+SlSegSN+M0fPMxei3G6a0Pb7M0CXclLe7GkhqraL
uRRqMQP6AeIKx3YLkezUVaM9mxkwIzpU9J8uQs2KM/42jjMw9eAKl8/NItTF
Jjih6TkDZ95wjJd7FCF17y6aZj9KfWZLXVeTi9DQmo2IZPAM4G3cSAXVRWi6
vtKTJXYGktj6uC2/FCGT/4zyApJm4CmOhrqMoRgRI6iGfqbNQFsOIWubvxht
Pr0rOJk/A5gmNQZFnWJk37uhoVIyA6cwEa2GlsXo55Uo17ryGUgnEqVeeBYj
KvqpntTGGfC7wf/sSXYx8nPw/HGsbQaEy2zUNKqK0ZGZc3ze3TMwhve9JtVZ
jMJud9zd6Z+BPGXx7uMTxYi5xMrh6egMRNwYyyOuFKM4jhMpw1MzYGLk7PPp
ezE67VveprQwA8u03b43qUtQ+vrD7YrlGaA6k+nCc7gE8evtcwitz8CzzxH7
7owlKBfhbiV+mQEl4Hj98EQJEj1/x5r+5wwc7fS6XcZSgkqjyHFv/lL0E2se
es9Rgq78DW9cp54FW5/QwGWuElTzTGrt0eFZOFIKAw28JUi2b/xkH+Ms4JhX
udjOlqDmqx435ZhnIXoCZrbOlaA7uDPPP7LNwrsAbMBdgRIklcAk2MY1CxKr
vV84BEsQX9ifpckzs/A79fsjdwo+6kfK2BKcpcxF++J2FPzbdcT0gMgseH9q
x/+ixK+8aj7DcXEWekb5M05S8PCz4nnRK7PwV2WGrZlyXqNhcprC9VkwfZib
eIBST6FWkPEDuVlQ8haOn6LUm3THmdtKaRaIiTted7hLUMDNp9Ne9yjnTzl3
KnOWIAdJTUysxiy4rZwgzrGWIJPzNw3ydWYhsuHf3aMnS5AarzAHejgLRpUG
tgNMJUiGhW18yHgWyE/ZB0XoS9BJ6i+6ey9mofZHmJ3eP4r+P2dOMdvMgnBV
mlPq12K0vt41JOgwCwWjLUvsFD3bxjO1ND1mQTNQlS+vuxh9wkcef+ZDyX8h
graprhilt7ztc303C6wTyZ7HCouRa4m+WkbkLEif047TCSlG5tlKjFVxs5A/
VvlUzbUYaSdf6u7BzIJOp7a4t3kxEglkvPsjaxY2TLZUUmWL0dzjRsW7NbMQ
KPGdt49YhHp0C2mN0SwwtJqpNvYWoSqVpGb7lllg1N5d+F5WhKKkHeWS8RR+
CnZkJL2LkNIxoRtbhFkIa7X+wnGiCF06yPKHlkTRs/NUqtbXQsTzh7qGfWMW
+rVmVsaGC9Gv5SlphZ+z8KLybNZIbCH60BAuGcswB66Fulm1xwpRQpn7Tt7x
OWC2eHQwbL0A+eVbfGxgmQOhxrGt6o4CZBx3S5zES8HCCkz8ngXohM1P4etS
c0AQLsuxWPqAXnM/PrtgNAcfv95hOxCVj0w1JfSmn8xB/P4bFWrzfKTuSx08
Zj4HD+irtZ2u5SPB1YwvvbZzwLr4rL59Ng8Nl5Eaa/zm4K/nYyycy0MSqvaP
YwrmgJyG0cHH5CCSm3/ynb9zcITVUEhdIBOt6V14gaWaB8EUj2EecgYy2T5J
w0s7Dz94QkwTSjKQyjniZU66eRjo+lUeKpOBzga9SznOPA/o0GmT3Hs41K/T
Y7UnMA/RUj/YeB+lI5F1XYYxtXmI+E/F63VhAqrSUUXBmvNwwE2sJoonAd2q
V3CQvT8PoYaxZOPweGQQJj6VpT8PrV9pVE/bxqEgiSMfHJ/Og9WFeSuMWAxa
dqy7x+w6D4c+Zl2bvx2O0vfOBqtlzgP/a76tTUE3JGLOIUudMw+aX3dOvV56
jSrxx3bK8uahjEFJYQznhPBpfx9yFc9DugqR7fFZO7QnP3qeXD0PHdPTiUFG
JsggIKgzsG8eXtSKbJ/ZMYWTx7bpWn5T4p3pWE8U+cNgffC7u3vz4HK38XoD
NgCirAQO9f2bh9L+ek35mHfA3GVAO3lgAWxYMlc+OQUBs3/r3hbTAuAC6Z9U
nn8Px/8k7Zw+twA7s5uv54SioD/vsh1WYAE8xqnLxBOiIEK/f0tQaAEOHLke
1nwoGo5VHNy4KLoAYW/edGYvRAOTne3KHekFqFi4bnA+LBYYV5SmHVQWQEcS
goUbE6Andt5gV20BctUGpBLPJkKo4puJt5oLwKh6bfU/v0RgwJWMBukuQInm
rcwUxSSgf3R6IO3xArS5ysmW12CAbmi7tdthAcbnHZ5Su6VCh3eIopbzAohl
F5jGUOalQAnBz6MuC2BvvXntAl8aHA4zbFzwWADlg/Uaxs1pcOhuW83Pdwuw
FYo30PdIhwMIU3wueQFMq+hPryZjYfKGovJc6gKE1zlM327CQnHN+nwSdgF+
b53aoCViwaDiJjNzDqV+Mv5KojAOPhbOOVKVLsAllVRuniIcBFwIPFpXRqln
tnrlaS8OjPIksl9XLsDlO2s/addxQJflPbZZtwCW2L4Wzf8ywDj5nMxM+wK0
bsWcORaXAVKcPYMJXQvgWypNz1GSAUcSHF/q9C5AQt8JW9fODCiLbk3uHlyA
ffFEsRu/MyD4hM3ldyMLkFnhPJByIhNMwlnxCuMLoOm57q8jlAkMIc//Vc8s
gBO30xa6nwnzdMcTnOYXwHuAgc3xRSZUBFRJXFxcgOVB+cvu7plg6nPENJe0
AKSSP3bvcJlQ5fqhJe7rAqwtPO71W86EsJ/3H2n/WIDdwMfPh75nwlOnv9+P
7i5A8ZDvJ8cDWRT91f7z31+AAdErvMW8WbC0+R3JURMo81nteWWRLKixStX/
S0uA3jitOsmrWfDsxVaQwxEC0NzTDaBRzwKZ5fiz4owECBh70098kAXHzeRq
15gIQIfj6Tj9JAuWF0j3s08QoJLrq0+mRRbUPY5cf3KKAIMaSae97LIgauaa
PzcbAdI2Uz4WuWTBc0MC9wQHARpUrS0kPLPgxkRwRQwXAS5JGlgd9M8C5geS
Gpq8BBCMiSWJBmcBaXhqheEsAQZ4RE7kh2VBvbafVzs/5fxPNDxuUZT8/SIc
vv8RQK1sUCU1NgteqI98lBUmgMRNwWnWhCyQ7fG491uEAOmXdFiWErPg5D3B
xXJxAnhKuyscwlDyt+Pf2F0igIOXzycPCm5Qen1K9DIBbAIZ6u9RcMxn3kKS
NAEWsl5XWSdlgYV8h1KmDAHcvWZpV/6fH9nOPr5JALYX9DSVcVlw6ibH69Ny
BJgNdeCcjc6CtZqmY2MKBNBkv15tFJEFjVctc6OUCMAvJKghGZoFcRXM8urK
BEjNT9AyfZcFL6VqJ46oEADHFSGz5k3Z3z9SUKVGAEf8n7TVN1nAYr3t+VyT
ANFUYRvKTllgeYThPut9AsSkBWTQ2WQByhIQbNUlgM7xB7fPm1PqUZDbddAn
wOZssvGHR5T6Zw16zhoSgFWbyzVch8IHW4S9lwkBegpc/3rKUfj7lK8k/pQA
zTGvot9fpvCt0co++4wANXGfA/+dp+gX+Lvh+ksCyD5SZzt5gqI3P0vUmjUB
Ojw29stps+BEk/izRFsCfDtdvIAofqzdNWP46USAOLcfJgzjmXA8znM2y4UA
a2WvXqp3ZMKzS0kfdd4QwP4uUfVPZSYce9n3oNSLAFsnT2NiYyl+nr6WaR1C
gFKzM88Idyn+d9F5zRVGgHnbMcbgy5lwlOXVve4IAojB1C6WLxMq1TK3heII
oH55kU/wewYwIKabS+kECNn/OZIQnwEmhuePR2cQYLkxsmnqbQaU/7y1KJ9N
ANccLeW4ZxnwWMI1KO0DAbQlkk86X8yAT9jFEYMKij9DFAf+NuPA0K/KZqCb
AEkE4U1mPBZK+IbkvfAU/1k7bakUYuFg/cYp8QEC3PvUWHQ0lPJefT9bGzpK
AAOp/zgklLFA+/z9YeUFAlhJWZ9irk2HD3dN0xt+EGCS/9vJBvY0kBI5Iwu7
BFh3+7HTgU+FBqb5KfSHAKPt/suCfqnQP/SIrYlqERzCdAuW1lPg26OHYZ/p
F0HlRVN/ZkUyyNprunfwLEIE92CQsGgS9CfJ6g/eXoRI7ix+h4oY+E7mPL4c
twjCqa7Djr7eEJOy0p6cuAg/S59VWhV6gaRGmef95EVgjtI3dCjyBLtSta1G
7CIE2oQfmtBxhw0XLzymYBEYPT76DKY5AfHgcqhW8yJ48TNpqDmYwAjvxyP1
G4vg4mZ4Ey7YI8cBjyaH7UVw/HtkPaLTAZ30vecq/HURru5qd+eZOyGt5UVS
/K9FkFtIWKNOcUG9Bawd9rRLoNNnZHFg9y1qveYeIMSxBIfOJa7yl/qj8vt3
aGMUlyDQPaOruSgCBapU+XPdWQKBcob0u9SRyOjWebqsu0uQn2V2Sf5+JKKR
ZDhaob4Ew09kBt2+RyJ15j7Wcf0loGH53U+4FI1I/XrCXNZLcCo+kIccHotq
O9oLMl8tQYdfNnXaeCwKa7wqLmq/BDZh3CibLw5JlXBKyb5egjJD8uUPRXHI
O3z2pon3EiQ0fTxn2ByPONXNtTJjl6CP/+4VqvZEtKE0NiSSsAQmJbu7Vw4k
ocabynrlSUsg6B6KyZNLQuaiwoZtaUsgK1R78WZlEvrEuGlGyluCy4pHNneT
MCjgwOMV24IlaDs220AewCCDv30Wu0VLcDr2+qtjdMmIav2jDX3ZEnTePjax
YpeMVLudXEQalsDDzuhn/fUUxPt5+XdZ4xKMlUV+5rVKQTs1Dzxufl4CllO0
4/mYFJSYf81HvYOyf5r8++qvFLQctBdiO7gE5weCH5zOSUXV3jZMu8NLIJr1
72VhfyoKdZ2L8B5bgpCPG7gnu6nokkVTbNT0EvgorOiIKqchT2X/tLLlJdB4
Lc9zcyoNDRq/MJJYpfAxuvqSdy8N8TupcBSQl6CoVSfo5LF01IU9EZ2xvQT1
9ztPDYqlI66qbxq8X5dAblD3FqNsOnqFH2PEfF+COOPHDOOq6ejUn5SAqN9L
MPrA2uGcRToyP+F9i2lvCayihNNxzumo+j8zquB/S0BVO+ZZ6puOjHWE3bwP
EMHLQCDCNzkd5RZWWNsyEUFQ8ijnckc6+v05UXj9OBF8K2S3iYPpSG3SfeX5
SSKEfTS85DSdjnYO3XrymJ0IxqVUofKb6UiRW5BnipMIV6WNHN7+SEfxkkem
9LiJUDtz1/zefjq6YdKno36WCB2v7oiGM2JRmHPpiS5+IjQTg1YOn8SihdBY
vNJ/RFiqaHY9xoFFUhkuIU3niTBecXA2iweLAqoNlW+KEIFdX+JE9zksGu+T
PVgtRoR9mlVmTyEsurB8plnqIhHaDVOJTSJY9PbvAc8SSSJgXALCoiWwqJ+Z
dF3kChHUD6WyfJPEorPnu3/lXCWCmVGO/+IVLHKCovJz14mw4XV+/ck1LOrQ
jbRPu0kEndOvHr66jkWcVo7ip+WI8FnPf57hJhZZ+TxYj1MgQtMnmXhpWSxC
CTJ5zEpEoO7ijtuhYOZibvOwO0QY+vXm1w3AIrNWqnP094iQe9hkmpWCK6YW
5/xViRBTEWHqRdl/ZKctmVqDCBk3w4tcKfmN6PIfemgRIaAudpnmBhYV8bxn
3b1PhLnEWEkuGSyiumw75KhHhIrBy02t0lh0X+V+xLY+EWauDtT/k8Ki7CdX
1KwMifAI52jQdRGLfr3moCc9IoIj3UyXgBgW3Qv72/bUhAiX4pyUmIWxKCVz
znfOlAjMubq0EQJYtF3TLGf4jAjLNbJyaXxYpDCQtTf6nAj1KkkycqexKGYl
sEbbkghXcl5LOrBg0crey9d4KyIczw+yuXoMi0KFL31ptSNCzZ5Muxs1Fs3K
sRTJOxKBr9HI9dduOrr44JdlvTMR9M58ijuyk45GfRuWyt4QIa0vVn9lPh2d
T8JiJd4SwcblcXbZWDpyL/EzLvCixJ8Y+siKT0dnZu6NZ/gTwXVW0zapOh0F
N18v1g0kAulw3+3uQoo/c0QCDocQIapTDuOJTUfN9kxSLyOIcOMoand8l46E
9f/Rc0cTwSjmTmGFazqKvrm9gI8lwuGLpRfevkxHZnSD4ZcwRAi/lyaZrpaO
ejaazZdSiGAf30r8czMdXR76dDMunQhP7zP4zImmo0OpseTdLCKs1Y1uyjFS
+kny4Z2mEso6T97JvYA0dJzjHo/DJwp/a9Q9eiZpyHVf5jt/BRGc0r6Nd11N
Q/c6uTICa4lwImA97/BKKiIbz+9rtFH86MsavXc1FYkFP6+YnSJC6/lMzLWy
ZBT3Sv99xCwR1m8mzG57JqN/OnfNFBaI0CVVc2L6XjLq573AnL1M8fvCpde6
sxhkV75pbf2FCFatN0sO/01CZfNOAn8PLQO/wI3brKcSkYy0XwzHpWVYptfx
utYag0ZNOa6kSC2Dvpa9IHjFIIewojE+6WX4Yhr8vUcmBhUQxzmFbixTvssM
CgOLohFPjCj2yu1lKMsSflYREYVovowW3jdYBgYL5RSsfATqzj/f/t5nGcZO
p+XntwcgI56+XeqhZYh4OS/bu62FmDjsy2tHloEv1zIoNUcZNZ1ksXMaXwaq
jqkjMCeDBI8YkkgzFNx49jDXzkXY+ro82kei4J4qltkBA/Dp3P+Usr8Mxxfm
qpya7SDXUczmmvAKKErkftaJ9AWDVwPnv4qsQA9bgU3bFT84aulILBBfAalz
+N/2U35g/7jGiO/yCrTMCnhanA2A6/duqxyWW4EXq6kqd7IDAc9rLDSiuwLC
+lotld7v4XvXe4Kt9wrQzR6uNJSKhmmGkRd/fVdg6MYo7VH7aGhW5dp6F7AC
xXrvnUWKoyECn/8nNWQFdrZiBov/iwHhwfZTvbErcJgW7NJOxILxBPWd8/kr
gKnxqie1x4Ei593esoIVyCcJ4Af+xMEFw4j7csUr8PX+FsNJ8Xj4Nc1j8qBs
BYKl3EUTo+Mhav66q3/DClx66rYUpZMAbStOHxYGV6Dja1emQnkiFAjVX7Qe
WYGwf0ObArOJEG1xoOrX2AqYXMHSax5KAhNyVMuxmRUYzHNndNJJgt+bxTM3
V1ag/gxHzupKEsyL/3zauboCXvH8XWv0GGi3lV3TWV+BAyOk9QuiGIjZ6fnx
8ssKZGtQCb98hQHxH6vHkv6swPARQdvONQywSl+ME9hfgZq3OIOKw8nw97UL
10cqEkQbnK+fOZcMXbuHznccJIFeqWzwxMNkKJFRL75PR4LSv3sDBQ7JEP8m
9vIcPQlUN8RUq0KTwWzvnMKPYySg8W/scapLhnuyLzu8mUkw/5w4KTiUDBc9
S9WPspCA9QvdBabVZNinkjfk5yRBlGT5lAdzCizJBy4Uc5GA5eyszUHBFOj2
6Xt+nZeSP/xuXtPVFEg4YOyozU+C3if6ZaOGKbD/lO3ygCAJ/rNXHJ59mQJm
n/u/a5wnQdeHwrtn36RA19ngCvwFEtjkFA6nB6WAhM+t12piJCjwMZIxiE+B
uIW/0j0SJBD3GFBUz0yBv3IVv+5JUs53OffZvSQFOv4JuSlfJYGleI1tYFsK
iD0myLTLkOBxkOiDZ/0pENOA+aN0kwR2MMXrPpECv7l161qABI42U6U9Cylg
4sHkcUuBBK+lbu/praZA23T7zWZFEpRoS37h3E4BkRve+3J3SCBUUu3P/iMF
ojAyCN0lwXDtZoXGnxT4+furp6wqCYI+Ev0b/6WAkUGhXL06CX7WF/2ypE2F
5mpz6htaJFCj1ePUOJQKQhx8zTX3SZDvSfhtRZcKYS4TPtf0SGAyrFPcciQV
vo1F3arSJ0HcepaWHn0qGEirHpA2JAFnQCvVWQpujDvYWv6IBFcwCfP/UfYL
/mjwlzIhgVfBT44Xh1MhVNfl9idTyvpGwSThQCrslF08fOkZCXY07HUTqFNB
/xS5veQ5CSIctpoC91KgwSEzUNySBAoOlUZlv1KAf+jR3SIryn3jbz8//TUF
gi+x0Yu+IkED8d9/DZTvg+3I/q4PdiQwjRdeSyamgN6XoBBhRxIEvtzaq5xJ
gTrNW6p5ziSQmdetOjaSAmdL/jIKuZLAWVneIbM7BQKPVfRmvyEBdYf1e+em
FNi0eRUm8JZynri1ZUBFCujghTQyvSj+rM6wH85PgRpRwrFzviQQ+6B48klq
Cviv60TyBZKA4XDQmrRvCqypMGmnBZNgUurtSV/HFND80M7M854EVc2u1UzP
UoDLUibmdBQJ7LGGsau3UqBshTeeNZkE6RfYFOp/JQPnnYkHsakkODVza+X0
UjJ4ZUexn8KSQLtlowzhk0H12cGkE9kk2IgLfj2BTYYlwloyYwkJbtuOPrQA
Sv8oZD4KKaXwYxVAOCBA6T/sIx76chI4rUg9Ix9JBneT/rTDNZR+fW0YlzyA
gZOz5TiaFhJoVpLVcvQxEMbo4VHZRoKzAtXXv1/GAP11RX2rThKMPMNYOjNj
gCZh8OgongQtndymbJ1JsKO15ZI3QYLP755M/BChfI+1CmlobpHgzZde9wf9
CaD6bev8wR0SfJsIfOKMTYCOs5UHar6R4NrCfetZuwRAnko1535T/DtyTCLi
eAIUXTMV+HlgFWzUbH5mK8VDaCHmTwrnKuQWnlJnjYgFumnTUW3uVbj33w+J
UL1Y8KMX/niYbxVyBCzumHPFwpvnVeZ2AqsgEoaxV8+OAcszIwOKEquw7b9j
fu5TNCjHMuWSlVZBrAbDE1UaCQc9vHWu2a1C1jimJ68wGMq+rO8ih1WgKvXa
OCsQDGbm+mm3nVdB4N6k+z9MELRoiK/df7MKH5nW47+8CwS/szOeNv6rcPvB
Ca0zDwPgQMfVDxmJq+C1o6T0fdEbaE5uUzM1r4J67gHpW1Z2UPrOMCemZRUa
RkPySxVswfRvm+rp9lVQDKjLrLloQ5mjU+KFelYhxjfhwOEgC/CpUhG9NboK
LV+fJ01LmgC1cY6+y9oq8K2xdTY3SCKqPONiAvMazHOutlCVOaC29TGbNJY1
kJKR2LPcckShElpiRuxrYMT/fZVG2BmxVd0qHOFeA7qUb59jk12QWLvQhw6h
NXjBsuIh6+yBjIg72UWyayAixc1T7epLma+tzF/Kr8Hkx+c2eUx+iGRFFBBS
XINg7BX3ZZwfcvg2lom9uwZcRUcPXe70R8G09bgYnTUghVp9yGUMRNVn3qW6
Wa6Byxs6xv9ehqK3z6iMpa0p57Vfvji1E4oU81y5v71ag56fj/fjXd+jfgmr
ZGunNdgUF4847ReGSKCVZOK1BhvFn8VsbkcgVuPTcbfj1uCMbH7uT6koNI2N
0aVNXAPjfYMecdsohCMeZWnErME1toTr+PwoJGpNFXMNuwZ/mbe5pHmikaI7
MVKkYA0OKNAsBe1FI/uk4vfMzWvwQWhLqCc5FlX+TXrX3LIGS8/f0n/uiUV/
jQO87dvX4L8bVKFH/8aid+ceOQ32rMGQcbFogn4cSi6gfxQ1tganxrVVTI7E
owWmH3oKk2sgWNr7vF8yHgnaLWjuTK/B+RAQCX4Uj0ouVylqE9ZgPWGKbbQo
HrU2PBNh3lgDvWaB5BLlBER/RkuweYsSb2/wTd06AWn63uCz31mDZ+kXDMUi
E9DknZOnBn+uAefvRw4Fowlos7/xTyQNGb5kTKyE6CciScmC7/IHycCw/zWb
/XUicomN3/pymAxmjCXKczGJiNbAZlHrKBlCkOJRNnwiYl883X2CnQwWQZzj
p6WT0COlw61NnGRQeKHSaKqRhHA5Ow123GRwmIkZnzFPQiJWnaUDZ8lw5MLj
SzbRScgOX1bgLUAGxzM+Gj65SahCIj37ohAZ0LkjOh11SUj+u3NSpCgZtFii
jpIISSjggWmMvAQZ7B/Q9TV+S0I91WphXy6RYZ5tIKLzIAbpveX30bpKhh9z
A3YWAhiEmT/mTn2dDFVQiP8niUHzCn+cPt4kw1kxwZwWeQyyPDxoceIWGRb6
LgSPG2BQsUX90yYlMvAR+mn/M8egb925j+yUyaBx8c4YzhaDZMRiHpxRIUM6
U3K3ihsGeUZ4ag2oUfI7Mxed8cWglh1LFW9NMuSRz2nzh2AQva6e0sX7ZKDi
8Y68H4VBGpXysKBLBnULZtXiBAyK4RC9FqlPhj9nfz2XTsWgiTfskvKGZJCq
CR4g4zCIZ5ZW9MsjMhzIN3jTk41BT+W2BLEmZMiXlTCeyMOgXNwkn9ZTMhAv
MLgyF2DQxoE2TmpzMgR/PzPwuhCDLj3/eOrjCwr/wgt2R4owyKUzmenJSzJM
2K9ZtVPW6y8E0p2wIQOnzcnJj5T4K8NsvVG2ZMCbp6tv52NQiXtO5CkHMsQE
my8652LQeQFpvTgnMlhaatUoZWEQrreNk92FDK4Ov3eNsBjE5aw3l+hG0SMo
p7cuGYNieZYzTnuQocv77rNn8RjE1O70IsWTDKvubt/1IjEo8NVBUV4fMrid
d6+MDMYgavbYL+l+ZHi5eHmVhcKnWyN/xdl3ZICqS72LFL6/vShzywwig49q
Wv4fOwyyPqEIgqFksMm80/voBQYtVw/R5oaRwQ8f409vjEEmpk87zkdS9LAL
FqK5j0Han3y0ROPIwHHFIXFIBoO6DZlZixPIYLRrIFQkikGKB3CTEhgylLXh
z43wYpC0btNTqXQybMU8PUVPQ+FjT1OoAkcGpuyZTfadJCScPb8unUWGyTvh
VM4LSYjr5z+n6/lk0OWaaeVqSEJxaeEy9QVk2BHv9Xn+IQkdU+b9J1tMht+s
sUE0CUmIJlE2UKGMojeLYtWFV0loRcYj6W4DGfiLT1gasiQhk0XGx92NZMq7
7Sl4bS8RTYYkn1P7TIY9BjpBq6VE1DNdW6DZQYZWar/64ZJEVPr2d8ODQTII
CUYst8gnogv/BftODJPhdezfy0/4E1Fm3/8arvKoGvcoGlEKDWRKJaSnvOhR
EbGLXio9ZCoUjYSI5pFCxW0ebvfeT0UakebB0/ApQ6V6okFIvBDpfr+vUKpX
evfPs85Ze+1z9jlr7bPI9PDLftgtHWizlhDQPFX950e6RPyUVaxs6/l0YK3P
B+fefpgMJt1qNebTQyclcz5/6cfQ1sVch2V8+sxcnuuJ/n5Uuul/2jvJo+2d
yoZcB/pxR+afq/blPNpEYkjSc6wfx5N3JRur8mh5c/ffL8oI8WS4T12hg0vf
qJGduVFeiERZnfORWVxaW/9u3+BcIS4oR9876s2ld678kmW/SIjPzzWFSgpc
miNxZKmRmhBKBZsGlE0T6WkPzeaLbRQiV7o1ICshnh7etFTsvLMIX3ZB+nJO
FB1aXN2t6yLEqvy5FdYzomiFVTZVzEkh7IQ71peGRtLrFHn+tmeFGLQSBP0I
iqDPjswaMggQouZRm/cvp6t0X8lI33+xQqRuKxv7IBdKd2m1tPpVClEvdeSI
0rgPfb1fPkicFiJQyi80tNebdri1Vz2qRgiVLQkOzi1edJ/aS98bT4TwKChr
yLrpQQ8v7lauaxFCgrfefvLSGVpeWnhc4ZMQsWPqhWueHqRNeiXH82YzCBbu
aXWyPwapDLPMDXIMtH+pNsnEu6DJPmJn7RwGan/Yy7M1J7H3rUxa+wIGkVXD
0QuWuIl89jyT8aUMvOnAlLJeDwTULo8102Pg8usGVeYdiIJUqH08woAvtXWs
0isM3/2/S9rbM7BJd+Ov+BYGPavs/reOojijzHDwdDgqZGWLX7owUNSW2Zrp
eAVPgruNGt0ZqGZ6j2hs5+CNQ9DRojAGRxwvhk0TRkEFf2xbc5VBV4Kexlrb
aNgt/qSeG8FgVtFV7YTmaPS2WpDMWAa+A6+0P96JwYCxUpCAYtD+1dNoY34s
JH6roILzGByCWaa/RTzMxN3OTxQweCRn+E7qfDwi3y1z8C9mMJDxLVk5Px7y
fI6G5z0G+RE+Nc2yCVCSOnTveC2DUo6u7prGBKztH2nf2cGgzffz26GVXHjV
5f7d2MngfjHJMdrDxb10uxTTNwzylp/4NunPxWabeqet7xmIjZiOPnvKhWkz
77vuVwbSr6643XRMgm2+nrzyLwbn3XdP2+rHQ9mhEZkWMYLdsp88h67xICNx
f9YlcYLfQ9S3D1bx8MBm84y+GQSvDJtWVE/ysEzaeLJkLkHuUiE33p8P/9Lp
E8fnE/QEkvIzPD5a7erGFBcRXNR6OhxRzMflcvPhYBUC67quhLA+PnqdLBkL
DQKjzcnSxy0E2CI3t39yFYFldedtPUcBeBVtX4pWExQ6eMYY+QlgOsf640Id
gowHKjkS6QLcqFrU06hHMFVPNpcuE2DU5c278/oE2fWaiYUNAtymj7z5uEVU
L0UPbmYEmHpK9RXPiEAs+fKxlxMCHJ7f02FuTODwx/zq7NkUSmrS2yZMiMif
zgjPU6Iw67TziwIzAkHfwP5+TQpOC39rcbQgGP3m+Nh2A4Wqh1+a5+8i0L88
7jX9TwpnFF0bAvcRnDy1etP3wxSePNaqW2NFMLJQM3/DMQpLzrGPeg4SZJor
LC9yo+CrVFjLtSGwaKrZf9RX9B/UuT8wPUpg8nXhLMNgCis9dKr/syd4OjpH
fl84hRCV4Yo8J4LS4irda1EUXjeU/21/nKDXzsByXgKFtV5+5QonCRJf1xvW
8ihwVDeV1rkSlB0u+Zx2jcKHxvEifzcCpxUua0pSKRj4VBdouRO8HHKWHL1B
IXFZcN57TwJJS1PnszcpMM1GuQk+BAdTao0V0ymY+InfNvEnWCiXlj0syqeq
Pc4eDSS4c6aeO10U/3wWlpl7gWB1mq7ydhHe7gDT9KMXRfwXTFhWpFDIUZdO
mxNKMDbFfKcDRWHKi8bUx+EEnda2aw2SKBwKikr25RAEVESqmcVRKFq5i1oV
RUBUjCyvRlCY2SbH744hmNg59HX8skiPCy+4cfEEKtt0NDOCKFRqJiYYcwne
/8n764IXBYWO/XE/eQSpzENBtCuF0yELYm5TBD++njj4wkGkz++vIm1TCNKy
DN+aW1NQ6aQ4cjcIZpROCxyxoOB9yebKw5sESYu94t8YUni2WiXMO5Ngw4nd
l36soxAcmhbSdZuAO0UrpWEBhdk+kub2dwm2nJ6pHS9FgXI5Pac3n2CXsHpb
7pgAxTv009kSAr0nQ3EdrwUw3Hz9lGe5aB8Wdtz6LNrXptXTdUb/JkgOw8SO
ewL0yj9/NJUW3Veh51a5BAHcxddHhdcQHAjQ1z13QYDJH8n7Zz0i2HfH3fm3
UwIs7HTpnddAcKM1r4BrKMCOVLEZGq0ivYrY7ZwPfHTGHGu5207AqZezzXzK
h1NIE39tJ4HCguuhioV8nHfiaxi8Fc03oqN5XiAfBZraO3Z9JlB0vW7pJM3H
/PKj0V7/EazzcImRleIhPefxgbEJgoG649nqvUnQplYtuSDGIsQiOiejNglm
QT/zr0xnYX3zgMYrvyQEbot5fk2Wxeuu/L34l4ueZ9UKtctZTJWkt/QmJsKt
Ru2tiTqLhHXP8z66JGK8iJPZuJJFxjH3xkMGiZiXdECvXYsFh59zv+hf0b9q
Q6y+rGdxJiBWfJ16Au5+Ub4mY8EiN8GiMZIXhyspoXbdO1mUT6o4htvGwWkP
syLPksVfQsOIwWVxUKqsLPjLikWJxykdpdxYcGIOP4l0YLGFnjU+9WwMXPQE
g9J+LAztErenuEVg2WUFU8ksFv5MUOetpov4tSFw9sscFht6bIXhBhfxivnw
IusOi4v323z/uROCWKtiW5NCFk3GVs3ZV4IxqbnHI7SSxY9vvlD1DUTX85hU
8VYWu2/lqrYv9sC9sJ+Ore0sUo1kmhWZc0jcdFQjvZOFitmcmMaqs9iRubpk
a7eo3wdZZ1dVuOK+b3NDSB+Loo22nNo1jkjS0o2xFLJQ5asYrWy0w7me5H1L
WRZpiXsHpjXZYKWF67sHP1jcdMgSq9fZi2lT2jJif7KQ8Hl7zaLFAu9LN520
G2Mxcv9u9yK9bag8mb5Ge0LUP2eKYozeOvCWzByanGSRZPu4WFC+Z8v/rX7W
SA==
          "]]}, Annotation[#, "Charting`Private`Tag$8684#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
LzMoOw==
          "]]}, Annotation[#, "Charting`Private`Tag$8684#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.1054493197999374, 0.4688735906021676}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "20", ",", "x01", ",", "\[Delta]1"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, {3.761144500126153*^9, 3.761144511156642*^9}, 
   3.7611461626947947`*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"380cefd1-a03a-49d0-945c-2d8308cbf49f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}, 
   3.761144579613611*^9},
 CellLabel->
  "In[170]:=",ExpressionUUID->"aa9319e4-c24b-4dc9-a6f1-05862906c8e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[51]:=",ExpressionUUID->"a934dfed-c7ff-41a9-9334-e1f9e1c1dc96"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFznlIkwEYBvBNjSLBK5d9mdpAZ81A05GKNldTPMbSWaaCWJg3tMoGsUjE
0MI8KtH4yCOzQemYRy5NRR1zLBhLW2oecw5k2TzyiGrZUiuo933g4eH330PP
uJKYZUOhUGL+9O/GZZl1isUkNuVf7LgHrxoJVsR/Bz0h67uISDDv7eTLBuIc
ODnTMlBNZIIN/ne5lYQI3ESLv3OPKAEX7+nyLSNqwCmpT9vXNyRg+53itGjP
drCPYNU8XC4H3xgJjSC/9oLd5M5zVOoQuHueqx0NV4KV+Q3uqSsq8DfGSUfZ
5Tdgm02pk7uPBnxi52L32TYtWFvCGlEzR8FeD5Y3W1bfgZctxrmJgPdgyVK/
xqFqDOzg8XzNZBoHV+S9ym7y/gD+zpGacosmwaJAlXz/8BTY2KYq19FnwNb8
8bqjN/Vgv1O7t7P7Z8EdrVLfKQWa5ZogiFWjwz+REj8d+kwlk7e+gC6Y5pNi
FwO491pNYEUemq0PSdsSopWRhlKhCK1xY0wnFKFnB3qKaLVoyl69tlGBjm6m
53S6zeFf0oGhPoQ+XGU1zdDRP8UTGXbH0DJBWXoyB72PupG0lYumWAyuLkL0
yopmjHEdrZ6SCBIK0eKOFP6zh2jjBUVkbB9amySzTR9Cv+Y9Vhao0NXBIk79
CDrK8Uj42jw6cBfNamtGe1qpfQc+o38s6INPW9DSwftBtfZGMCm/9aXFCV3S
mtc5SEOnP+L6m73QvIqA1V/e6JDbHjJnJtpZaGGGsdDbl0yL8aHopVTdi0w2
ejJ+MEfMRauipIyqGHRnGPmxmY9uPF4q6UlE1w2ThWvn0b8BfG4maQ==
        "]], LineBox[CompressedData["
1:eJwtk3tQE3QAx3m0SDADBFEkdKM4VBAVZ2LG1w6VBOJhjlcGio5wyUO9K84A
KTE3I+R8TMAhKCWX7kQajxtNw5CM5SBqujqN3w/GxsSJwB4/5VHRXX987/PH
5+7z35ebmbdd6OTg4MCf3X989X1zTuZugnkNW64FVQ8g7qjjCV0WwZCLwbd4
ix6Bj+rHNfkEAQsv6v6INkLbbOpoLyXwMXlypDwzOoaV1hYJQe18/uZH4ie4
6vtlUFM5QVOnTCsYHsXnJSEVDZUEmYce/HX59hhyFX93XqohaF8c1dcgHEeq
sZfVXCK4L03ID3acwKrYgxln5ASD3k22lEAL/I5Enj7ZRKBZHNEmaLTA5Tuv
OydaCYLCbkSUrLZiYsgweex7gu5TnSfL5Fb0+7St/KyDgO6pv7dmqQ3qaHFm
YRfBsg/Svgots6GlKFX6iZrA+HhSHjlmQ9315eqDvQQZpoKf18baUaafmsnR
EqSk3Q7T1NpRsECzet+fBAuF/ryHI3bs2XZBuLefYNJd+iM/hCGuMK8qQ0+g
T5ClKrIYNjRu0qSZCOw76pLDzjEEDno4Jj0hMLHL+6tuMnh469cmThDwdH2V
PQ8ZpqOas2MZwam8u+G3xhlMh4/JoqYJqrN9vIUzDCNJK7IvOlC84BacofiH
YdfYfKclzhReykM/XHnGcF8yfV7GoehZ4JEYb2KICTDwfV+iCM85XHelh6FD
pek950pRfM34zS9XGdYlte7zfpkicmeF6qcjDPKnF5xPv0KxXvS7tCWagSc5
XuPuSbFybkho21yGSl7+G+VeFK5rAlufdtkxT5XS5+ZDMYCwIvHHdpQK3v5I
sogiK/lsf6O/Hc9Hl3Fc/Cj2RsXwqm7akCv2rC31p9hs5u4qTLJhiDu13olL
IS+0pUuNVvy64+7+mdcpxDe64wrGLNg62vzip0Gz/nyiuVdkgep4Td2z5RQ7
r3MSivon0NCeq7WEUqyID7jzmmIcxUs9No6EUyRzpyTWdaOwKp/f+3AjRfXX
7nNytWaI3hvMM0RQOK9axBeJHkPwhaKeRs72bsWr3zxqgnqJ7K30rRTKAZVr
p8swNilLdQ/eoTjTlfJtqNiA1u05B1JjKGRqXcVuzhCCzQI33bsUfv6S8g0l
gzjw25zuuHiK9P//8y8L1rmY
        "]], LineBox[CompressedData["
1:eJxN0WtIk2EUB/BNV2nlZUsITYupIy1NybJMSGyZl2ngMkzNKVoiJpq6D637
ytmUdBIy89K0ppaNmtlGWrMiNFBIy3XRmkunzXuW5CRrroJ4/+8Dh4ffl//h
nMNMy+Uet6JQKOF/698fIAsIFccNh1D+v15W0Ob5w3Bimd+nxiOw0cSSJCTB
+SmubDseXOxvq+Cnw05VFp5XBlxPNTF0mXBbv+E0O4eUz9dEMQSk/KHW5a4z
sDmsuVVwnpS/Xuoychlmt+dOKctI/czuJTENsE+G817qbfhRr8O8qpk0f93v
BFclqV/oe+/pdtI+ioq7xX3wOodvNp1LcH9HyZVIM3wtm7WyzwIzehKtP9JG
YFGXec4edvxVPb/BA147HqYr4MC0ZzVKj1r4xI4ng7YcA2FFZFr9UxO8MO3i
aJSOElYfCreu2D9G+EKEqE5lhJlDUQNy0RfCe3YVVjhvNxI+urHvJ1ULL/SU
Gk4Kxwlfp/H4XM8J7EevvmXVCa84J4wLypskTGnmKQ2MKdy7WlnKeAF3bBXb
0HOmCdOj8n0u2c8Q1vm+1go0cIssxHOMN0s4WRlId1uGL4puCnV3vxK+N+FW
Yx89R1h8Q5SqPwgf486y7sfCrhpNS0w8XCJJenk1Dc4MrPq+WgC7FzpFrGqC
l3eftftwBx6cHe1vUsDl8Q+TDzyALVu4BSINrHsjkVlr4baixXTtO7giOMVb
PgBzGrep9unhx6dedQsnYanvTknsDJxnqI1jzsFe0dmfn/+AadS3DeWL8LA6
OCt1CdZkyf38zXDlpjULFgv8B0Y1KkE=
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$19237#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 1.4999269216211255`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7611468355489216`*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"137fa2e8-efdb-4c46-b264-0d3ceaf3ed4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
     RowBox[{"bk", "[", 
      RowBox[{"x", ",", "49", ",", "x01", ",", "\[Delta]1"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761146212930335*^9, 3.7611462149061003`*^9}, {
  3.76114662322714*^9, 3.7611466616386967`*^9}, {3.761581697311778*^9, 
  3.7615816978395405`*^9}, {3.7615817298785543`*^9, 3.761581730808015*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"5acf2dd2-d31d-4ba8-b5c1-b05cd4f80ed0"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
lg==
          "]]}, Annotation[#, "Charting`Private`Tag$564046#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
lg==
          "]]}, Annotation[#, "Charting`Private`Tag$564046#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
H+n/ACZJn6M=
          "]]}, Annotation[#, "Charting`Private`Tag$564046#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
VVFe+P//u/wPIJvQAw==
          "]]}, Annotation[#, "Charting`Private`Tag$564046#4"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
ICs03s/MsFwffdHz5X+Y/wGLPrAC
          "]]}, Annotation[#, "Charting`Private`Tag$564046#5"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.772079, 0.431554, 0.102387], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
N5dLrB/3ROy+ssov8cldzjuf3CvcuuygNgp53bmU4/QFRHte9dqE9igG25dy
zR8XEAWhoArpm6NYc/DFYvJgAREz6eVK1h8F+2ctNSOhQsKfu+3peqNRrMyy
XntgX0i4vlwdNTBZ5WPlLdSsLiRMAsFnmy1GMf9oSPvDt0Ly26gv6rDtKPba
Pnrfz1VE1ERuUAUdRqGDdXdchItI9poP7iddR7EtacP+Eekisr79kd1pr1HQ
MSjOlJ0vIrrhv8wk/EcxmRH0ik6iiJTdcTSUDhrFTKtpcBxfEWE7tvGGfPgo
1MXeS7sxFpF7y1TVyzGj4DzwuCljrJDUNHBdUElcPU/rCxpzymq+1CQJjbRR
OGuYxOTfKiTmOgInr2ePwowzMT15ayFpPVTCp1cwiiZ+/a2/ywrI/u8Su++W
jmL2TuhCu0oBsa9u3Gb0YhRSwfNXJd/kkwGvKxtNaKOQ7RflsbiTTzx4by1Y
t4xCcm/50jtqLnnzeXravnMU/BHbLmlp5pDTZebjzn2j4OJksd7DmE0+Kbq2
+L4eBV+Gsc8awQwiw7mJRn03CjWXYgOj5DQS/T6kJPTjar6j4p41jKlE8Wla
fPy3Ubga5ijfjE0kqXJCoSm/RtFWN9mu3h1P/m557pO5MopC0ZMMJz/HkPz0
FqviDWOwM+/MrzsSSrYNfLnczDWGhcsp0V7BVsQ4wUq6fc8Y3ljxl0SEqZN6
43+iPfv/R9F1x2P5fmFSKQ0SZZVQsipJicqxyUpkSxKKJLOSvfd67T1DIlsI
t00JGdEw3j0V+ZKS6vf+/jyf+7mf+zrXua7znPuf950D2el9VKvVu/CI7YDY
3Ok5kDj9fqkxOQo+ycr/WlabAymVt2mBQfkgt9XxbU17DrJCB10aVosgdkiT
+Et/Dji+1kTcFymFy7bm42zmc+DSI/5mxrUCCuOePjt8fw5Wt/5yncmohZ9m
bLlC7nNwNH+Z/Le7DoxE45NFfOYgYlLZPLC2Hra15ftJB81BVBG7c6dXI1iH
i3vIhs+BTm+tuopOEzRdq3U6HzMHmd677fHczeBI7r4OqXPQ+SG9VS66Bbrq
r2prZM1B3QRi6zv7Cg4FTF6+mj8HRSNiDxXGX8FDHWs5wxLmeeKfovbZtcLw
QeJJk4o5uHv/zdNhQiuILLoesaieg2VIdv5u2QZPq9a5b9bPwe+fvJ2He9tg
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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$564046#6"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {-0.17736777289327435`, 1.02583202754877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "1", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "2", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "3", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "5", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "10", ",", "x01", ",", "\[Delta]1"}], ")"}], 
       RowBox[{"bk", "(", 
         RowBox[{"x", ",", "49", ",", "x01", ",", "\[Delta]1"}], ")"}]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.528488`", ",", "0.470624`", ",", "0.701351`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.772079`", ",", "0.431554`", ",", "0.102387`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm], ",", 
               TagBox[#4, HoldForm], ",", 
               TagBox[#5, HoldForm], ",", 
               TagBox[#6, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.761144141994855*^9, 3.761144593104951*^9, {3.761146210047539*^9, 
   3.761146216545732*^9}, {3.7611466243191996`*^9, 3.761146665080095*^9}, 
   3.76114683973637*^9, {3.7615816991914945`*^9, 3.7615817380292735`*^9}},
 CellLabel->
  "Out[172]=",ExpressionUUID->"d9a056fb-fd56-466f-b643-9b6e92c53ab6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["As Initial Velocity", "Section",
 CellChangeTimes->{{3.761148538920209*^9, 3.761148543077918*^9}, {
  3.761148574923795*^9, 
  3.7611485770870066`*^9}},ExpressionUUID->"7c7578f5-c6cf-4ea9-992d-\
5ca386ffa74d"],

Cell[CellGroupData[{

Cell["Full Solution", "Subsubsection",
 CellChangeTimes->{{3.761148258736432*^9, 
  3.761148261187578*^9}},ExpressionUUID->"9d9d6986-8023-4cb4-9597-\
260d4ef62db5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"u", "[", 
    RowBox[{"x_", ",", "t_", ",", "k_", ",", "x0_", ",", "\[Delta]_"}], "]"}],
    ":=", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "n", " ", "t"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761147096103902*^9, 3.7611471108746896`*^9}},
 CellLabel->
  "In[204]:=",ExpressionUUID->"f248b5d2-bc1d-4ee6-9469-95a767a6e81b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]31", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x03", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{{3.761147465637354*^9, 3.7611474657969275`*^9}, {
  3.7611482252018476`*^9, 3.7611482264165974`*^9}},
 CellLabel->
  "In[205]:=",ExpressionUUID->"90a93809-994a-4f8b-a3a3-7630f83950cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "t", ",", "40", ",", "x03", ",", "\[Delta]31"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".0001", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761147147696808*^9, 3.7611473394947453`*^9}, {
  3.7611475245235133`*^9, 3.761147540654536*^9}, {3.761148229190751*^9, 
  3.761148235786281*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"e49d51a2-83d9-4e89-bcd7-a62b7c06b01f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1.3495923868468906`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.0001, 4}}, Typeset`size$$ = {
    360., {110., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$340221$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$340221$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`u[$CellContext`x, $CellContext`t$$, 
         40, $CellContext`x03, $CellContext`\[Delta]31], {$CellContext`x, 0, 
         1}, PlotLegends -> "Expressions", PlotRange -> {-1, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0.0001, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {170., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.76114728376038*^9, 3.7611473426534643`*^9}, {
   3.7611475279399357`*^9, 3.761147542785921*^9}, {3.7611476067279005`*^9, 
   3.7611476215590057`*^9}, {3.7611482326484995`*^9, 3.7611482366768703`*^9}, 
   3.7615061586091995`*^9, 3.761518330374486*^9, 3.7615814335795364`*^9, {
   3.7628082257327623`*^9, 3.7628082320232286`*^9}},
 CellLabel->
  "Out[206]=",ExpressionUUID->"7f25524a-e051-4840-a0d2-d90a1581d9a2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]2", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x02", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611476003937597`*^9, 3.7611476013661575`*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"df1f56ff-9c40-44ee-a205-534eb990237a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"u", "[", 
      RowBox[{"x", ",", "t", ",", "4", ",", "x02", ",", "\[Delta]2"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".0001", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611475890863323`*^9, 3.7611476360794973`*^9}, 
   3.7615844226517124`*^9},
 CellLabel->
  "In[229]:=",ExpressionUUID->"cbad48c3-1266-4b80-9238-0cbbe38d5219"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 0.0001, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.0001, 4}}, Typeset`size$$ = {
    360., {114., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$651940$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$651940$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`u[$CellContext`x, $CellContext`t$$, 
         4, $CellContext`x02, $CellContext`\[Delta]2], {$CellContext`x, 0, 1},
         PlotLegends -> "Expressions", PlotRange -> {-1, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0.0001, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {161., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.761147591993555*^9, 3.761147638961808*^9}, 
   3.7615061788478813`*^9, 3.761581461400363*^9, {3.761584419466614*^9, 
   3.7615844457760286`*^9}},
 CellLabel->
  "Out[229]=",ExpressionUUID->"5dc81b65-cf0b-4bd7-b1e5-3a6822f73254"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energy", "Subsection",
 CellChangeTimes->{{3.76114845743458*^9, 
  3.761148458333177*^9}},ExpressionUUID->"14353b11-890f-4476-a62f-\
42f0a52d3a28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", 
   RowBox[{"n_", ",", "x0_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.7611481178511353`*^9, 3.7611481886890707`*^9}, {
  3.761520716561061*^9, 3.7615207241823463`*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"d829492e-df30-4a01-97e9-51abfd1f26b0"],

Cell[CellGroupData[{

Cell["delta = 1/100", "Subsubsection",
 CellChangeTimes->{{3.7611442262145195`*^9, 
  3.761144232296647*^9}},ExpressionUUID->"6daf96d7-24c5-4982-b81e-\
c1aae6b0e336"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, 
   3.761144293485469*^9},
 CellLabel->
  "In[142]:=",ExpressionUUID->"57d6efd4-543e-44ad-b6a8-1df523d67db0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611444170292478`*^9, 3.7611444236934347`*^9}, {
  3.7611482831216097`*^9, 3.761148369853794*^9}, {3.7615207738111787`*^9, 
  3.7615207745842752`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"a4cfd14b-0fa1-43c0-85fe-ad90989c45e4"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{10., 0.}, {10., 0}}, {{20., 0.}, {20., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.00019733621433539985`}, {1., 0}}, {{2., 
        0.0007134350057743509}, {2., 0}}, {{3., 0.0013498656601291582`}, {
        3., 0}}, {{4., 0.0018622124969786566`}, {4., 0}}, {{5., 
        0.002054191104973172}, {5., 0}}, {{6., 0.0018529361714781029`}, {
        6., 0}}, {{7., 0.0013364493000402023`}, {7., 0}}, {{8., 
        0.000702823146614463}, {8., 0}}, {{9., 0.00019343123936482024`}, {
        9., 0}}, {{11., 0.00019150334672768602`}, {11., 0}}, {{12., 
        0.0006888815215553019}, {12., 0}}, {{13., 0.0012968735597628336`}, {
        13., 0}}, {{14., 0.0017801196233334735`}, {14., 0}}, {{15., 
        0.0019537501705629654`}, {15., 0}}, {{16., 0.0017534432458616723`}, {
        16., 0}}, {{17., 0.0012582910497287044`}, {17., 0}}, {{18., 
        0.0006583635675160713}, {18., 0}}, {{19., 0.00018027298794755296`}, {
        19., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7PuKa3Qa72raQwUcqoodmXYluEP5HA7zr/ub
75cNg/IFHDjDSwrXN8VB+SIO7z5uKv58OQHKl3BI8WgROB4Nk5dxKPsU0lT5
NBTKV3DgavpjtpUdZr6Sw/dl2zZWRsHsV3FgQAFqDv4JPyxOSsLkNRzYxPvO
HpzkBuVrOejvWptYbQ8zX8dB45/2kxitWChfz+HKlpOL/Blh7jNwOCweF1m5
KwbKN3TwThfetXxuCJRv5NB898m/A5NcoXxjBwmjGzpfF6hD+SZw9wEA399K
5g==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {0., 0.002054191104973172}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761144410919673*^9, 3.761144426004262*^9}, 
   3.7611461364831066`*^9, {3.7611483131987014`*^9, 3.7611483702437763`*^9}, 
   3.7615207274651814`*^9, 3.7615207752708764`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"2271c78f-af0b-4043-9df8-8f620779c5cb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
   3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
   3.7611440902338066`*^9}, 3.7611444455438347`*^9},
 CellLabel->
  "In[145]:=",ExpressionUUID->"6ba6663c-0a79-4b26-a14d-921ba41e5b66"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, 
   3.7611439802455397`*^9, 3.7611440554388747`*^9, {3.7611444571292562`*^9, 
   3.7611444594296117`*^9}, 3.761148394418605*^9, {3.761520781077097*^9, 
   3.7615207819210353`*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"98e7fda9-a21a-4a36-bcf1-f599b71ddc99"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{7., 0.}, {7., 0}}, {{14., 0.}, {14., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0003890351233959346}, {1., 0}}, {{2., 
        0.0012622441108915828`}, {2., 0}}, {{3., 0.0019602897493178548`}, {
        3., 0}}, {{4., 0.0019568682843681077`}, {4., 0}}, {{5., 
        0.0012556458140882778`}, {5., 0}}, {{6., 0.00038565108411675944`}, {
        6., 0}}, {{8., 0.00038296178058779977`}, {8., 0}}, {{9., 
        0.001238192574416095}, {9., 0}}, {{10., 0.001916202382117715}, {
        10., 0}}, {{11., 0.0019061481362543798`}, {11., 0}}, {{12., 
        0.001218802885543066}, {12., 0}}, {{13., 0.00037301740393647797`}, {
        13., 0}}, {{15., 0.0003678034319185976}, {15., 0}}, {{16., 
        0.001184964586422179}, {16., 0}}, {{17., 0.0018273040935092542`}, {
        17., 0}}, {{18., 0.0018112292710833178`}, {18., 0}}, {{19., 
        0.0011539639397309183`}, {19., 0}}, {{20., 0.00035190391457739974`}, {
        20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQDQEf7EvrTyq+rbO0hwo47BN39LZZFwLlczgYvFna
zcafAOULOGzhElt5kx3GF3HQCrXN7Z8EUy/h4GDicFrNDWaejAMDClBw2Mp6
IIhDEiav5PDtiL16tCdMv4qD4X3hJUqp8VC+msPhCyy/vlnB+BoOkcfVF7H/
CIbytRyaN/ztMSyygPJ10OzTc/iZpLhtuxRM3sBhcUcgp1QWTL+hQ8HnSVdc
PsRC+UYOZV/Z599YA+MbO8zVKYwQfhEE5Zs4fOT/cPY7v7k9ALIGRqs=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 20}, {0., 0.0019602897493178548`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439698689585`*^9, 3.761143982754935*^9}, {3.761144058387106*^9, 
   3.7611440952600126`*^9}, {3.761144452064659*^9, 3.7611444619807854`*^9}, 
   3.76114614562228*^9, 3.761148397037572*^9, 3.761520784541665*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"7f8e0f0f-36b4-4cbb-b86b-d5c00a31244b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{3.761144108937559*^9, 3.761144493334594*^9},
 CellLabel->
  "In[147]:=",ExpressionUUID->"3d596e68-6e03-4348-90b3-792be48546b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761144502139766*^9, 3.761144509016369*^9}, 
   3.761148404201439*^9, {3.7615208090580797`*^9, 3.7615208354711685`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"a529df3a-918c-410e-86e9-ce0c5f9eca46"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{3., 0.}, {3., 0}}, {{6., 0.}, {6., 0}}, {{9., 0.}, {
        9., 0}}, {{12., 0.}, {12., 0}}, {{15., 0.}, {15., 0}}, {{18., 0.}, {
        18., 0}}, {{21., 0.}, {21., 0}}, {{24., 0.}, {24., 0}}, {{27., 0.}, {
        27., 0}}, {{30., 0.}, {30., 0}}, {{33., 0.}, {33., 0}}, {{36., 0.}, {
        36., 0}}, {{39., 0.}, {39., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0015498987490239328`}, {1., 0}}, {{2., 
        0.0015487392597933476`}, {2., 0}}, {{4., 0.0015441086259298156`}, {
        4., 0}}, {{5., 0.001540643328729879}, {5., 0}}, {{7., 
        0.001531434625123053}, {7., 0}}, {{8., 0.0015257028195187665`}, {
        8., 0}}, {{10., 0.0015120203290589166`}, {10., 0}}, {{11., 
        0.0015040868120773136`}, {11., 0}}, {{13., 0.0014860848621550031`}, {
        13., 0}}, {{14., 0.00147603888924372}, {14., 0}}, {{16., 
        0.0014539193810621355`}, {16., 0}}, {{17., 0.0014418732397697427`}, {
        17., 0}}, {{19., 0.0014158824291005813`}, {19., 0}}, {{20., 
        0.0014019696530717832`}, {20., 0}}, {{22., 0.0013723942446307877`}, {
        22., 0}}, {{23., 0.0013567675023486495`}, {23., 0}}, {{25., 
        0.001323930132926547}, {25., 0}}, {{26., 0.0013067588317236558`}, {
        26., 0}}, {{28., 0.001271013028535525}, {28., 0}}, {{29., 
        0.0012524806796069248`}, {29., 0}}, {{31., 0.0012142053897789841`}, {
        31., 0}}, {{32., 0.0011945067841530343`}, {32., 0}}, {{34., 
        0.0011541005786555197`}, {34., 0}}, {{35., 0.0011334388272289302`}, {
        35., 0}}, {{37., 0.001091313887740778}, {37., 0}}, {{38., 
        0.0010698973805004606`}, {38., 0}}, {{40., 0.0010264733805611082`}, {
        40., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7HdFSMvsT4m0hwo4NPsqyT2Kh/E5HBhQgIBD
xBQD5jIfmLyIw9OsHt23tjC+BJp6GYcrkgkZvuIweQWHkNtL3zr9j4DyldDU
qzhk/PQrv38UJq/mICh45NWMJTC+Bpp6LYcrHsUV4pEweR2H5srCDV/0YHw9
NPUGDltehPDoXQqHyhs6MP+ynLV8PoxvhKbe2MGOfbreEiOYvImD3+2rxZ4/
wqB8UzT1Zg4tQeWStjUweXMH6XBH5k1WML4FmnpLBzemh+rfN4RC5a0cuMu7
53zMgPGt0dTbOHTX/b7BfDkEKm/r8GPnpscerTC+HZp6e4e2ehWZ/U+CofIO
Dl09K57IT4LyGxzQ1Ds6eG0p41/2Iggq7+hw07dqzZ+JUD6DE6r6BieHsm/u
sb4PA6Hyzg66p2ZMqGyH8huc0cx3cfj2KDEt/GKAPQCd1Ha3
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 40}, {0., 0.0015498987490239328`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, {3.761144500126153*^9, 3.761144511156642*^9}, 
   3.7611461626947947`*^9, 3.7611484068896875`*^9, {3.7615208105821357`*^9, 
   3.761520836178852*^9}},
 CellLabel->
  "Out[149]=",ExpressionUUID->"3d2d512a-6b20-4d81-bfa1-3ff1cd6835aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}, 
   3.761144579613611*^9, 3.761148409023014*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"b25b534b-af91-4a11-8001-a89aaed153d7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "40"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611484107873096`*^9, 3.7611484185625067`*^9}, {
  3.7615208456497736`*^9, 3.761520851461277*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"0115ec2e-529f-4993-a988-8e42322d3f2b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{2., 0.}, {2., 0}}, {{4., 0.}, {4., 0}}, {{6., 0.}, {
        6., 0}}, {{8., 0.}, {8., 0}}, {{10., 0.}, {10., 0}}, {{12., 0.}, {
        12., 0}}, {{14., 0.}, {14., 0}}, {{16., 0.}, {16., 0}}, {{18., 0.}, {
        18., 0}}, {{20., 0.}, {20., 0}}, {{22., 0.}, {22., 0}}, {{24., 0.}, {
        24., 0}}, {{26., 0.}, {26., 0}}, {{28., 0.}, {28., 0}}, {{30., 0.}, {
        30., 0}}, {{32., 0.}, {32., 0}}, {{34., 0.}, {34., 0}}, {{36., 0.}, {
        36., 0}}, {{38., 0.}, {38., 0}}, {{40., 0.}, {40., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0020665316653652437`}, {1., 0}}, {{3., 
        0.0020624112076920984`}, {3., 0}}, {{5., 0.002054191104973172}, {
        5., 0}}, {{7., 0.0020419128334974042`}, {7., 0}}, {{9., 
        0.0020256382365724636`}, {9., 0}}, {{11., 0.0020054490827697514`}, {
        11., 0}}, {{13., 0.0019814464828733377`}, {13., 0}}, {{15., 
        0.0019537501705629654`}, {15., 0}}, {{17., 0.0019224976530263236`}, {
        17., 0}}, {{19., 0.0018878432388007749`}, {19., 0}}, {{21., 
        0.0018499569511787903`}, {21., 0}}, {{23., 0.001809023336464866}, {
        23., 0}}, {{25., 0.001765240177235396}, {25., 0}}, {{27., 
        0.0017188171215189998`}, {27., 0}}, {{29., 0.0016699742394758997`}, {
        29., 0}}, {{31., 0.0016189405197053123`}, {31., 0}}, {{33., 
        0.0015659523177444863`}, {33., 0}}, {{35., 0.0015112517696385735`}, {
        35., 0}}, {{37., 0.0014550851836543706`}, {37., 0}}, {{39., 
        0.0013977014232821995`}, {39., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGDQAGIQDQEf7GsmpO+98jbBHirgwIACOBz2zmWeZvAUJi+A
Ji/i8O7jpuLPl2HyEmjyMg6Pd7+aZbwLJq+AJq/kEPUuwl5oBkxeBU1ezWFb
gq777lyYvAaavJbD49bvv1KsYfI6aPJ6Dle2nFzkzwiTN0CTN3Rg+fFdqas+
HipvhCZv7BC0Rc7O4F0cVN4ETd7UgdNwrZqHP0zeDE3e3OG8XDjLjMWxUHkL
NHlLBw5mHdMvr2Og8lZo8tYOf6JPXLHVhMnboMnbOnz9PkM/MSYaKm+HJm/v
EPe/VTWkLQoq74Aq3+DgoHSisl5kRSRU3hFN3tFBca+v9bJDEVB5JzR5J4e5
HlsvCl4Ph8o7o8k7O2zZfLgy6VkYVN4FLg8AfLhhAA==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 40}, {0., 0.0020665316653652437`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611468355489216`*^9, 3.761148419008313*^9, {3.761520842465353*^9, 
   3.761520852070762*^9}},
 CellLabel->
  "Out[153]=",ExpressionUUID->"192dfd52-f80e-4ec3-82fc-7aeff633922e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["delta = 1/10", "Subsubsection",
 CellChangeTimes->{{3.7611442262145195`*^9, 3.761144232296647*^9}, 
   3.7611484704266963`*^9},ExpressionUUID->"24cf5530-670e-49cf-a813-\
8ec1023c100a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, 
   3.761144293485469*^9, 3.7611484727500343`*^9},
 CellLabel->
  "In[183]:=",ExpressionUUID->"bafbfe53-ad98-4c7a-817b-c4557be2edb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611444170292478`*^9, 3.7611444236934347`*^9}, {
   3.7611482831216097`*^9, 3.761148369853794*^9}, 3.761148482473084*^9, {
   3.761520863371172*^9, 3.7615208640414953`*^9}, {3.7615819574369903`*^9, 
   3.7615819575427017`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"0c6511bd-a386-4ccc-bb6b-094de8e57c28"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,184,210,23311836452093647078,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7615819605099745`*^9},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"82ebe0f9-9ff4-46f4-a935-741645405553"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,184,211,23311836452093647078,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7615819605723104`*^9},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"184ab8a2-585c-44d7-91bb-26698cca25cd"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{10., 0.}, {10., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.019251345800656867`}, {1., 0}}, {{2., 
         0.06458248031164351}, {2., 0}}, {{3., 0.10764810008310793`}, {
         3., 0}}, {{4., 0.12379385264723651`}, {4., 0}}, {{6., 
         0.07078807948615577}, {6., 0}}, {{7., 0.03447056747306917}, {
         7., 0}}, {{8., 0.011049498429603566`}, {8., 0}}, {{9., 
         0.00161322510838078}, {9., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{1., 0.019251345800656867`}, {2., 0.06458248031164351}, {3., 
     0.10764810008310793`}, {4., 0.12379385264723651`}, {6., 
     0.07078807948615577}, {7., 0.03447056747306917}, {8., 
     0.011049498429603566`}, {9., 0.00161322510838078}, {10., 0.}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 10}, {0., 0.12379385264723651`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761144410919673*^9, 3.761144426004262*^9}, 
   3.7611461364831066`*^9, {3.7611483131987014`*^9, 3.7611483702437763`*^9}, {
   3.7611484741792097`*^9, 3.7611484826815004`*^9}, 3.7615208649198694`*^9, 
   3.7615819605819826`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"42aa065b-0a69-4b5c-b611-36fed67de0a1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
   3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
   3.7611440902338066`*^9}, 3.7611444455438347`*^9, 3.761148489973461*^9},
 CellLabel->
  "In[156]:=",ExpressionUUID->"bf18a375-e33a-483e-87ad-70934cef161b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, 
   3.7611439802455397`*^9, 3.7611440554388747`*^9, {3.7611444571292562`*^9, 
   3.7611444594296117`*^9}, 3.761148394418605*^9, {3.7611484925750723`*^9, 
   3.7611484961072536`*^9}, {3.761520870132897*^9, 3.7615208708811207`*^9}, {
   3.7615964460034733`*^9, 3.7615964461590242`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"83f6b1d7-9e8c-499a-b9c1-fb0d486db520"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,260,326,23311836452093647078,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7615964468990765`*^9},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"955c0d9a-2538-4cbb-a8be-b8fce60b6e89"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,260,327,23311836452093647078,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.761596446973876*^9},
 CellLabel->
  "During evaluation of \
In[260]:=",ExpressionUUID->"cefc1768-1204-47aa-9a8d-1e31ee86fa2b"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{7., 0.}, {7., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.037952738245839716`}, {1., 0}}, {{2., 
         0.11426248331011506`}, {2., 0}}, {{3., 0.15632775420501327`}, {
         3., 0}}, {{4., 0.13008626267848128`}, {4., 0}}, {{6., 
         0.014733103069925108`}, {6., 0}}, {{8., 0.006020768686385209}, {
         8., 0}}, {{9., 0.010326580942240338`}, {9., 0}}, {{10., 
         0.006848299227132728}, {10., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{1., 0.037952738245839716`}, {2., 0.11426248331011506`}, {3., 
     0.15632775420501327`}, {4., 0.13008626267848128`}, {6., 
     0.014733103069925108`}, {7., 0.}, {8., 0.006020768686385209}, {9., 
     0.010326580942240338`}, {10., 0.006848299227132728}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 10}, {0., 0.15632775420501327`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439698689585`*^9, 3.761143982754935*^9}, {3.761144058387106*^9, 
   3.7611440952600126`*^9}, {3.761144452064659*^9, 3.7611444619807854`*^9}, 
   3.76114614562228*^9, 3.761148397037572*^9, {3.761148492920149*^9, 
   3.7611484963046913`*^9}, 3.761520873650426*^9, 3.7615964469818225`*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"19806974-4308-4901-98ce-8c8add3b0887"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{
  3.761144108937559*^9, 3.761144493334594*^9, 3.7611485054297543`*^9, {
   3.761581941286716*^9, 3.761581942226096*^9}},
 CellLabel->
  "In[179]:=",ExpressionUUID->"ae72bd70-2e24-4155-a8eb-c1a87835941c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761144502139766*^9, 3.761144509016369*^9}, 
   3.761148404201439*^9, 3.761148503221201*^9, {3.7615208842017994`*^9, 
   3.76152088695107*^9}, {3.7615819372705803`*^9, 3.7615819375462*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"77d19aee-d4c7-456b-a245-53f802300715"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,180,206,23311836452093647078,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.761581944206317*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"0f2325c3-8011-49d1-9a79-8129113986e7"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,180,207,23311836452093647078,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7615819442841063`*^9},
 CellLabel->
  "During evaluation of \
In[180]:=",ExpressionUUID->"03bef89d-2b99-4cb3-8e36-00ab49b5c7bf"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{3., 0.}, {3., 0}}, {{6., 0.}, {6., 0}}, {{9., 0.}, {9., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.15120203290589168`}, {1., 0}}, {{2., 
         0.1401969653071783}, {2., 0}}, {{4., 0.10264733805611083`}, {
         4., 0}}, {{7., 0.03949975548964754}, {7., 0}}, {{8., 
         0.023986476526166575`}, {8., 0}}, {{10., 0.005403796460924682}, {
         10., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{1., 0.15120203290589168`}, {2., 0.1401969653071783}, {3., 
     0.}, {4., 0.10264733805611083`}, {6., 0.}, {7., 0.03949975548964754}, {
     8., 0.023986476526166575`}, {9., 0.}, {10., 0.005403796460924682}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 10}, {0., 0.15120203290589168`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, {3.761144500126153*^9, 3.761144511156642*^9}, 
   3.7611461626947947`*^9, 3.7611484068896875`*^9, 3.7611485105000677`*^9, 
   3.7615208876474977`*^9, {3.7615819379419985`*^9, 3.7615819443000016`*^9}},
 CellLabel->
  "Out[180]=",ExpressionUUID->"d9483531-d1e5-48f9-9766-bcc7f6ac236c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}, 
   3.761144579613611*^9, 3.761148409023014*^9, 3.761148513609749*^9},
 CellLabel->
  "In[185]:=",ExpressionUUID->"9dc24396-7093-4bbd-b7e0-bce0f4ca236f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611484107873096`*^9, 3.7611484185625067`*^9}, {
  3.7611485158224435`*^9, 3.7611485160528264`*^9}, {3.761520895286707*^9, 
  3.761520895760393*^9}, {3.76158192436067*^9, 3.76158192446282*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"91ffb521-ecf2-4d6f-bff8-09ba84c6a783"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,186,212,23311836452093647078,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.761581950420844*^9, 3.761581965350402*^9}},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"666771b7-4984-4d5e-9616-a5198c47d22a"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,186,213,23311836452093647078,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.761581950420844*^9, 3.7615819654335184`*^9}},
 CellLabel->
  "During evaluation of \
In[186]:=",ExpressionUUID->"b488ff33-aab4-4c81-92f3-8a98994d87b2"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{2., 0.}, {2., 0}}, {{4., 0.}, {4., 0}}, {{6., 0.}, {
         6., 0}}, {{8., 0.}, {8., 0}}, {{10., 0.}, {10., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.20160271054118892`}, {1., 0}}, {{3., 
         0.1644716616295874}, {3., 0}}, {{7., 0.05266634065286339}, {
         7., 0}}, {{9., 0.016893912660982457`}, {9., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{1., 0.20160271054118892`}, {2., 0.}, {3., 
     0.1644716616295874}, {4., 0.}, {6., 0.}, {7., 0.05266634065286339}, {8., 
     0.}, {9., 0.016893912660982457`}, {10., 0.}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{1, 10}, {0., 0.20160271054118892`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611468355489216`*^9, 3.761148419008313*^9, {3.761148516277192*^9, 
   3.7611485222034187`*^9}, 3.7615208964522505`*^9, {3.7615819248600407`*^9, 
   3.7615819654942527`*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"e1f3d392-aae0-4f61-8228-85b642564ebd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["As Initial Displacement", "Section",
 CellChangeTimes->{{3.761148538920209*^9, 3.761148543077918*^9}, {
  3.761148574923795*^9, 3.7611485770870066`*^9}, {3.761148873886891*^9, 
  3.761148875204361*^9}},ExpressionUUID->"79753701-9baa-4b28-9a4c-\
f9b270431350"],

Cell[CellGroupData[{

Cell["Full Solution", "Subsubsection",
 CellChangeTimes->{{3.761148258736432*^9, 
  3.761148261187578*^9}},ExpressionUUID->"6ced2a04-071a-4c9a-b4bd-\
6a8f21919ee0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ud", "[", 
    RowBox[{"x_", ",", "t_", ",", "k_", ",", "x0_", ",", "\[Delta]_"}], "]"}],
    ":=", 
   RowBox[{
    SubsuperscriptBox["\[Sum]", 
     RowBox[{"n", "=", "1"}], "k"], 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}], 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "n", " ", "x"}], "]"}], 
     RowBox[{"Cos", "[", 
      RowBox[{"\[Pi]", " ", "n", " ", "t"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761147096103902*^9, 3.7611471108746896`*^9}, {
  3.7611488772518725`*^9, 3.761148901855919*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"c159283c-2272-4cee-b3ec-e9c297e5cd88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]31", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x03", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.761147465637354*^9, 3.7611474657969275`*^9}, {
  3.7611482252018476`*^9, 3.7611482264165974`*^9}, {3.761148932238864*^9, 
  3.761148932479731*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"242a9198-f6ff-429d-a8d8-9faa2a80e312"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ud", "[", 
      RowBox[{"x", ",", "t", ",", "40", ",", "x03", ",", "\[Delta]31"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".0001", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761147147696808*^9, 3.7611473394947453`*^9}, {
   3.7611475245235133`*^9, 3.761147540654536*^9}, {3.761148229190751*^9, 
   3.761148235786281*^9}, 3.76114890904375*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"7181cf05-cb78-4629-a3f2-3d2f14c76368"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1.6416497292768668`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.0001, 4}}, Typeset`size$$ = {
    360., {110., 115.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$29051$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$29051$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`ud[$CellContext`x, $CellContext`t$$, 
         40, $CellContext`x03, $CellContext`\[Delta]31], {$CellContext`x, 0, 
         1}, PlotLegends -> "Expressions", PlotRange -> {-1, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0.0001, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {170., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.76114728376038*^9, 3.7611473426534643`*^9}, {
  3.7611475279399357`*^9, 3.761147542785921*^9}, {3.7611476067279005`*^9, 
  3.7611476215590057`*^9}, {3.7611482326484995`*^9, 3.7611482366768703`*^9}, {
  3.7611489100779824`*^9, 3.761148913406114*^9}, {3.7626409570386443`*^9, 
  3.762640958017993*^9}},
 CellLabel->"Out[54]=",ExpressionUUID->"b51fa077-c14f-4a3c-a119-10a0e9b6ddfc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]2", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x02", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611476003937597`*^9, 3.7611476013661575`*^9}, {
  3.761148978192703*^9, 3.7611489785876465`*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"765241b4-46d7-42e7-808b-139309e789a2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"ud", "[", 
      RowBox[{"x", ",", "t", ",", "4", ",", "x02", ",", "\[Delta]2"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", ".0001", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611475890863323`*^9, 3.7611476360794973`*^9}, 
   3.7611489634865723`*^9, 3.7611495025244513`*^9},
 CellLabel->
  "In[111]:=",ExpressionUUID->"fc5e322f-b345-4ef0-a574-7b3de0e2ddf2"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 2.137730807771683, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 0.0001, 4}}, Typeset`size$$ = {
    360., {114., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$341829$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 0.0001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$341829$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        $CellContext`ud[$CellContext`x, $CellContext`t$$, 
         4, $CellContext`x02, $CellContext`\[Delta]2], {$CellContext`x, 0, 1},
         PlotLegends -> "Expressions", PlotRange -> {-1, 1}], 
      "Specifications" :> {{$CellContext`t$$, 0.0001, 4}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {161., 167.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.761147591993555*^9, 3.761147638961808*^9}, {
  3.761148956043229*^9, 3.7611489669540625`*^9}},
 CellLabel->
  "Out[111]=",ExpressionUUID->"86361583-bd0d-41dc-b57f-c33e60b239df"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Energy", "Subsection",
 CellChangeTimes->{{3.76114845743458*^9, 
  3.761148458333177*^9}},ExpressionUUID->"99a006c9-6033-45ef-8c94-\
e6878deb9113"],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", 
   RowBox[{"k_", ",", "x0_", ",", "\[Delta]_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"n", " ", "\[Pi]", " ", "x0"}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4", " ", "\[Delta]", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}]}], 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["n", "2"], " ", "\[Pi]", " ", 
          SuperscriptBox["\[Delta]", "2"]}]}]], "+", 
       FractionBox[
        RowBox[{"Sin", "[", 
         RowBox[{"n", " ", "\[Pi]", " ", "\[Delta]"}], "]"}], 
        RowBox[{"n", " ", "\[Pi]"}]]}], ")"}]}], ")"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.7611481178511353`*^9, 3.7611481886890707`*^9}, {
  3.7615815450148315`*^9, 3.761581546804174*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"4febe33b-28ea-4b37-9f90-42c59a60d0b8"],

Cell[CellGroupData[{

Cell["delta = 1/100", "Subsubsection",
 CellChangeTimes->{{3.7611442262145195`*^9, 
  3.761144232296647*^9}},ExpressionUUID->"8f87d161-c4bf-483f-ab73-\
c18d54908dd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, 
   3.761144293485469*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"a14fa6d9-7233-4426-950d-fa5cbda73091"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611444170292478`*^9, 3.7611444236934347`*^9}, {
  3.7611482831216097`*^9, 3.761148369853794*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"1c1c0616-3c39-417d-901a-ceee707d407c"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.00019733621433539985`}, {1., 0}}, {{2., 
        0.0009107712201097508}, {2., 0}}, {{3., 0.002260636880238909}, {
        3., 0}}, {{4., 0.004122849377217566}, {4., 0}}, {{5., 
        0.006177040482190737}, {5., 0}}, {{6., 0.00802997665366884}, {
        6., 0}}, {{7., 0.009366425953709043}, {7., 0}}, {{8., 
        0.010069249100323505`}, {8., 0}}, {{9., 0.010262680339688326`}, {
        9., 0}}, {{10., 0.010262680339688326`}, {10., 0}}, {{11., 
        0.010454183686416011`}, {11., 0}}, {{12., 0.011143065207971314`}, {
        12., 0}}, {{13., 0.012439938767734148`}, {13., 0}}, {{14., 
        0.014220058391067622`}, {14., 0}}, {{15., 0.016173808561630587`}, {
        15., 0}}, {{16., 0.01792725180749226}, {16., 0}}, {{17., 
        0.01918554285722096}, {17., 0}}, {{18., 0.019843906424737035`}, {
        18., 0}}, {{19., 0.020024179412684587`}, {19., 0}}, {{20., 
        0.020024179412684587`}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR18sO8rrtFpvKtpDxVwiJuQ4Ct1wxfK53B4zs+g
/6wlCcoXcNgme/ez3OMCKF/EYc20bWslfCuhfAmH5CuvLViLGqB8GYdNRWaZ
W/SaoXwFh0tWy/boz2+B8pUc8kRzF89kaYXyVdD4ag7vvwWcYMiE8TUcEm5o
PtW51Ablazks648PlKnqhPJ1HLL5n75Nl++F8vUcAvZ5v77bPwHKN3A4M/9h
Q2v0JCjf0MHhWtOf+KWToXwjB92/lSzfAqdA+cYOE9defmfeCOObwPkAJAFW
Pg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 20}, {0., 0.020024179412684587`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761144410919673*^9, 3.761144426004262*^9}, 
   3.7611461364831066`*^9, {3.7611483131987014`*^9, 3.7611483702437763`*^9}},
 CellLabel->"Out[84]=",ExpressionUUID->"5f6fb529-2cba-423a-96ca-e08d540723c5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
   3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
   3.7611440902338066`*^9}, 3.7611444455438347`*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"46022f60-2a7e-4a4f-a960-c9a3555005fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, 
   3.7611439802455397`*^9, 3.7611440554388747`*^9, {3.7611444571292562`*^9, 
   3.7611444594296117`*^9}, 3.761148394418605*^9},
 CellLabel->"In[86]:=",ExpressionUUID->"9ac87982-7482-4fc0-bc6b-28731bc45a66"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0003890351233959346}, {1., 0}}, {{2., 
        0.0016512792342875174`}, {2., 0}}, {{3., 0.0036115689836053724`}, {
        3., 0}}, {{4., 0.00556843726797348}, {4., 0}}, {{5., 
        0.006824083082061758}, {5., 0}}, {{6., 0.007209734166178518}, {
        6., 0}}, {{7., 0.007209734166178518}, {7., 0}}, {{8., 
        0.007592695946766316}, {8., 0}}, {{9., 0.008830888521182412}, {
        9., 0}}, {{10., 0.010747090903300126`}, {10., 0}}, {{11., 
        0.012653239039554506`}, {11., 0}}, {{12., 0.013872041925097573`}, {
        12., 0}}, {{13., 0.014245059329034051`}, {13., 0}}, {{14., 
        0.014245059329034051`}, {14., 0}}, {{15., 0.014612862760952649`}, {
        15., 0}}, {{16., 0.01579782734737483}, {16., 0}}, {{17., 
        0.01762513144088408}, {17., 0}}, {{18., 0.019436360711967398`}, {
        18., 0}}, {{19., 0.020590324651698317`}, {19., 0}}, {{20., 
        0.020942228566275718`}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR18sC+tP6n4ts7SHirgMLt88+TvvNFQPofDv+X1
oUzTcqF8AYfIm17/354rg/JFHJbozbo18XM1lC/h8MLQz/1Ley2UL4PGV3Bw
Mqo60yJZD+UrORwQVD39VrQJyldxWNa7XH4SUxuUr+awT/3Fvw8vO6F8DYdV
CrqfP2b0QPlaDnp8U+ubdXqhfB00vp6Dm6SbbeRbGN/AQU/Vwt5PdwKUb+iQ
EtLYE8QzCco3cth9uVBM4flkKN/YofXZD++FolOhfBOHo8sMtB8WTrUHAMOA
U/o=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 20}, {0., 0.020942228566275718`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439698689585`*^9, 3.761143982754935*^9}, {3.761144058387106*^9, 
   3.7611440952600126`*^9}, {3.761144452064659*^9, 3.7611444619807854`*^9}, 
   3.76114614562228*^9, 3.761148397037572*^9},
 CellLabel->"Out[86]=",ExpressionUUID->"b7f0c570-2e1f-41a8-a9ae-8efb71549f19"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{3.761144108937559*^9, 3.761144493334594*^9},
 CellLabel->"In[87]:=",ExpressionUUID->"1d544b07-9e0a-424a-a83a-016c2bb6dc14"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761144502139766*^9, 3.761144509016369*^9}, 
   3.761148404201439*^9},
 CellLabel->"In[88]:=",ExpressionUUID->"de9cf5af-44ee-4f8d-8194-4e7ee6eb5882"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0015498987490239328`}, {1., 0}}, {{2., 
        0.00309863800881728}, {2., 0}}, {{3., 0.00309863800881728}, {
        3., 0}}, {{4., 0.004642746634747096}, {4., 0}}, {{5., 
        0.0061833899634769745`}, {5., 0}}, {{6., 0.0061833899634769745`}, {
        6., 0}}, {{7., 0.0077148245886000276`}, {7., 0}}, {{8., 
        0.009240527408118794}, {8., 0}}, {{9., 0.009240527408118794}, {
        9., 0}}, {{10., 0.010752547737177712`}, {10., 0}}, {{11., 
        0.012256634549255026`}, {11., 0}}, {{12., 0.012256634549255026`}, {
        12., 0}}, {{13., 0.013742719411410028`}, {13., 0}}, {{14., 
        0.015218758300653747`}, {14., 0}}, {{15., 0.015218758300653747`}, {
        15., 0}}, {{16., 0.016672677681715882`}, {16., 0}}, {{17., 
        0.018114550921485624`}, {17., 0}}, {{18., 0.018114550921485624`}, {
        18., 0}}, {{19., 0.01953043335058621}, {19., 0}}, {{20., 
        0.02093240300365799}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR18sN8VIS2zPyXSHirgIHdZbm5AUiaUz4HGF3BY
2hd93pWlGMoXcYhbuU/qYHAllC+BxpdxuLz+WsmUmfVQvoJDiLDCjE1vmqB8
JTS+ikPTJ872PNY2KF/NYUlJ0hJGqU4oXwONr+Ww727BZBXVHihfx+EdT70m
s3Y/lK+HxjdwYLraUrpEaCKUb+iwqETj/byeSVC+ERrf2EH8qaDRyf+ToXwT
h9NO/id986faAwA47k8V
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 20}, {0., 0.02093240300365799}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, {3.761144500126153*^9, 3.761144511156642*^9}, 
   3.7611461626947947`*^9, 3.7611484068896875`*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"b3898486-4395-49f0-9873-a5b9e611bfc5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "100"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}, 
   3.761144579613611*^9, 3.761148409023014*^9},
 CellLabel->"In[90]:=",ExpressionUUID->"74e05c8f-5fac-4aaa-a8b3-ef605880fa7b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611484107873096`*^9, 3.7611484185625067`*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"80550d15-06ac-4edb-b759-f7fa804ac07a"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.0020665316653652437`}, {1., 0}}, {{2., 
        0.0020665316653652437`}, {2., 0}}, {{3., 0.004128942873057342}, {
        3., 0}}, {{4., 0.004128942873057342}, {4., 0}}, {{5., 
        0.006183133978030514}, {5., 0}}, {{6., 0.006183133978030514}, {
        6., 0}}, {{7., 0.008225046811527918}, {7., 0}}, {{8., 
        0.008225046811527918}, {8., 0}}, {{9., 0.01025068504810038}, {
        9., 0}}, {{10., 0.01025068504810038}, {10., 0}}, {{11., 
        0.012256134130870133`}, {11., 0}}, {{12., 0.012256134130870133`}, {
        12., 0}}, {{13., 0.01423758061374347}, {13., 0}}, {{14., 
        0.01423758061374347}, {14., 0}}, {{15., 0.016191330784306436`}, {
        15., 0}}, {{16., 0.016191330784306436`}, {16., 0}}, {{17., 
        0.01811382843733276}, {17., 0}}, {{18., 0.01811382843733276}, {
        18., 0}}, {{19., 0.020001671676133533`}, {19., 0}}, {{20., 
        0.020001671676133533`}, {20., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`], 
    AbsoluteThickness[1.6], {}, PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQjR18sK+ZkL73ytsEe6iAAyqfw0Fm+taVTS8LoHwB
NL6Ig7BAf3JNcCWUL4HGl3FgMm+S8L7RAOUroPGVHGYURazw/9cC5aug8dUc
jp1Srton2Qnla6DxtRzs1zzcMV2jF8rXQePrOeziOXWhdMoEKN8AjW/oYNXz
syivZxKUb4TGN3aoL79dFlg9Bco3gfMB8wBWeg==
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 20}, {0., 0.020001671676133533`}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7611468355489216`*^9, 3.761148419008313*^9},
 CellLabel->"Out[91]=",ExpressionUUID->"9ba4709c-dbef-48ae-9748-6a67a49ab584"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["delta = 1/10", "Subsubsection",
 CellChangeTimes->{{3.7611442262145195`*^9, 3.761144232296647*^9}, 
   3.7611484704266963`*^9},ExpressionUUID->"fe2ca3ec-0f7a-4da2-8539-\
0f0cc90e620d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "10"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, 
   3.761144293485469*^9, 3.7611484727500343`*^9},
 CellLabel->"In[92]:=",ExpressionUUID->"d2f8eab1-eeec-4abc-87f1-9a60fccd856d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611444170292478`*^9, 3.7611444236934347`*^9}, {
   3.7611482831216097`*^9, 3.761148369853794*^9}, 3.761148482473084*^9},
 CellLabel->"In[94]:=",ExpressionUUID->"0056c11b-cee1-4461-83af-d50e6b5fd356"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.019251345800656867`}, {1., 0}}, {{2., 
        0.08383382611230038}, {2., 0}}, {{3., 0.19148192619540833`}, {
        3., 0}}, {{4., 0.3152757788426448}, {4., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.019251345800656867`}, {2., 
     0.08383382611230038}, {3., 0.19148192619540833`}, {4., 
     0.3152757788426448}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 4}, {0., 0.3152757788426448}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761144410919673*^9, 3.761144426004262*^9}, 
   3.7611461364831066`*^9, {3.7611483131987014`*^9, 3.7611483702437763`*^9}, {
   3.7611484741792097`*^9, 3.7611484826815004`*^9}},
 CellLabel->"Out[94]=",ExpressionUUID->"8de18690-d609-4544-a4c9-8452575ae971"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "7"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611438147834964`*^9, 3.761143840995509*^9}, {
   3.761143961661048*^9, 3.7611439637463007`*^9}, {3.76114408415666*^9, 
   3.7611440902338066`*^9}, 3.7611444455438347`*^9, 
   3.761148489973461*^9},ExpressionUUID->"31fd773d-e61a-4288-be62-\
8c6939a84402"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.76114379638284*^9, {3.761143853125641*^9, 3.7611439284331975`*^9}, 
   3.7611439802455397`*^9, 3.7611440554388747`*^9, {3.7611444571292562`*^9, 
   3.7611444594296117`*^9}, 3.761148394418605*^9, {3.7611484925750723`*^9, 
   3.7611484961072536`*^9}},
 CellLabel->"In[96]:=",ExpressionUUID->"82ae0c82-33db-4ce0-8c74-2f1bf1d4074d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.019251345800656867`}, {1., 0}}, {{2., 
        0.08383382611230038}, {2., 0}}, {{3., 0.19148192619540833`}, {
        3., 0}}, {{4., 0.3152757788426448}, {4., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.019251345800656867`}, {2., 
     0.08383382611230038}, {3., 0.19148192619540833`}, {4., 
     0.3152757788426448}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 4}, {0., 0.3152757788426448}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7611438881143456`*^9, 3.7611439321518607`*^9}, {
   3.7611439698689585`*^9, 3.761143982754935*^9}, {3.761144058387106*^9, 
   3.7611440952600126`*^9}, {3.761144452064659*^9, 3.7611444619807854`*^9}, 
   3.76114614562228*^9, 3.761148397037572*^9, {3.761148492920149*^9, 
   3.7611484963046913`*^9}},
 CellLabel->"Out[96]=",ExpressionUUID->"877a6e54-35b5-420b-8ccc-39923d62b9cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "3"]}], ";"}]], "Input",
 CellChangeTimes->{3.761144108937559*^9, 3.761144493334594*^9, 
  3.7611485054297543`*^9},
 CellLabel->"In[97]:=",ExpressionUUID->"fc30c0cc-418c-4877-80ba-88ca3fbeb1bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761144502139766*^9, 3.761144509016369*^9}, 
   3.761148404201439*^9, 3.761148503221201*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"5912b538-a4ec-47ae-8cee-cc0d996a7a42"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.15120203290589168`}, {1., 0}}, {{2., 
        0.29139899821306997`}, {2., 0}}, {{3., 0.29139899821306997`}, {
        3., 0}}, {{4., 0.3940463362691808}, {4., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.15120203290589168`}, {2., 
     0.29139899821306997`}, {3., 0.29139899821306997`}, {4., 
     0.3940463362691808}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 4}, {0., 0.3940463362691808}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611441117640843`*^9, {3.761144500126153*^9, 3.761144511156642*^9}, 
   3.7611461626947947`*^9, 3.7611484068896875`*^9, 3.7611485105000677`*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"a35c5c06-1521-4fc2-9136-9a722617a20a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Delta]1", "=", 
   FractionBox["1", "10"]}], ";", 
  RowBox[{"x01", "=", 
   FractionBox["1", "2"]}], ";"}]], "Input",
 CellChangeTimes->{{3.7611441389911346`*^9, 3.7611441391656694`*^9}, 
   3.761144579613611*^9, 3.761148409023014*^9, 3.761148513609749*^9},
 CellLabel->
  "In[101]:=",ExpressionUUID->"a7f3b0b3-9bd4-4dd2-b418-efb766034d4a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"e1", "[", 
    RowBox[{"n", ",", "x01", ",", "\[Delta]1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7611484107873096`*^9, 3.7611484185625067`*^9}, {
  3.7611485158224435`*^9, 3.7611485160528264`*^9}},
 CellLabel->
  "In[102]:=",ExpressionUUID->"eaa3e880-0646-40ef-8c69-7bade605c195"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], LineBox[{{{0., 0.}, {0., 0}}},
      VertexColors->None]}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], Opacity[0.2], 
     LineBox[{{{1., 0.20160271054118892`}, {1., 0}}, {{2., 
        0.20160271054118892`}, {2., 0}}, {{3., 0.3660743721707763}, {
        3., 0}}, {{4., 0.3660743721707763}, {4., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.20160271054118892`}, {2., 
     0.20160271054118892`}, {3., 0.3660743721707763}, {4., 
     0.3660743721707763}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 4}, {0., 0.3660743721707763}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7611468355489216`*^9, 3.761148419008313*^9, {3.761148516277192*^9, 
   3.7611485222034187`*^9}},
 CellLabel->
  "Out[102]=",ExpressionUUID->"564ee1b1-fcc5-404f-9976-7bad3e34c99a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{"1", "-", "x"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"1", "/", "2"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.761653867501717*^9, 3.7616539032217913`*^9}, {
  3.7616539715544114`*^9, 3.761653996107954*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"29a10882-c8cf-4b16-aa60-4eae3c9590d3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVmXk8lN8Xx9FCFCl7CKUQUomkOpRQUiKp7EuTJUu2lOwUIpJk32fmiWxF
yXbt29hlS6kUZixNKlR8+d3fX/N6v577us8953zO557nNZI2robX2VhYWNpZ
WVj+/3v2Or23lmF8wkmJVFnLOF2z/pSI2ydhZWDT+3t/F/9udCgjMfWVsBYk
cIS4H9uqjPQ6h16mCV+CnX98Q0o2aiETu6XqOGE7WPmT4l3/ywh93P/gVLSw
J3DnWSVs7rJFmfwX7kcKhwLx0UaFI8QDBXG82hshHA9v4/0OB34PRleuZhX9
mM+Fx9cyYoZuxSGutSAzHfEiYLc49Tr1RRJKdDCxkNcugujIqIju5iS0+528
Fa9LESQP2P83/zkJnXg+ZDtaXQRjYr59G/iT0dvnCWVvFIvBbsA+xOFeMpoz
mq3S6yqG832+D3fppiBj4hnNY8tLSH0iGO3dn4qkL36nNzwsBbbScRH1igwk
EqBz9EZWKSgVj/Xp92WgrQWZDznflMLU3f8kz09noH8cRooXx0vhwNnj7Vxb
MlFP7RuPsSNlcElTTvjGsUx0Vylo9c9EGVQbnm0lJWWiLh4+PkWNN3CQNHzj
2bksdLtLDRJ/vwVNt6Fo6cRsxK1YNtHGUQEbdem2Z7KyUW60UtSyaAUYeY2m
Xs/LRr3n9o5YnK6A4M9uxx9UZaN9ND4P6YQK0HKItXX9nI0+tTApL1UrIa7x
+tN3e3KQTh2Zu/NuFSjlhon9V5CDxiQky1YfVYHtXKu60usc5BmYaqqUUwV7
N++fM63JQVnwhHhCqwLz9048aV05aLk68OQ10WqIk/3s2/w9BxVVmHpPVVeD
5fbb2m8UcpFgKe8YKysCa4G7SjsoucgsavnSNwEEa9pbbNcKclG23QStWR7B
3eEl/tGyXCTP//btwysItlsGrr/TlItOels95S9GcKp+x9EL33KRSqoJJX5/
LVTvsCkjSZCRtQXFnBirhVe/LUwvxJFR6NkdSUmMWlhtaDPYm0RGFJXYd5G/
ayFpZWHdUgYZzXLf1XPmrIOhacj3KyAjb6SvdlClDhqCLx+SaSWjKIkFvqro
OsgY9Rz6tUxGr8dPdXQfq4dxTmLM3ZyCBnWD5qN16kHTN23XPlsKWiysEThn
WA8lSlMFo/YUpOqrZt16ox6WhSqTpD0pqHz7/sXauHpgZJ9gNY+koLdaIhIv
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
       "]]},
     Annotation[#, "Charting`Private`Tag$10949#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {-0.04811252002864552, 0.048112510177247464`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.761653895929266*^9, 3.7616539037189083`*^9}, {
  3.761653972574568*^9, 3.7616539964446287`*^9}},
 CellLabel->"Out[29]=",ExpressionUUID->"2fb492a1-8f5f-4558-8f28-e6256768cbe9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fun", "[", "x_", "]"}], ":=", 
  RowBox[{"x", " ", 
   RowBox[{"Exp", "[", 
    RowBox[{"-", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7616540434813976`*^9, 3.761654061264775*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"bef06dcd-c104-4f5e-a391-f36aec73d012"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"fun", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7616539323025885`*^9, 3.7616539448131914`*^9}, {
  3.761654039753828*^9, 3.7616540895475655`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"400fefe3-f311-42ce-8910-0e2a487ab1d3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
sxpKp9z8bFbPIRF66Qvj5lagZ+rG7vnvBEnuLgu9eRtLYdLrERB3Qoh4DydF
txwphnlPjIqcnDAxvRR3t320EIMfmIEVmfPJ84GAoGtUHtQlWcv1HUXJ1i9f
aeUDbyCMKaeOCTHS5XZjXXNmNraP2P1UsJUguS5GK2lJz9Fa7MJrpypJtNy/
MF8LZuFVRIkDbUqSrNZbc+dJ3SO4zfHpqquTIvKeAh6un9Lg7H3ulcgtaTIz
YP198Eky1rir1Jk5LSAaNM3naT/v4qOU6nyfzQvJfS3BkZbJW8jLuvifKv8i
wrvCUH7fVALO8a7eVfN5EeH4yXXc1b8G4Y6zxp7Zi8n6QbfdbzRi0PuAHn/X
fwnxyJjbLRByCfErlwq8tV1KLMecU9PmhiPmllu5E02G8AnIGmr4B8Mu/kCd
SL8Mean1K/RyWCCmDdJm7hYsI35yRtlH75xDd6+eX3G4LPG7lTiw3tYXyToa
y2qdlhNPr9B7eUdOIjPUR9JdTY5oz92VmLDvOMJtnU35p+RImeGnpZdvHcHG
jvuPwmvlCa/UO3GRSTdIqB+aflovT9TUZ3229Lhh+IL69tYmeeI1EBZ5stkN
qYy8npWf5ElkTvjtOa/csOBIs3xVnzypjV/5NP20G37585sK8tDI1DWhgJ5Z
V7TN13xvvJRGeFZqm/OLuSJx1X+ZtaY0om7mtPi4hTMmJ4zSgnfSiISwTNFP
4gyLgvHbmy1o5IZFhHDUOmcIWptEp1nRyPujcm51C53h4z/jEbCPRvStQ1xa
Opiw+rhnpZo7jRRoN3JajjIh4rMgJfoijVwoX/LzWLwTLhRdTjR9SyOCjhar
vHgOYvBzUfxMLre/hyV0vjti9+xEzMN8GpFpUDbLbHCEqqZdJH8RjYgOfbpe
lOyI1gyls3llNHL+umviC0NHrLtRuF+lmUa2Ltgy8vaKA/qOceTmj9FICqN+
oYDaAexcZptWpUgnu0c1f0km2iGxR71ovxKdxKiu4zwLtUNPplD7sDKdKCwy
dbY/aQd/ki8hrkInWw/m32g1t8MTV4a/tQad2ItJ73cVtIPwM45Vhw6dqFyK
WFnpuw/lBld4RnfTiZN5EivIeS+2eZbvl4ykk9sSEaVzD+zGr9bvRiVRdKJd
5ha+2Ww3svVF1vlG00lHwli2r/ZuKC21FPp8lU5S1sqsWSqzGyIln7LTE+gk
M2UkbYyyRevSUVGSSic8hg3fvtna4njpgiLPQjrpLz4x54GdDe7KMhVrpujk
ALlYWhtqhS3rVdSZP+nk9CrFxBI/KzTvmNw0PU0nfesfepccsYKQb5ip4m86
GbFuUOq0tMLxhsfe/nwK5JWK7NcLclYgYRNFquIKRCaiy/bwW0t8Gws5cHml
Agl8ltLwYmoXFD88TDDfr0C8ojfsKha1QJ3qdGqHvQIRX7jaz2jaHH4Jxi89
HBTIdWJv0PbNHNWHv38Mc1IgWSf3Jq/OMYe3hMq8QncFsuzDNpdzzuYoPJB1
bs0pBZIXIB1bk78TdtPZByUuK5Ctilcchs6YIUateHVjgQKxbecVWS5rgnSt
/fMuFimQmTWBn32FTFCoP9mvUaxA5I00t32d3IHRfUppsaUKxHy6K76zdgdM
w6LkLWsUyG7atGFk4A4IdlotqG9TINrKXzLDB4xxLqb7T+2kAhn1bxT+Xrwd
bhMCDZWrGaSdaTS25K4hHB4b1NmrMkj1rraNXVcNsdsppHpMjUE4tLtiLwIN
YfSRv2yhBoM4NQzv82EaQimDL89pE4MsFCq8ckbJEL1MnrQZfQZhXLLc4v3M
AC6Ns36rDjBIZGoZNVGtD+bzcVrkVQbhyeTMfS+vh6MXrX+bxDKIyfzL1Wcl
9eBjnU2JXGMQjf8E0sGvh4gpnysxCQwy0XYncrBvG7I2z8zeuMMgshLe/CVZ
2zDz/h/rQQaDNC7lCTtPtiGmUeRySTmDKFluyWw9QnAr5dihsEoGGd2sGd/r
QJByqk7fuJpBDuf6x/y2JHi9KOZXdR2DiGkLPTbWIuiwkz7U1MIgn3vWR+2d
Q6DcvVT/WzeDPM/4lX1PD1ibfVYutZdBYqW3zv2xCtgS2j7j2s8gYfc14xwk
ATPlO8++DzLIrKHH4sNduvA+QpPjcBjkdXKeAfOCLvy3Bs28mGCQ0s2Hii3c
dREq+q351BSDeBhLCeyy0EXi05RL09MMIuhbfzNCXhfJgQLuub8YZOdJrYai
ubrIsHTV8//NILwxhtfms3WQrVC2XPcvg6Qn5TccatVBwYTSDPcDQIQUj51v
LdLB/wAXFaeH
       "]]},
     Annotation[#, "Charting`Private`Tag$13371#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 0.3678793566732331}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7616539355824423`*^9, 3.7616539452259912`*^9}, {
  3.761654058788582*^9, 3.7616541101631827`*^9}},
 CellLabel->"Out[36]=",ExpressionUUID->"9879fde3-8a8f-4698-9181-bd5befeb0093"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{766, 772},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Microsoft Windows (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 333, 8, 28, "Input",ExpressionUUID->"d6e3e0cd-cb36-434c-bd22-d6a20d1099f3"],
Cell[916, 32, 488, 12, 65, "Output",ExpressionUUID->"e2753d56-7ce7-41e1-b587-ba48c608e2ca"]
}, Open  ]],
Cell[1419, 47, 860, 24, 53, "Input",ExpressionUUID->"4a51fb01-4824-495d-8ef7-9d3037074aab"],
Cell[CellGroupData[{
Cell[2304, 75, 1202, 32, 74, "Input",ExpressionUUID->"8321ec60-f08c-4816-a682-19edd482a83e"],
Cell[3509, 109, 899, 21, 59, "Output",ExpressionUUID->"b9a859a7-e571-4600-8a5f-2275afb5654b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4445, 135, 187, 3, 44, "Subsubsection",ExpressionUUID->"cf86cfe7-b4e5-4273-a9df-0d1e7035ea65"],
Cell[4635, 140, 1296, 31, 55, "Input",ExpressionUUID->"b2740c01-ac50-485b-a10d-7d50ad0d7be6"],
Cell[CellGroupData[{
Cell[5956, 175, 978, 26, 55, "Input",ExpressionUUID->"85e364dd-38d0-4e07-b1f0-7e053bc8898f"],
Cell[6937, 203, 1296, 38, 230, "Output",ExpressionUUID->"aa5389ee-a8b9-46d3-87b5-36df0bf5c3ac"]
}, Open  ]],
Cell[8248, 244, 303, 7, 51, "Input",ExpressionUUID->"f0baf7f4-bb87-48dc-a4ff-c446bd06ca0e"],
Cell[CellGroupData[{
Cell[8576, 255, 364, 9, 28, "Input",ExpressionUUID->"c5a2e4e5-7a34-43b4-bf21-2fcb86f125dc"],
Cell[8943, 266, 6528, 127, 238, "Output",ExpressionUUID->"906f1be1-4584-4a1f-8af6-49b17202bfc1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15508, 398, 917, 23, 55, "Input",ExpressionUUID->"69ca82e0-c4f2-40b8-83db-2814732d7b45"],
Cell[16428, 423, 297, 6, 56, "Output",ExpressionUUID->"d90a47e5-9a5f-45d4-9307-6e7da9286188"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16762, 434, 1591, 39, 145, "Input",ExpressionUUID->"656c9f19-0cd7-4f79-87f0-9681ce625250"],
Cell[18356, 475, 24940, 427, 234, "Output",ExpressionUUID->"b965a63b-02a5-4b80-91fd-35f05e0c0920"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43333, 907, 3085, 66, 154, "Input",ExpressionUUID->"ee38a0c6-46f1-44fb-95b0-e52f3e98fe0d"],
Cell[46421, 975, 110441, 1945, 236, "Output",ExpressionUUID->"6c97cfd4-116b-420f-b898-9d6de8a455b0"]
}, Open  ]],
Cell[156877, 2923, 402, 9, 51, "Input",ExpressionUUID->"4399563e-63d8-4f56-8ee4-56653a83796f"],
Cell[CellGroupData[{
Cell[157304, 2936, 848, 22, 55, "Input",ExpressionUUID->"c80ebbbd-cc39-4b99-bac2-00e7827693d4"],
Cell[158155, 2960, 451, 11, 69, "Output",ExpressionUUID->"49671d10-1483-49da-a16f-034868735748"]
}, Open  ]],
Cell[CellGroupData[{
Cell[158643, 2976, 1287, 38, 111, "Input",ExpressionUUID->"263bc449-38b4-4026-b78f-c6702453e322"],
Cell[159933, 3016, 25495, 505, 234, "Output",ExpressionUUID->"ef66df30-cc2c-4725-ac52-9a1f2df2b1b3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185465, 3526, 654, 19, 77, "Input",ExpressionUUID->"d39a79e1-b8e5-4da9-98b1-36c8b5dc4354"],
Cell[186122, 3547, 177, 4, 55, "Output",ExpressionUUID->"8598112c-6185-4a7e-9de3-0bb8276e90a7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186336, 3556, 926, 24, 55, "Input",ExpressionUUID->"2f7bd202-d0b0-478a-a7ee-173de1d4e0f6"],
Cell[187265, 3582, 410, 12, 69, "Output",ExpressionUUID->"cd3dc093-412e-4710-ab04-74a17bbb3fe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187712, 3599, 2084, 51, 154, "Input",ExpressionUUID->"21475dd3-5c02-48b8-b96e-3cad91a6f1de"],
Cell[189799, 3652, 109174, 1926, 236, "Output",ExpressionUUID->"fbb628ff-79e9-4ecf-8227-13925249d6bf"]
}, Open  ]],
Cell[298988, 5581, 280, 8, 51, "Input",ExpressionUUID->"67fd52ee-6d2a-481b-a71d-b797c38f6333"],
Cell[CellGroupData[{
Cell[299293, 5593, 296, 8, 28, "Input",ExpressionUUID->"1f4d9cac-1220-4a27-a90c-921fb917b487"],
Cell[299592, 5603, 7006, 135, 238, "Output",ExpressionUUID->"3c2aa0e7-1290-4ef3-a5e0-f75831038eeb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306635, 5743, 853, 23, 55, "Input",ExpressionUUID->"0c9a45a9-9078-4811-aae7-094ea1fe503c"],
Cell[307491, 5768, 339, 10, 63, "Output",ExpressionUUID->"d15b9d43-87b1-4a09-895f-eacca15dce46"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307867, 5783, 2155, 53, 154, "Input",ExpressionUUID->"ad3b701a-b07e-4fed-ad7a-8b4588501601"],
Cell[310025, 5838, 107346, 1897, 236, "Output",ExpressionUUID->"2f80acb6-9056-4f92-8a8e-746d8b160a15"]
}, Open  ]],
Cell[417386, 7738, 308, 8, 51, "Input",ExpressionUUID->"747e63b0-1e30-4f22-9598-6bacaf9276ae"],
Cell[CellGroupData[{
Cell[417719, 7750, 853, 23, 55, "Input",ExpressionUUID->"4568c6cb-d52e-4998-bb0d-292d548b7e3b"],
Cell[418575, 7775, 249, 6, 56, "Output",ExpressionUUID->"7922d9cd-c984-4ee2-9fb9-20229c83feb7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418861, 7786, 2157, 53, 154, "Input",ExpressionUUID->"28fac323-b60b-4d17-be52-1290306aecd0"],
Cell[421021, 7841, 104022, 1842, 236, "Output",ExpressionUUID->"41d9ac69-9de4-4dfe-afc7-2d354f64f138"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[525092, 9689, 166, 3, 44, "Subsubsection",ExpressionUUID->"9bc8da92-f94b-489f-a44f-5bf07b9db9b9"],
Cell[525261, 9694, 329, 8, 51, "Input",ExpressionUUID->"a230f1b8-85c2-42fc-b0e7-3f66c1134c04"],
Cell[CellGroupData[{
Cell[525615, 9706, 1035, 23, 67, "Input",ExpressionUUID->"bd24bfa9-3ba9-49b9-96e0-4de7b8c87528"],
Cell[526653, 9731, 127224, 2218, 232, "Output",ExpressionUUID->"d38bfa3b-7ef4-4fd7-a6d3-874d9a818aaa"]
}, Open  ]],
Cell[653892, 11952, 429, 9, 51, "Input",ExpressionUUID->"85c987e3-356b-4e26-b727-3c7ee3ac64d4"],
Cell[CellGroupData[{
Cell[654346, 11965, 1169, 26, 67, "Input",ExpressionUUID->"623a6c0c-3f0b-46fe-8d33-2e828b5b7812"],
Cell[655518, 11993, 130027, 2263, 237, "Output",ExpressionUUID->"d32feb78-7cd6-470a-9bc8-79a62f4871d5"]
}, Open  ]],
Cell[785560, 14259, 299, 7, 51, "Input",ExpressionUUID->"b629b722-06d6-40e8-9afa-50636939e577"],
Cell[CellGroupData[{
Cell[785884, 14270, 1032, 23, 67, "Input",ExpressionUUID->"579ef880-2b06-4ac5-a94a-bf97f2dd2419"],
Cell[786919, 14295, 127004, 2215, 238, "Output",ExpressionUUID->"380cefd1-a03a-49d0-945c-2d8308cbf49f"]
}, Open  ]],
Cell[913938, 16513, 335, 9, 51, "Input",ExpressionUUID->"aa9319e4-c24b-4dc9-a6f1-05862906c8e9"],
Cell[CellGroupData[{
Cell[914298, 16526, 292, 7, 28, "Input",ExpressionUUID->"a934dfed-c7ff-41a9-9334-e1f9e1c1dc96"],
Cell[914593, 16535, 4486, 93, 238, "Output",ExpressionUUID->"137fa2e8-efdb-4c46-b264-0d3ceaf3ed4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919116, 16633, 1187, 26, 67, "Input",ExpressionUUID->"5acf2dd2-d31d-4ba8-b5c1-b05cd4f80ed0"],
Cell[920306, 16661, 139539, 2417, 232, "Output",ExpressionUUID->"d9a056fb-fd56-466f-b643-9b6e92c53ab6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059894, 19084, 215, 4, 67, "Section",ExpressionUUID->"7c7578f5-c6cf-4ea9-992d-5ca386ffa74d"],
Cell[CellGroupData[{
Cell[1060134, 19092, 164, 3, 44, "Subsubsection",ExpressionUUID->"9d9d6986-8023-4cb4-9597-260d4ef62db5"],
Cell[1060301, 19097, 1190, 32, 55, "Input",ExpressionUUID->"f248b5d2-bc1d-4ee6-9469-95a767a6e81b"],
Cell[1061494, 19131, 361, 9, 51, "Input",ExpressionUUID->"90a93809-994a-4f8b-a3a3-7630f83950cf"],
Cell[CellGroupData[{
Cell[1061880, 19144, 826, 21, 48, "Input",ExpressionUUID->"e49d51a2-83d9-4e89-bcd7-a62b7c06b01f"],
Cell[1062709, 19167, 2160, 41, 422, "Output",ExpressionUUID->"7f25524a-e051-4840-a0d2-d90a1581d9a2"]
}, Open  ]],
Cell[1064884, 19211, 309, 8, 51, "Input",ExpressionUUID->"df1f56ff-9c40-44ee-a205-534eb990237a"],
Cell[CellGroupData[{
Cell[1065218, 19223, 753, 20, 48, "Input",ExpressionUUID->"cbad48c3-1266-4b80-9238-0cbbe38d5219"],
Cell[1065974, 19245, 1961, 39, 347, "Output",ExpressionUUID->"5dc81b65-cf0b-4bd7-b1e5-3a6822f73254"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067984, 19290, 153, 3, 53, "Subsection",ExpressionUUID->"14353b11-890f-4476-a62f-42f0a52d3a28"],
Cell[1068140, 19295, 1003, 26, 55, "Input",ExpressionUUID->"d829492e-df30-4a01-97e9-51abfd1f26b0"],
Cell[CellGroupData[{
Cell[1069168, 19325, 166, 3, 44, "Subsubsection",ExpressionUUID->"6daf96d7-24c5-4982-b81e-c1aae6b0e336"],
Cell[1069337, 19330, 334, 9, 51, "Input",ExpressionUUID->"57d6efd4-543e-44ad-b6a8-1df523d67db0"],
Cell[CellGroupData[{
Cell[1069696, 19343, 599, 13, 28, "Input",ExpressionUUID->"a4cfd14b-0fa1-43c0-85fe-ad90989c45e4"],
Cell[1070298, 19358, 4369, 100, 234, "Output",ExpressionUUID->"2271c78f-af0b-4043-9df8-8f620779c5cb"]
}, Open  ]],
Cell[1074682, 19461, 434, 10, 51, "Input",ExpressionUUID->"6ba6663c-0a79-4b26-a14d-921ba41e5b66"],
Cell[CellGroupData[{
Cell[1075141, 19475, 697, 15, 28, "Input",ExpressionUUID->"98e7fda9-a21a-4a36-bcf1-f599b71ddc99"],
Cell[1075841, 19492, 4454, 100, 240, "Output",ExpressionUUID->"7f8e0f0f-36b4-4cbb-b86b-d5c00a31244b"]
}, Open  ]],
Cell[1080310, 19595, 303, 8, 51, "Input",ExpressionUUID->"3d596e68-6e03-4348-90b3-792be48546b8"],
Cell[CellGroupData[{
Cell[1080638, 19607, 567, 12, 28, "Input",ExpressionUUID->"a529df3a-918c-410e-86e9-ce0c5f9eca46"],
Cell[1081208, 19621, 5254, 113, 234, "Output",ExpressionUUID->"3d2d512a-6b20-4d81-bfa1-3ff1cd6835aa"]
}, Open  ]],
Cell[1086477, 19737, 357, 9, 51, "Input",ExpressionUUID->"b25b534b-af91-4a11-8001-a89aaed153d7"],
Cell[CellGroupData[{
Cell[1086859, 19750, 546, 12, 28, "Input",ExpressionUUID->"0115ec2e-529f-4993-a988-8e42322d3f2b"],
Cell[1087408, 19764, 4951, 108, 234, "Output",ExpressionUUID->"192dfd52-f80e-4ec3-82fc-7aeff633922e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1092408, 19878, 190, 3, 44, "Subsubsection",ExpressionUUID->"24cf5530-670e-49cf-a813-8ec1023c100a"],
Cell[1092601, 19883, 357, 9, 51, "Input",ExpressionUUID->"bafbfe53-ad98-4c7a-817b-c4557be2edb3"],
Cell[CellGroupData[{
Cell[1092983, 19896, 675, 14, 28, "Input",ExpressionUUID->"0c6511bd-a386-4ccc-bb6b-094de8e57c28"],
Cell[1093661, 19912, 368, 9, 47, "Message",ExpressionUUID->"82ebe0f9-9ff4-46f4-a935-741645405553"],
Cell[1094032, 19923, 403, 10, 21, "Message",ExpressionUUID->"184ab8a2-585c-44d7-91bb-26698cca25cd"],
Cell[1094438, 19935, 3829, 91, 241, "Output",ExpressionUUID->"42aa065b-0a69-4b5c-b611-36fed67de0a1"]
}, Open  ]],
Cell[1098282, 20029, 455, 10, 51, "Input",ExpressionUUID->"bf18a375-e33a-483e-87ad-70934cef161b"],
Cell[CellGroupData[{
Cell[1098762, 20043, 801, 16, 28, "Input",ExpressionUUID->"83f6b1d7-9e8c-499a-b9c1-fb0d486db520"],
Cell[1099566, 20061, 368, 9, 47, "Message",ExpressionUUID->"955c0d9a-2538-4cbb-a8be-b8fce60b6e89"],
Cell[1099937, 20072, 401, 10, 21, "Message",ExpressionUUID->"cefc1768-1204-47aa-9a8d-1e31ee86fa2b"],
Cell[1100341, 20084, 3956, 92, 242, "Output",ExpressionUUID->"19806974-4308-4901-98ce-8c8add3b0887"]
}, Open  ]],
Cell[1104312, 20179, 379, 10, 51, "Input",ExpressionUUID->"ae72bd70-2e24-4155-a8eb-c1a87835941c"],
Cell[CellGroupData[{
Cell[1104716, 20193, 636, 13, 28, "Input",ExpressionUUID->"77d19aee-d4c7-456b-a245-53f802300715"],
Cell[1105355, 20208, 366, 9, 47, "Message",ExpressionUUID->"0f2325c3-8011-49d1-9a79-8129113986e7"],
Cell[1105724, 20219, 403, 10, 21, "Message",ExpressionUUID->"03bef89d-2b99-4cb3-8e36-00ab49b5c7bf"],
Cell[1106130, 20231, 3738, 89, 241, "Output",ExpressionUUID->"d9483531-d1e5-48f9-9766-bcc7f6ac236c"]
}, Open  ]],
Cell[1109883, 20323, 378, 9, 51, "Input",ExpressionUUID->"9dc24396-7093-4bbd-b7e0-bce0f4ca236f"],
Cell[CellGroupData[{
Cell[1110286, 20336, 641, 13, 28, "Input",ExpressionUUID->"91ffb521-ecf2-4d6f-bff8-09ba84c6a783"],
Cell[1110930, 20351, 390, 9, 47, "Message",ExpressionUUID->"666771b7-4984-4d5e-9616-a5198c47d22a"],
Cell[1111323, 20362, 427, 10, 21, "Message",ExpressionUUID->"b488ff33-aab4-4c81-92f3-8a98994d87b2"],
Cell[1111753, 20374, 3608, 88, 241, "Output",ExpressionUUID->"e1f3d392-aae0-4f61-8228-85b642564ebd"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1115434, 20470, 265, 4, 67, "Section",ExpressionUUID->"79753701-9baa-4b28-9a4c-f9b270431350"],
Cell[CellGroupData[{
Cell[1115724, 20478, 164, 3, 44, "Subsubsection",ExpressionUUID->"6ced2a04-071a-4c9a-b4bd-6a8f21919ee0"],
Cell[1115891, 20483, 1238, 32, 75, "Input",ExpressionUUID->"c159283c-2272-4cee-b3ec-e9c297e5cd88"],
Cell[1117132, 20517, 406, 9, 51, "Input",ExpressionUUID->"242a9198-f6ff-429d-a8d8-9faa2a80e312"],
Cell[CellGroupData[{
Cell[1117563, 20530, 846, 20, 48, "Input",ExpressionUUID->"7181cf05-cb78-4629-a3f2-3d2f14c76368"],
Cell[1118412, 20552, 2127, 40, 365, "Output",ExpressionUUID->"b51fa077-c14f-4a3c-a119-10a0e9b6ddfc"]
}, Open  ]],
Cell[1120554, 20595, 359, 9, 51, "Input",ExpressionUUID->"765241b4-46d7-42e7-808b-139309e789a2"],
Cell[CellGroupData[{
Cell[1120938, 20608, 778, 20, 48, "Input",ExpressionUUID->"fc5e322f-b345-4ef0-a574-7b3de0e2ddf2"],
Cell[1121719, 20630, 1922, 38, 347, "Output",ExpressionUUID->"86361583-bd0d-41dc-b57f-c33e60b239df"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123690, 20674, 153, 3, 53, "Subsection",ExpressionUUID->"99a006c9-6033-45ef-8c94-e6878deb9113"],
Cell[1123846, 20679, 1003, 26, 55, "Input",ExpressionUUID->"4febe33b-28ea-4b37-9f90-42c59a60d0b8"],
Cell[CellGroupData[{
Cell[1124874, 20709, 166, 3, 44, "Subsubsection",ExpressionUUID->"8f87d161-c4bf-483f-ab73-c18d54908dd6"],
Cell[1125043, 20714, 330, 8, 51, "Input",ExpressionUUID->"a14fa6d9-7233-4426-950d-fa5cbda73091"],
Cell[CellGroupData[{
Cell[1125398, 20726, 542, 11, 28, "Input",ExpressionUUID->"1c1c0616-3c39-417d-901a-ceee707d407c"],
Cell[1125943, 20739, 4353, 98, 239, "Output",ExpressionUUID->"5f6fb529-2cba-423a-96ca-e08d540723c5"]
}, Open  ]],
Cell[1130311, 20840, 430, 9, 51, "Input",ExpressionUUID->"46022f60-2a7e-4a4f-a960-c9a3555005fa"],
Cell[CellGroupData[{
Cell[1130766, 20853, 641, 13, 28, "Input",ExpressionUUID->"9ac87982-7482-4fc0-bc6b-28731bc45a66"],
Cell[1131410, 20868, 4477, 100, 238, "Output",ExpressionUUID->"b7f0c570-2e1f-41a8-a9ae-8efb71549f19"]
}, Open  ]],
Cell[1135902, 20971, 299, 7, 51, "Input",ExpressionUUID->"1d544b07-9e0a-424a-a83a-016c2bb6dc14"],
Cell[CellGroupData[{
Cell[1136226, 20982, 513, 11, 28, "Input",ExpressionUUID->"de9cf5af-44ee-4f8d-8194-4e7ee6eb5882"],
Cell[1136742, 20995, 4308, 98, 238, "Output",ExpressionUUID->"b3898486-4395-49f0-9873-a5b9e611bfc5"]
}, Open  ]],
Cell[1141065, 21096, 353, 8, 51, "Input",ExpressionUUID->"74e05c8f-5fac-4aaa-a8b3-ef605880fa7b"],
Cell[CellGroupData[{
Cell[1141443, 21108, 491, 10, 28, "Input",ExpressionUUID->"80550d15-06ac-4edb-b759-f7fa804ac07a"],
Cell[1141937, 21120, 4181, 95, 239, "Output",ExpressionUUID->"9ba4709c-dbef-48ae-9748-6a67a49ab584"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1146167, 21221, 190, 3, 44, "Subsubsection",ExpressionUUID->"fe2ca3ec-0f7a-4da2-8539-0f0cc90e620d"],
Cell[1146360, 21226, 353, 8, 51, "Input",ExpressionUUID->"d2f8eab1-eeec-4abc-87f1-9a60fccd856d"],
Cell[CellGroupData[{
Cell[1146738, 21238, 564, 11, 28, "Input",ExpressionUUID->"0056c11b-cee1-4461-83af-d50e6b5fd356"],
Cell[1147305, 21251, 3445, 84, 241, "Output",ExpressionUUID->"8de18690-d609-4544-a4c9-8452575ae971"]
}, Open  ]],
Cell[1150765, 21338, 433, 10, 51, "Input",ExpressionUUID->"31fd773d-e61a-4288-be62-8c6939a84402"],
Cell[CellGroupData[{
Cell[1151223, 21352, 694, 14, 28, "Input",ExpressionUUID->"82ae0c82-33db-4ce0-8c74-2f1bf1d4074d"],
Cell[1151920, 21368, 3568, 86, 241, "Output",ExpressionUUID->"877a6e54-35b5-420b-8ccc-39923d62b9cc"]
}, Open  ]],
Cell[1155503, 21457, 325, 8, 51, "Input",ExpressionUUID->"fc30c0cc-418c-4877-80ba-88ca3fbeb1bb"],
Cell[CellGroupData[{
Cell[1155853, 21469, 534, 11, 28, "Input",ExpressionUUID->"5912b538-a4ec-47ae-8cee-cc0d996a7a42"],
Cell[1156390, 21482, 3416, 84, 250, "Output",ExpressionUUID->"a35c5c06-1521-4fc2-9136-9a722617a20a"]
}, Open  ]],
Cell[1159821, 21569, 378, 9, 51, "Input",ExpressionUUID->"a7f3b0b3-9bd4-4dd2-b418-efb766034d4a"],
Cell[CellGroupData[{
Cell[1160224, 21582, 547, 12, 28, "Input",ExpressionUUID->"eaa3e880-0646-40ef-8c69-7bade605c195"],
Cell[1160774, 21596, 3368, 85, 241, "Output",ExpressionUUID->"564ee1b1-fcc5-404f-9976-7bad3e34c99a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1164179, 21686, 495, 13, 28, "Input",ExpressionUUID->"29a10882-c8cf-4b16-aa60-4eae3c9590d3"],
Cell[1164677, 21701, 10998, 197, 226, "Output",ExpressionUUID->"2fb492a1-8f5f-4558-8f28-e6256768cbe9"]
}, Open  ]],
Cell[1175690, 21901, 302, 7, 28, "Input",ExpressionUUID->"bef06dcd-c104-4f5e-a391-f36aec73d012"],
Cell[CellGroupData[{
Cell[1176017, 21912, 371, 8, 28, "Input",ExpressionUUID->"400fefe3-f311-42ce-8910-0e2a487ab1d3"],
Cell[1176391, 21922, 7581, 142, 271, "Output",ExpressionUUID->"9879fde3-8a8f-4698-9181-bd5befeb0093"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

